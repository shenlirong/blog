"use strict";(self.webpackChunktest3=self.webpackChunktest3||[]).push([[4646],{947:(n,e,s)=>{s.r(e),s.d(e,{comp:()=>t,data:()=>r});var a=s(641);const i={},t=(0,s(6262).A)(i,[["render",function(n,e){return(0,a.uX)(),(0,a.CE)("div",null,[(0,a.Q3)(" more "),e[0]||(e[0]=(0,a.Fv)('<h1 id="为什么vue3可以多个根节点" tabindex="-1"><a class="header-anchor" href="#为什么vue3可以多个根节点"><span>为什么Vue3可以多个根节点</span></a></h1><p><strong>‌Vue 3 允许组件包含多个根节点的核心原因在于引入了 Fragment（碎片化） 机制，通过虚拟 DOM 的结构升级实现了对多根节点的支持‌。</strong> 这一改进不仅解决了 Vue 2 时代模板结构冗余的问题，还通过更智能的渲染策略提升了性能表现。<br> 因为vue3引入了fragment概念，这是一个抽象的节点，如果发现组件是多根的会自动创建一个fragment节点，把多根节点视为自己的children。在patch时，如果发现这是一个fragment节点，则直接遍历children创建或更新。</p><p>Fragement的实现原理</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>Vue3会生成如下的虚拟结构</span></span>\n<span class="line"><span>const vnode={</span></span>\n<span class="line"><span>  type:Symbol.for(&#39;vue-fragement&#39;),//标识为fragement</span></span>\n<span class="line"><span>  children:[</span></span>\n<span class="line"><span>    {type:&#39;h1&#39;,children:&#39;标题&#39;}</span></span>\n<span class="line"><span>    {type:&#39;p&#39;,children:&#39;内容&#39;}</span></span>\n<span class="line"><span>  ]</span></span>\n<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="‌虚拟-dom-的结构升级" tabindex="-1"><a class="header-anchor" href="#‌虚拟-dom-的结构升级"><span>‌虚拟 DOM 的结构升级</span></a></h2><p>Vue 3 重构了虚拟 DOM 的实现机制：<br> 1.‌<strong>Fragment 抽象节点‌</strong>：当检测到多根节点时自动创建 Fragment 虚拟节点，将其子节点作为独立渲染单元。‌‌</p><p>2.‌<strong>分层对比算法‌</strong>：新的 diff 算法能独立处理每个根节点的更新，无需强制合并层级</p><p><strong>Vue 3 允许使用多个根节点的原因有以下几点</strong>：<br><strong>1、增强组件的灵活性；</strong><br><strong>2、简化模板结构；</strong><br><strong>3、提升性能</strong></p><p>在 Vue 2 中，每个组件只能有一个根节点，这在某些场景下会导致模板结构复杂且不直观。而 Vue 3 引入了多个根节点的支持，通过新的编译器和 Virtual DOM 改进，解决了这些问题，使开发更加高效和灵活。</p><h2 id="一、增强组件的灵活性" tabindex="-1"><a class="header-anchor" href="#一、增强组件的灵活性"><span>一、增强组件的灵活性</span></a></h2><p>在 Vue 3 中，允许组件包含多个根节点，可以使组件更加灵活，特别是在需要返回多个平级元素的场景下。例如，一个表单组件可能需要返回一个标题和多个输入框，如果只能有一个根节点，开发者就需要额外添加一个包裹元素，这样会导致代码不够简洁。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>&lt;template&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  &lt;h1&gt;标题&lt;/h1&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  &lt;input v-model=&quot;input1&quot; /&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>  &lt;input v-model=&quot;input2&quot; /&gt;</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>&lt;/template&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种方式使得模板更符合直觉和设计需求，无需额外的包裹元素。</p><h2 id="二、优势与影响" tabindex="-1"><a class="header-anchor" href="#二、优势与影响"><span>二、优势与影响</span></a></h2><p><strong>1.减少标签层级</strong>：<br> Vue 3不再需要唯一根标签后，开发者可以更加自由地组织组件的模板结构。<br> 这意味着可以减少不必要的DOM层级，使得DOM结构更加简洁和高效。</p><p><strong>2.提高渲染性能</strong>：<br> 减少DOM层级可以降低浏览器的渲染负担，从而提高页面的渲染性能。<br> 这对于大型应用或需要频繁更新DOM的应用来说尤为重要。</p><p><strong>3.优化内存占用</strong>：<br> 减少DOM层级还可以减少内存占用，因为浏览器不需要为额外的根标签分配内存。<br> 这有助于提升应用的性能和响应速度。</p><p><strong>4.增强组件灵活性</strong>：<br> 支持片段使得Vue 3的组件设计更加灵活和多样化。<br> 开发者可以根据实际需求来组织组件的模板结构，而无需受到唯一根标签的限制。</p><h2 id="三、实现方式" tabindex="-1"><a class="header-anchor" href="#三、实现方式"><span>三、实现方式</span></a></h2><p>Vue 3内部实现不再需要唯一根标签的机制，主要依赖于其虚拟DOM和渲染器的改进。以下是对Vue 3内部实现这一特性的详细解释：</p><p><strong>1、虚拟DOM的改进</strong><br> Fragment节点： Vue 3的虚拟DOM引入了Fragment节点，这使得组件可以返回多个顶级节点，而无需将它们包裹在一个单一的根元素内。<br> Fragment节点在虚拟DOM树中作为一个特殊的节点存在，它不会对应到真实的DOM节点，而是作为多个并列顶级节点的容器。<br> 渲染优化：Vue 3的渲染器在处理Fragment节点时，会将其内部的多个顶级节点直接渲染到父节点下，而不会创建额外的DOM层级。<br> 这减少了不必要的DOM操作，提高了渲染性能。</p><p><strong>2、编译器的优化</strong><br> 模板编译：Vue 3的编译器在编译模板时，会识别出Fragment节点，并将其转换为相应的虚拟DOM结构。<br> 编译器还会对模板中的指令、事件和插槽等进行处理，以确保它们在运行时能够正确执行。<br> 错误检查：尽管Vue3不再要求唯一根标签，但编译器仍然会进行一定的错误检查，以确保模板结构的合理性和一致性。如果模板中存在无法识别的结构或语法错误，编译器会抛出相应的错误信息。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>综上所述，Vue 3不再需要唯一根标签是框架设计上的一大进步，它带来了诸多优势和影响。这一变化不仅简化了模板结构、提高了渲染性能和优化了内存占用，还增强了组件的灵活性和多样性。因此，开发者在构建Vue 3应用时可以更加高效地利用这些特性来构建更加复杂和高效的应用。</p>',24))])}]]),r=JSON.parse('{"path":"/code/vue3-fragment.html","title":"为什么Vue3可以多个根节点","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","sticky":94,"category":["前端开发"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么Vue3可以多个根节点\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-21T15:13:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"reveal\\",\\"url\\":\\"https://shenlirong.github.io/test/\\"}]}"],["meta",{"property":"og:url","content":"https://shenlirong.github.io/test/blog/code/vue3-fragment.html"}],["meta",{"property":"og:site_name","content":"reveal"}],["meta",{"property":"og:title","content":"为什么Vue3可以多个根节点"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T15:13:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T15:13:21.000Z"}]]},"git":{"createdTime":1750518801000,"updatedTime":1750518801000,"contributors":[{"name":"shenlirong","username":"shenlirong","email":"shenlirong@inspur.com","commits":1,"url":"https://github.com/shenlirong"}]},"readingTime":{"minutes":4.5,"words":1351},"filePathRelative":"code/vue3-fragment.md","excerpt":""}')},6262:(n,e)=>{e.A=(n,e)=>{const s=n.__vccOpts||n;for(const[n,a]of e)s[n]=a;return s}}}]);