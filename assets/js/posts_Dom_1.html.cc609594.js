"use strict";(self.webpackChunktest3=self.webpackChunktest3||[]).push([[6686],{814:(e,s,n)=>{n.r(s),n.d(s,{comp:()=>t,data:()=>l});var a=n(641);const i={},t=(0,n(6262).A)(i,[["render",function(e,s){return(0,a.uX)(),(0,a.CE)("div",null,[(0,a.Q3)(" more "),s[0]||(s[0]=(0,a.Fv)('<h1 id="dom简介" tabindex="-1"><a class="header-anchor" href="#dom简介"><span>DOM简介</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>DOM 全名称 document object model 文档对象模型；</span></span>\n<span class="line"><span>JS中通过DOM 来操作HTML ，只要理解dom 就可以随心所欲操作web 页面。</span></span>\n<span class="line"><span>--文档</span></span>\n<span class="line"><span>  文档表示的就是整个HTML网页文档；</span></span>\n<span class="line"><span>--对象</span></span>\n<span class="line"><span>将网页中的每一个部分都转换成一个对象</span></span>\n<span class="line"><span>--模型</span></span>\n<span class="line"><span>使用模型来表示对象之间的关系，方便获取对象，通俗说，模型就是dom树，关联节点。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="节点" tabindex="-1"><a class="header-anchor" href="#节点"><span>节点</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>节点Node，是构成我们网页的最基本部分，网页中的每一个部分都可以成为一个节点。</span></span>\n<span class="line"><span>比如：属性、文本、注释、整个文档等都是一个节点，每个节点的类型不一样，有元素节点，属性节点、文本节点、文档节点等。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>',4))])}]]),l=JSON.parse('{"path":"/posts/Dom/1.html","title":"DOM简介","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","sticky":98,"category":["前端开发"],"head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DOM简介\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"reveal\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/test/posts/Dom/1.html"}],["meta",{"property":"og:site_name","content":"reveal"}],["meta",{"property":"og:title","content":"DOM简介"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":0.71,"words":212},"filePathRelative":"posts/Dom/1.md","excerpt":""}')},6262:(e,s)=>{s.A=(e,s)=>{const n=e.__vccOpts||e;for(const[e,a]of s)n[e]=a;return n}}}]);