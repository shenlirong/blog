export default "{\"documentCount\":305,\"nextId\":305,\"documentIds\":{\"0\":\"0\",\"1\":\"2\",\"2\":\"2@0\",\"3\":\"3\",\"4\":\"3@0\",\"5\":\"4\",\"6\":\"4@0\",\"7\":\"5\",\"8\":\"5#点、线、面\",\"9\":\"5#添加的地图-图层-type-是一个枚举类-其中取值有如下几种\",\"10\":\"5@0\",\"11\":\"5@1\",\"12\":\"6\",\"13\":\"6#持续部署cd有哪些工具\",\"14\":\"6#开源工具\",\"15\":\"6#商业云服务\",\"16\":\"6#专用工具\",\"17\":\"6#新兴趋势工具\",\"18\":\"6#选型参考维度\",\"19\":\"6#示例架构-现代cd工具链组合\",\"20\":\"6@0\",\"21\":\"7\",\"22\":\"7#_1-内存独立性\",\"23\":\"7#_2-数据影响机制\",\"24\":\"7#_3-实现复杂度\",\"25\":\"7#_4-使用场景不同\",\"26\":\"7#_5-实现方式不同\",\"27\":\"7@0\",\"28\":\"8\",\"29\":\"8@0\",\"30\":\"9\",\"31\":\"9@0\",\"32\":\"10\",\"33\":\"10@0\",\"34\":\"11\",\"35\":\"11#css-选择器是定义样式规则的关键引擎-我将从-11-大类选择器详细解析-涵盖基础用法与高阶应用场景\",\"36\":\"11#🔍-一、基础选择器-4种核心武器\",\"37\":\"11#_1-元素选择器\",\"38\":\"11#_2-类选择器-class\",\"39\":\"11#_3-id-选择器-id\",\"40\":\"11#_4-通配符选择器\",\"41\":\"11#🧩-二、关系选择器-5种连接符\",\"42\":\"11#_1-后代选择器-空格\",\"43\":\"11#_2-子元素选择器\",\"44\":\"11#_3-相邻兄弟选择器\",\"45\":\"11#_4-通用兄弟选择器\",\"46\":\"11#_5-列选择器-实验性\",\"47\":\"11#🎭-三、属性选择器-7种匹配武器\",\"48\":\"11#👻-四、伪类选择器-状态类\",\"49\":\"11#_1-动态伪类\",\"50\":\"11#_2-结构伪类\",\"51\":\"11#_3-表单伪类\",\"52\":\"11#🧪-五、伪元素选择器-虚拟元素\",\"53\":\"11#🎯-六、选择器优先级计算-4级权重\",\"54\":\"11#💡-高级技巧与实战应用\",\"55\":\"11#_1-性能优化\",\"56\":\"11#_2-动态样式控制\",\"57\":\"11#_3-表单进阶\",\"58\":\"11#_4-现代伪类应用\",\"59\":\"11#_5-选择器逻辑组合\",\"60\":\"11#🌐-浏览器支持速查表\",\"61\":\"11#div-class-static-active-div-中-class-写样式的时候谁的优先级更高\",\"62\":\"11#优先级规则\",\"63\":\"11#示例说明\",\"64\":\"11#结果\",\"65\":\"11#如果调换顺序\",\"66\":\"11#更复杂的权重比较\",\"67\":\"11#结果-1\",\"68\":\"11#关键总结\",\"69\":\"11#解决优先级冲突技巧\",\"70\":\"11@0\",\"71\":\"12\",\"72\":\"12#_1-typeof\",\"73\":\"12#_2-instanceof\",\"74\":\"12#_3-prototype\",\"75\":\"12#_4-constructor\",\"76\":\"12@0\",\"77\":\"13\",\"78\":\"13#vue的双向绑定的原理-和angular的对比\",\"79\":\"13#vue的双向绑定原理\",\"80\":\"13#angular的双向绑定原理\",\"81\":\"13#【angular】-指令详解\",\"82\":\"13#angular常用的生命周期\",\"83\":\"13#vue-3-中的生命周期钩子\",\"84\":\"13@0\",\"85\":\"14\",\"86\":\"14#dom简介\",\"87\":\"14#http三次握手\",\"88\":\"14@0\",\"89\":\"15\",\"90\":\"15@0\",\"91\":\"15@1\",\"92\":\"16\",\"93\":\"16@0\",\"94\":\"17\",\"95\":\"17@0\",\"96\":\"18\",\"97\":\"18@0\",\"98\":\"19\",\"99\":\"19#‌核心概念与优势\",\"100\":\"19#‌安装与基础使用\",\"101\":\"19#pinia与vuex区别\",\"102\":\"19@0\",\"103\":\"20\",\"104\":\"20@0\",\"105\":\"21\",\"106\":\"21@0\",\"107\":\"22\",\"108\":\"22#🔰-一、原始类型-primitive-types\",\"109\":\"22#🧬-二、对象类型-object-types\",\"110\":\"22#_1-数组\",\"111\":\"22#_2-元组-tuple\",\"112\":\"22#_3-任意类型-any\",\"113\":\"22#_4-对象类型\",\"114\":\"22#_5-函数类型\",\"115\":\"22#_6-接口-interface\",\"116\":\"22#_7-类-class\",\"117\":\"22#_8-枚举-enum\",\"118\":\"22#🔮-三、特殊类型\",\"119\":\"22#_1-联合类型-union\",\"120\":\"22#_2-交叉类型-intersection\",\"121\":\"22#_3-字面量类型-literal\",\"122\":\"22#_4-未知类型-unknown\",\"123\":\"22#_5-never-类型\",\"124\":\"22#_6-void-类型\",\"125\":\"22#📊-类型关系图\",\"126\":\"22#💡-类型操作-高级\",\"127\":\"22#_1-类型别名-type\",\"128\":\"22#_2-条件类型-conditional-types\",\"129\":\"22#_3-映射类型-mapped-types\",\"130\":\"22@0\",\"131\":\"23\",\"132\":\"24\",\"133\":\"24#‌虚拟-dom-的结构升级\",\"134\":\"24#一、增强组件的灵活性\",\"135\":\"24#二、优势与影响\",\"136\":\"24#三、实现方式\",\"137\":\"24#总结\",\"138\":\"24@0\",\"139\":\"25\",\"140\":\"25@0\",\"141\":\"26\",\"142\":\"26#对比vue2的局限性\",\"143\":\"26@0\",\"144\":\"27\",\"145\":\"27#_1-vue3简介\",\"146\":\"27#_1-1vue3的优势\",\"147\":\"27#_1-性能的提升\",\"148\":\"27#_1-源码的升级\",\"149\":\"27#_2-拥抱typescript\",\"150\":\"27#_3-新的特性\",\"151\":\"27#_2-1-【基于-vue-cli-创建】\",\"152\":\"27#_2-2-【基于-vite-创建】-推荐\",\"153\":\"27#_2-3-【一个简单的效果】\",\"154\":\"27#_3-1-【optionsapi-与-compositionapi】\",\"155\":\"27#options-api-的弊端\",\"156\":\"27#composition-api-的优势\",\"157\":\"27#_3-2-【拉开序幕的-setup】\",\"158\":\"27#setup-概述\",\"159\":\"27#setup-的返回值\",\"160\":\"27#setup-与-options-api-的关系\",\"161\":\"27#setup-语法糖\",\"162\":\"27#_3-3-【ref-创建-基本类型的响应式数据】\",\"163\":\"27#_3-4-【reactive-创建-对象类型的响应式数据】\",\"164\":\"27#_3-5-【ref-创建-对象类型的响应式数据】\",\"165\":\"27#_3-6-【ref-对比-reactive】\",\"166\":\"27#_3-7-【torefs-与-toref】\",\"167\":\"27#_3-8-【computed】\",\"168\":\"27#_3-9-【watch】\",\"169\":\"27#情况一\",\"170\":\"27#情况二\",\"171\":\"27#情况三\",\"172\":\"27#情况四\",\"173\":\"27#情况五\",\"174\":\"27#_3-10-【watcheffect】\",\"175\":\"27#_3-11-【标签的-ref-属性】\",\"176\":\"27#_3-12-【props】\",\"177\":\"27#_3-13-【生命周期】\",\"178\":\"27#_3-14-【自定义hook】\",\"179\":\"27#_4-1-【对路由的理解】\",\"180\":\"27#_4-2-【基本切换效果】\",\"181\":\"27#_4-3-【两个注意点】\",\"182\":\"27#_4-4-【路由器工作模式】\",\"183\":\"27#_4-5-【to的两种写法】\",\"184\":\"27#_4-6-【命名路由】\",\"185\":\"27#_4-7-【嵌套路由】\",\"186\":\"27#_4-8-【路由传参】\",\"187\":\"27#query参数\",\"188\":\"27#params参数\",\"189\":\"27#_4-9-【路由的props配置】\",\"190\":\"27#_4-10-【-replace属性】\",\"191\":\"27#_4-11-【编程式导航】\",\"192\":\"27#_4-12-【重定向】\",\"193\":\"27#_5-1【准备一个效果】\",\"194\":\"27#_5-2【搭建-pinia-环境】\",\"195\":\"27#_5-3【存储-读取数据】\",\"196\":\"27#_5-4-【修改数据】-三种方式\",\"197\":\"27#_5-5-【storetorefs】\",\"198\":\"27#_5-6-【getters】\",\"199\":\"27#_5-7-【-subscribe】\",\"200\":\"27#_5-8-【store组合式写法】\",\"201\":\"27#_6-1-【props】\",\"202\":\"27#_6-2-【自定义事件】\",\"203\":\"27#_6-3-【mitt】\",\"204\":\"27#_6-4-【v-model】\",\"205\":\"27#_6-5-【-attrs-】\",\"206\":\"27#_6-6-【-refs、-parent】\",\"207\":\"27#_6-7-【provide、inject】\",\"208\":\"27#_6-8-【pinia】\",\"209\":\"27#_6-9-【slot】\",\"210\":\"27#_1-默认插槽\",\"211\":\"27#_2-具名插槽\",\"212\":\"27#_3-作用域插槽\",\"213\":\"27#_7-1-【shallowref-与-shallowreactive-】\",\"214\":\"27#shallowref\",\"215\":\"27#shallowreactive\",\"216\":\"27#总结\",\"217\":\"27#_7-2-【readonly-与-shallowreadonly】\",\"218\":\"27#readonly\",\"219\":\"27#shallowreadonly\",\"220\":\"27#_7-3-【toraw-与-markraw】\",\"221\":\"27#toraw\",\"222\":\"27#markraw\",\"223\":\"27#_7-4-【customref】\",\"224\":\"27#_8-1-【teleport】\",\"225\":\"27#_8-2-【suspense】\",\"226\":\"27#_8-3-【全局api转移到应用对象】\",\"227\":\"27#_8-4-【其他】\",\"228\":\"27@0\",\"229\":\"27@1\",\"230\":\"28\",\"231\":\"28#_1-1props\",\"232\":\"28#_1-2自定义事件\",\"233\":\"28#_1-2-1原生dom事件\",\"234\":\"28#_1-2-2自定义事件\",\"235\":\"28#_1-3全局事件总线\",\"236\":\"28#_1-4v-model\",\"237\":\"28#_1-5useattrs\",\"238\":\"28#_1-6ref与-parent\",\"239\":\"28#_1-7provide与inject\",\"240\":\"28#_1-8pinia\",\"241\":\"28#_1-9slot\",\"242\":\"28@0\",\"243\":\"28@1\",\"244\":\"29\",\"245\":\"29#方法一\",\"246\":\"29#方法二\",\"247\":\"29#方法三\",\"248\":\"29@0\",\"249\":\"30\",\"250\":\"30#_1-组合式api的作用和优势\",\"251\":\"30@0\",\"252\":\"31\",\"253\":\"31@0\",\"254\":\"32\",\"255\":\"32@0\",\"256\":\"33\",\"257\":\"33#构建原理与性能\",\"258\":\"33#配置复杂度与生态支持\",\"259\":\"33#适用场景\",\"260\":\"33@0\",\"261\":\"34\",\"262\":\"34#前端开发\",\"263\":\"34#markdown-文档\",\"264\":\"35\",\"265\":\"35@0\",\"266\":\"35@1\",\"267\":\"36\",\"268\":\"36@0\",\"269\":\"36@1\",\"270\":\"37\",\"271\":\"37#markdown-介绍\",\"272\":\"37#markdown-配置\",\"273\":\"37#markdown-扩展\",\"274\":\"37#vuepress-扩展\",\"275\":\"37#主题扩展\",\"276\":\"37#选项卡\",\"277\":\"37#脚注\",\"278\":\"37#导入文件\",\"279\":\"37#tex-语法\",\"280\":\"37#任务列表\",\"281\":\"37#图片增强\",\"282\":\"37#上下角标\",\"283\":\"37#组件\",\"284\":\"37@0\",\"285\":\"37@1\",\"286\":\"38\",\"287\":\"38#页面标题\",\"288\":\"38#页面信息\",\"289\":\"38#页面内容\",\"290\":\"38#组件\",\"291\":\"38@0\",\"292\":\"38@1\",\"293\":\"39\",\"294\":\"39@0\",\"295\":\"40\",\"296\":\"40@0\",\"297\":\"41\",\"298\":\"42\",\"299\":\"42@0\",\"300\":\"43\",\"301\":\"43#问题描述\",\"302\":\"43#问题分析\",\"303\":\"43#解决方案\",\"304\":\"44\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,6],\"1\":[1],\"2\":[null,null,1],\"3\":[1],\"4\":[null,null,1],\"5\":[1],\"6\":[null,null,1],\"7\":[2],\"8\":[3,136],\"9\":[5,321],\"10\":[null,null,1],\"11\":[null,null,2],\"12\":[2],\"13\":[1,213],\"14\":[1,36],\"15\":[1,34],\"16\":[1,18],\"17\":[1,12],\"18\":[2,37],\"19\":[2,6],\"20\":[null,null,1],\"21\":[1,9],\"22\":[2,10],\"23\":[2,9],\"24\":[2,9],\"25\":[2,16],\"26\":[2,66],\"27\":[null,null,1],\"28\":[1],\"29\":[null,null,1],\"30\":[1],\"31\":[null,null,1],\"32\":[1,85],\"33\":[null,null,1],\"34\":[4],\"35\":[7],\"36\":[5],\"37\":[2,7],\"38\":[4,15],\"39\":[5,7],\"40\":[3,5],\"41\":[5],\"42\":[4,10],\"43\":[4,12],\"44\":[4,10],\"45\":[4,9],\"46\":[5,9],\"47\":[5,23],\"48\":[5],\"49\":[2,13],\"50\":[2,19],\"51\":[2,11],\"52\":[5,24],\"53\":[5,35],\"54\":[2],\"55\":[2,7],\"56\":[2,11],\"57\":[2,10],\"58\":[2,11],\"59\":[2,13],\"60\":[2,29],\"61\":[3,17],\"62\":[2,16],\"63\":[2,9],\"64\":[2,8],\"65\":[2,8],\"66\":[2,11],\"67\":[2,9],\"68\":[2,21],\"69\":[2,25],\"70\":[null,null,1],\"71\":[1,1],\"72\":[2,30],\"73\":[3,40],\"74\":[3,20],\"75\":[2,26],\"76\":[null,null,1],\"77\":[1],\"78\":[2,55],\"79\":[1,13],\"80\":[1,22],\"81\":[3,9],\"82\":[1,40],\"83\":[3,36],\"84\":[null,null,1],\"85\":[1],\"86\":[1,35],\"87\":[1],\"88\":[null,null,1],\"89\":[1,226],\"90\":[null,null,1],\"91\":[null,null,2],\"92\":[1],\"93\":[null,null,1],\"94\":[1,10],\"95\":[null,null,1],\"96\":[1],\"97\":[null,null,1],\"98\":[1,16],\"99\":[1,25],\"100\":[1,52],\"101\":[1,73],\"102\":[null,null,1],\"103\":[1],\"104\":[null,null,1],\"105\":[3],\"106\":[null,null,1],\"107\":[1,8],\"108\":[6,50],\"109\":[6,3],\"110\":[2,14],\"111\":[4,13],\"112\":[4,12],\"113\":[2,19],\"114\":[2,12],\"115\":[4,16],\"116\":[4,10],\"117\":[4,11],\"118\":[3],\"119\":[4,23],\"120\":[4,16],\"121\":[4,14],\"122\":[4,17],\"123\":[3,10],\"124\":[3,9],\"125\":[2,30],\"126\":[4],\"127\":[4,6],\"128\":[5,11],\"129\":[5,11],\"130\":[null,null,1],\"131\":[2,560],\"132\":[1,37],\"133\":[3,35],\"134\":[2,26],\"135\":[2,24],\"136\":[2,36],\"137\":[1,11],\"138\":[null,null,1],\"139\":[1],\"140\":[null,null,1],\"141\":[1,56],\"142\":[1,23],\"143\":[null,null,1],\"144\":[1],\"145\":[2,23],\"146\":[2],\"147\":[3,6],\"148\":[3,4],\"149\":[3,2],\"150\":[3,18],\"151\":[7,48],\"152\":[6,123],\"153\":[4,45],\"154\":[6,6],\"155\":[3,14],\"156\":[3,6],\"157\":[5],\"158\":[2,75],\"159\":[2,14],\"160\":[5,10],\"161\":[2,80],\"162\":[5,79],\"163\":[6,90],\"164\":[6,82],\"165\":[6,30],\"166\":[6,65],\"167\":[4,84],\"168\":[4,13],\"169\":[2,58],\"170\":[2,88],\"171\":[2,88],\"172\":[2,127],\"173\":[2,73],\"174\":[4,93],\"175\":[6,81],\"176\":[4,82],\"177\":[4,85],\"178\":[4,106],\"179\":[4],\"180\":[4,65],\"181\":[4,20],\"182\":[3,29],\"183\":[4,17],\"184\":[4,36],\"185\":[4,58],\"186\":[4],\"187\":[1,39],\"188\":[1,42],\"189\":[4,32],\"190\":[4,12],\"191\":[4,18],\"192\":[4,8],\"193\":[4],\"194\":[6,24],\"195\":[4,81],\"196\":[5,44],\"197\":[3,36],\"198\":[4,42],\"199\":[4,21],\"200\":[4,62],\"201\":[4,62],\"202\":[4,46],\"203\":[4,62],\"204\":[5,81],\"205\":[4,84],\"206\":[4,23],\"207\":[5,76],\"208\":[4,1],\"209\":[4],\"210\":[2,33],\"211\":[2,43],\"212\":[2,66],\"213\":[6],\"214\":[1,13],\"215\":[1,13],\"216\":[1,13],\"217\":[6],\"218\":[1,18],\"219\":[1,17],\"220\":[6],\"221\":[1,52],\"222\":[1,28],\"223\":[4,71],\"224\":[4,26],\"225\":[4,64],\"226\":[4,10],\"227\":[4,29],\"228\":[null,null,1],\"229\":[null,null,2],\"230\":[1,37],\"231\":[2,32],\"232\":[2,10],\"233\":[3,29],\"234\":[3,62],\"235\":[2,16],\"236\":[3,29],\"237\":[2,39],\"238\":[2,57],\"239\":[2,26],\"240\":[2,10],\"241\":[2,108],\"242\":[null,null,1],\"243\":[null,null,2],\"244\":[1],\"245\":[1,13],\"246\":[1,7],\"247\":[1,9],\"248\":[null,null,1],\"249\":[1,11],\"250\":[2,46],\"251\":[null,null,1],\"252\":[1],\"253\":[null,null,1],\"254\":[2],\"255\":[null,null,1],\"256\":[1,10],\"257\":[1,21],\"258\":[1,17],\"259\":[1,14],\"260\":[null,null,1],\"261\":[1,5],\"262\":[1,48],\"263\":[2,10],\"264\":[1,18],\"265\":[null,null,1],\"266\":[null,null,1],\"267\":[1,20],\"268\":[null,null,1],\"269\":[null,null,1],\"270\":[2,10],\"271\":[2,8],\"272\":[2,12],\"273\":[2,11],\"274\":[2,10],\"275\":[1,8],\"276\":[1,1],\"277\":[1,3],\"278\":[1,1],\"279\":[2,25],\"280\":[1,5],\"281\":[1,2],\"282\":[1,3],\"283\":[1],\"284\":[null,null,1],\"285\":[null,null,1],\"286\":[1,3],\"287\":[1,19],\"288\":[1,20],\"289\":[1,12],\"290\":[1,13],\"291\":[null,null,1],\"292\":[null,null,2],\"293\":[1],\"294\":[null,null,1],\"295\":[1,8],\"296\":[null,null,1],\"297\":[1,166],\"298\":[1,6],\"299\":[null,null,1],\"300\":[1],\"301\":[1,6],\"302\":[1,5],\"303\":[1,12],\"304\":[1,3]},\"averageFieldLength\":[2.5585909440461143,35.079967503981955,0.8245349184147669],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"喜欢⼴交朋友 喜欢尝试新鲜事物，追求新技术 喜欢球类运动，喜欢听歌看电影，跑步和健⾝\"]},\"1\":{\"h\":\"Angular依赖注入\"},\"2\":{\"c\":[\"前端开发\"]},\"3\":{\"h\":\"Angular里面的管道\"},\"4\":{\"c\":[\"前端开发\"]},\"5\":{\"h\":\"Angular里面的服务\"},\"6\":{\"c\":[\"前端开发\"]},\"7\":{\"h\":\"Mapbox API\"},\"8\":{\"h\":\"点、线、面\",\"t\":[\"添加数据线，收集线数据，type:linestring\",\"var geojson={ \\\"type\\\":'featurecollection', \\\"feature\\\":[{ \\\"type\\\": \\\"Feature\\\", \\\"geometry\\\": { \\\"type\\\": \\\"LineString\\\", \\\"coordinates\\\": [] }] } 添加线的类型应该设置为：type: LineString，添加相对应坐标 ，配置样式layout和pain：\",\"layout :{ line-cap //线显示的类型，可以是圆形、正方形、Butt line-join //连接时线的显示 visibility // 图层显示与否 none,visible } pain:{ line-color //线的颜色 line-width //线的宽度 line-opacity //线的透明度 line-translate //线的的偏移量 } 给地图添加监听事件：\",\"map.on('load'),()={}） //添加监听地图加载完事件 map.on('click'),()={}） //添加监听地图点击完事件 根据不同Zoom改变图层颜色 给地图添加点、线、面：\",\"map.addSource(mapid,{ type:geojson, data }) map.addLayer({ id, source, type:fill symbol line //(添加面，点，线类型)； maxzoom //图层最大缩放级别 minzoom //图层最小缩放级别 //添加面 layout:{ visibility // visible ,none } //布局 pain:{ fill-color:{ stop //数组类型，不同级别显示不同的颜色 ，如： [6,'red'], [10,'blue'], [11,'green'] } }//配置样式 }) //添加点 map.addsouce(mapid,{ type:'geojson', data://点数据 }) //添加点图层 map.addlayer({ id:'', type: //点类型, souce:mapid//点数据 layout:{ visibility:visible //设置点图层可见 text-field //设置文字信息 text-font //显示文字类型 text-size //文本大小 } pain:{ text-color //设置文字颜色 text-halo-color //文本光晕颜色设置 text-halo-width //光晕到字体轮廓的距离 text-halo-blur //光晕向外逐渐消失的距离 } }) 栅格瓦片与矢量切换 map.addsource('mapid',{ type:'raster' titles:[''] //获取栅格数据链接 tileSize // 栅格图层大小 }) map.addlayer({ id:'', type:'raster', source:mapid }) 向地图添加的常用数据 注：向地图添加的常用数据有六种 1.矢量数据 // vector map.addsource('mapid',{ type:\\\"vector\\\", url:'' }) map.addlayer({ id:'', sources:'mapid', type: 数据类型 // Point、line 、circle、fill })\",\"2.栅格数据 // raster map.addsource('mapid',{ type:\\\"raster\\\", titles:[''] })\",\"3.geojson 数据 //geojson map.addsource('mapid',{ type:\\\"geojson\\\", data:you data })\",\"4.图片 // image map.addsource('mapid',{ type:'image', url:'' //图片地址 coordinates:[] //显示的位置坐标 })\",\"5.视频 //video map.addsource('mapid',{ type:'video', url:'' //视频链接 coordinates:[] //视频显示的位置 })\",\"6.栅格数据高程 // rester-dem map.addsource('mapid',{ type:'raster-dem', url:'' //需要加载的数据源 })\"]},\"9\":{\"h\":\"添加的地图 图层 type 是一个枚举类 ，其中取值有如下几种\",\"t\":[\"\\\"fill\\\", \\\"line\\\", \\\"symbol\\\", \\\"circle\\\", \\\"point\\\",\\\"heatmap\\\", \\\"fill-extrusion\\\", \\\"raster\\\", \\\"hillshade\\\", \\\"background\\\".\",\"// 面 \\\"fill\\\": A filled polygon with an optional stroked border.\",\"//线 \\\"line\\\": A stroked line.\",\"// 图标或者文本标签 \\\"symbol\\\": An icon or a text label.\",\"//圆 \\\"circle\\\": A filled circle. // 点 \\\"point\\\" a point // 热图 \\\"heatmap\\\": A heatmap. // 拉伸（3D）多边形 \\\"fill-extrusion\\\": An extruded (3D) polygon.\",\"//栅格 \\\"raster\\\": Raster map textures such as satellite imagery.\",\"// 山体阴影可视化(该部分只支持mapbox Terrain RGB and Mapzen Terrarium tiles) \\\"hillshade\\\": Client-side hillshading visualization based on DEM data. Currently, the implementation only supports Mapbox Terrain RGB and Mapzen Terrarium tiles.\",\"// 地图的背景色或者图案 \\\"background\\\": The background color or pattern of the map. 注：在地图中，显示数据颜色，color 可以有很多种写法，都可以显示颜色\",\"以线为例 { \\\"line-color\\\": \\\"#ff0\\\", \\\"line-color\\\": \\\"#ffff00\\\", \\\"line-color\\\": \\\"rgb(255, 255, 0)\\\", \\\"line-color\\\": \\\"rgba(255, 255, 0, 1)\\\", \\\"line-color\\\": \\\"hsl(100, 50%, 50%)\\\", \\\"line-color\\\": \\\"hsla(100, 50%, 50%, 1)\\\", \\\"line-color\\\": \\\"yellow\\\" } 上面表示颜色的写法，都是可用的表达 添加图标、矢量点（增添拖拽功能，并且实时显示坐标） 1.图标 var marker=smartmapx.UnionMarker([图标位置]); //定义图标 marker.addTo(map) // 将图标添加到地图 marker.enableDragging() //允许图标拖拽 marker.disableDragging() //图标不可拖拽\",\"2.矢量点拖拽功能 全局定义json对象 var poin_json={ 'type':'FeatureCollection', 'features': [ { 'type': 'Feature', 'geometry': { 'type': 'Point', 'coordinates': [坐标] } } ] } 当地图加载完成，添加监听事件 map.on('load',()=>{ //添加矢量点 map.addsource('mpoint',{ type:'geojson', data:poin_json }) map.addlayer({ id:'poin', source:'point_json', type:'circle' }) }) 地图加载完成后，添加监听事件 map.on('load',()={ //对点进行鼠标监听事件，第一个参数是监听的事件，第二个参数是需要监听的图层 map.on('mouseenter','point',()=>{ //鼠标移入事件 }) map.on('mouseleave','point',()=>{ //鼠标离开事件 }) map.on('mousemove','point',()=>{ //鼠标移动事件 }) map.on('mousedown','poin',()=>{ //鼠标按下事件 }) map.on('mouseup','poin',()=>{ //鼠标放开事件 }) }) 地图中 on 和 once 的区别 map.on('mouseenter','poin',()={ console.log(777) // 当每次鼠标进入是控制台都可以输出 777 })\",\"map.once('mouseenter','poin',()={ console.log(777) // 当每次鼠标时 没有输出 }) map.once('mouseup','poin',()={ console.log(777) // 当每次鼠标放开开始，输出 777 }) 总结： on 可以一直监听某个事件 once 只监听一次 map.on('click') //地图点击一次后，下次还可以点击 map.once('click') // 地图点击一次后，下次点击没有效果 地图可否可拖拽 利用dragPan属性 map.dragPan.eable() //地图可拖拽 map.dragPan.disable() //地图不可拖拽 map.dragPan.isEnabled() //返回一个boolean值，判断地图是否可拖拽 map.dragPan.isActive() //返回一个boolean值，指示“拖动到平移”交互是否处于活动状态，即当前正在使用 地图中图层配置样式\",\"停止(stops) 是一个数组，根据输入和输出值定义功能，一组一个输入值和一个输出值，也叫“停止”，停止输出值必须是文字值（即不是函数或表达式），并且适用于该属性，如： circle-radius:{ stops:[ [5,1], // zoom is 5,circle-radius will be 1px [10,2] //zoom is 10,circle-radius will be 2px ] } circle-color:[ \\\"match\\\",['to-string',['get','需要匹配的属性字段']], \\\"55\\\", \\\"#0000ff\\\", \\\"456\\\", \\\"#0085f0\\\", \\\"22\\\", \\\"#06fcfc\\\", \\\"512\\\", \\\"#4dea21\\\", \\\"#b12c2c\\\" ]\",\"2.过滤器 (filter) 现有过滤器 [\\\"has\\\",key] key 存在 [\\\"!has\\\",key] key 不存在\",\"比较过滤器 [\\\"==\\\", key, value] 相等：feature [key] = value [\\\"!=\\\", key, value] 不等式：feature [key] ≠ 值 [\\\">\\\", key, value] 大于：feature [key] > value [\\\">=\\\", key, value] 大于或等于：feature [key] ≥ 值 [\\\"<\\\", key, value] 小于：feature [key] < 值 [\\\"<=\\\", key, value] 小于或等于：特征[键] ≤ 值 设置成员资格过滤器 [\\\"in\\\", key, v0, ..., vn] 集合包含：feature [key] ∈ { v0，...，vn } [\\\"!in\\\", key, v0, ..., vn] 设置排除：feature [key] ∉ { v0，...，vn } 组合过滤器 [\\\"all\\\", f0, ..., fn] 逻辑AND：F0 ∧...∧ FN //全部为真 [\\\"any\\\", f0, ..., fn] 逻辑OR：F0 ∨...∨ FN // 包含其中一个 [\\\"none\\\", f0, ..., fn] 逻辑NOR：¬ F0 ∧...∧¬ FN // 即不是，也不是 // 此过滤器要求每个要素的属性等于“ street_major”，“ street_minor”或“ street_limited” [\\\"in\\\", \\\"class\\\", \\\"street_major\\\", \\\"street_minor\\\", \\\"street_limited\\\"] 组合过滤器“ all”采用其后的其他三个过滤器，并要求所有过滤器都为真才能包含功能： 功能必须等于“street_limited”，且必须大于或等于3，并且其类型不能为多边形.如下： [ \\\"all\\\", // all 表示下面所有的条件都得满足 [\\\"==\\\", \\\"class\\\", \\\"street_limited\\\"], //图层存在属性 class==street_limited [\\\">=\\\", \\\"admin_level\\\", 3], // 图层存在属性 admin_level>=3 [\\\"!in\\\", \\\"$type\\\", \\\"Polygon\\\"] // 图层存在属性 $type 不是 多边形 ] 1.图层存在属性 class==street_limited 2.图层存在属性 admin_level>=3 3.图层存在属性 $type 不是 多边形 上面三种情况都得满足，才可以。 [ \\\"any\\\", // any 满足其中一个条件即可 [\\\"==\\\", \\\"class\\\", \\\"street_limited\\\"], //图层存在属性 class==street_limited [\\\">=\\\", \\\"admin_level\\\", 3], // 图层存在属性 admin_level>=3 [\\\"!in\\\", \\\"$type\\\", \\\"Polygon\\\"] // 图层存在属性 $type 不是 多边形 ] 1.图层存在属性 class==street_limited 2.图层存在属性 admin_level>=3 3.图层存在属性 $type 不是 多边形 上面三种情况满足其中一个就可以。 [ \\\"none\\\", // none 都不满足，才可 [\\\"==\\\", \\\"class\\\", \\\"street_limited\\\"], //图层存在属性 class==street_limited [\\\">=\\\", \\\"admin_level\\\", 3], // 图层存在属性 admin_level>=3 [\\\"!in\\\", \\\"$type\\\", \\\"Polygon\\\"] // 图层存在属性 $type 不是 多边形 ] 1.图层存在属性 class==street_limited 2.图层存在属性 admin_level>=3 3.图层存在属性 $type 不是 多边形 上面三种情况都不满足，才可以。 \",\"line-gradient (渐变属性，需要 lineMetrics：true，才能生效，数据源必须是geojson ，存在属性line-dasharray、 line-pattern 不能使用) // 线的渐变，需要数据源必须是geojson // line-dasharray、 line-pattern中不能使用\",\"地图接口 1.unproject 返回一个lnglat表示与指定的像素坐标相对应的地理坐标。 参数 point(PointLike)像素坐标。 返回 lnglat： lnglat所对应 Point\"]},\"10\":{\"c\":[\"Mapbox\"]},\"11\":{\"c\":[\"Mapbox\",\"前端开发\"]},\"12\":{\"h\":\"‌CI/CD‌概念\"},\"13\":{\"h\":\"持续部署CD有哪些工具\",\"t\":[\"持续部署（CD）工具列表涵盖开源和商业解决方案，以下按类别整理主流工具：​开源工具​ 1.​Jenkins​\",\"最流行的开源CI/CD工具之一，插件生态系统丰富 特点：基于Java开发，支持Pipeline即代码，可通过Jenkinsfile配置流程 适用场景：复杂的定制化部署流程\",\"2.​GitLab CI/CD​\",\"GitLab内置的CI/CD解决方案，与GitLab仓库无缝集成 特点：使用.gitlab-ci.yml配置文件，支持Auto DevOps功能 部署示例：自动部署到Kubernetes、云服务器等\",\"3.​GitHub Actions​\",\"GitHub原生提供的自动化工具，直接集成在仓库中 特点：通过YAML文件定义工作流，市场提供丰富的预置Action 典型用途：构建测试后自动部署到AWS/Azure/Cloudflare等\",\"4.​Argo CD​\",\"专为Kubernetes设计的GitOps持续交付工具 特点：声明式部署，自动同步Git仓库与K8s集群状态 核心优势：可视化应用状态，支持多环境管理\",\"5.​Spinnaker​\",\"Netflix开源的多云持续交付平台 特性：强大的部署策略（金丝雀、蓝绿部署），支持云原生应用 部署能力：AWS、GCP、Azure、Kubernetes等\",\"商业工具​ ​1.GitLab Ultimate（CI/CD模块）​​ 开源版进阶功能：高级部署策略、安全扫描、合规管理等 亮点：单一平台覆盖从代码到生产的全流程\",\"2.​GitHub Enterprise（含Actions）​​ 企业级安全和管理功能，支持大规模团队协作 集成生态：与第三方部署工具无缝衔接\",\"3.​CircleCI​ 云托管CI/CD服务（也有自托管方案） 优势：快速并行构建，丰富的Orbs共享配置库 适用：云原生应用和容器化部署\",\"4.​Harness​ 智能化的持续交付平台，强调AI驱动 核心功能：自动回滚、变更验证、成本优化 特色：可视化流水线编辑器，低代码部署\",\"5.​AWS CodeDeploy​ AWS原生的部署服务，集成CodePipeline/CodeCommit 场景：EC2、Lambda、ECS等AWS资源部署\",\"6.​Azure DevOps​ 微软提供的全套应用生命周期管理 部署能力：支持Azure云服务、混合环境、K8s\",\"特殊场景工具​\",\"​Flux​：GitOps风格K8s部署（与Argo CD类似） ​Drone​：轻量级容器化CI/CD（适合简单项目） ​Travis CI​：早期流行的SaaS CI/CD服务（现逐渐被取代）\",\"选择建议 1.​项目需求​\",\"云原生项目：优先考虑Argo CD/Spinnaker 多云环境：Spinnaker/Harness 轻量级需求：GitHub Actions/GitLab CI\",\"2.​技术栈​\",\"Java项目：Jenkins传统优势 Kubernetes：Argo CD是当前最佳实践 GitHub生态：首选GitHub Actions\",\"3.​团队规模​\",\"小团队：SaaS解决方案（CircleCI/GitHub Actions） 大企业：自建Jenkins/商业方案（Harness/GitLab Ultimate）\",\"💡 ​趋势提示​：GitOps模式（如Argo CD）已成为云原生部署的主流范式，建议新项目优先评估此类工具。\",\"部署流程示例（GitHub Actions）\",\"name: Production Deployment on: push: branches: [ main ] jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout code uses: actions/checkout@v4 - name: Deploy to AWS uses: aws-actions/configure-aws-credentials@v3 with: aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }} aws-region: us-east-1 - run: | aws s3 sync ./dist s3://my-bucket aws cloudfront create-invalidation --distribution-id ${{ secrets.CF_ID }} --paths \\\"/*\\\"\"]},\"14\":{\"h\":\"开源工具\",\"t\":[\"工具\",\"特点\",\"适用场景\",\"Jenkins\",\"• 最流行的开源CI/CD工具• 强大插件生态• 支持Pipeline即代码\",\"企业级复杂部署流程\",\"GitLab CI/CD\",\"• 与GitLab仓库深度集成• 单一配置文件.gitlab-ci.yml• 内置容器注册表\",\"GitLab用户的完整解决方案\",\"Argo CD\",\"• Kubernetes原生GitOps工具• 声明式部署• 自动同步集群状态\",\"Kubernetes环境持续交付\",\"Spinnaker\",\"• Netflix开源的持续部署平台• 支持多云部署• 内置金丝雀/蓝绿发布\",\"复杂发布策略企业\",\"Tekton\",\"• Kubernetes原生CI/CD框架• 基于自定义资源的流水线\",\"容器化CI/CD工作流\"]},\"15\":{\"h\":\"商业云服务\",\"t\":[\"服务商\",\"产品\",\"核心优势\",\"GitHub\",\"GitHub Actions\",\"• 深度GitHub集成• 市场共享Actions库• 按分钟计费\",\"GitLab\",\"GitLab CI/CD\",\"• 端到端DevSecOps平台• 高级安全扫描• 多集群管理\",\"CircleCI\",\"CircleCI\",\"• 高性能云托管• 原生容器支持• 可视化工作流\",\"AWS\",\"CodePipeline\",\"• 无缝衔接AWS服务• 与CodeCommit/CodeBuild集成\",\"Azure\",\"Azure DevOps\",\"• 完整ALM工具链• 多语言支持• Azure部署优化\",\"Google Cloud\",\"Cloud Build\",\"• GCP原生集成• 支持多云部署• Serverless执行环境\"]},\"16\":{\"h\":\"专用工具\",\"t\":[\"类型\",\"工具\",\"功能亮点\",\"K8s专属\",\"Flux CD\",\"GitOps自动同步器\",\"移动应用\",\"Bitrise\",\"移动端CI/CD专用解决方案\",\"Serverless\",\"Serverless Framework\",\"无服务应用部署框架\",\"数据库\",\"Liquibase/Flyway\",\"数据库变更管理\"]},\"17\":{\"h\":\"新兴趋势工具\",\"t\":[\"Harness - 智能化CD平台（自动验证/回滚）\",\"Drone - 轻量级容器化CI/CD\",\"Woodpecker - Drone的开源分支\",\"Jenkins X - Kubernetes原生的Jenkins演进版\"]},\"18\":{\"h\":\"选型参考维度：\",\"t\":[\"环境适配： \",\"云原生：Argo CD、Tekton\",\"多云部署：Spinnaker\",\"Kubernetes：Argo CD、Flux\",\"集成需求： \",\"GitHub用户：GitHub Actions\",\"GitLab用户：GitLab CI/CD\",\"AWS生态：CodePipeline\",\"部署策略复杂度： \",\"简单部署：Jenkins、GitLab\",\"高级发布：Spinnaker、Harness（内置金丝雀分析）\",\"团队规模： \",\"小团队：CircleCI、GitHub Actions\",\"大型企业：Jenkins（自定义能力强）\",\"💡 2023年趋势：GitOps模式（Argo CD/Flux）在K8s领域快速增长，GitHub Actions在开源项目占比超60%（据2023 JetBrains开发者调查）\"]},\"19\":{\"h\":\"示例架构：现代CD工具链组合\",\"t\":[\"典型工作流：\",\"代码提交触发CI构建\",\"生成容器镜像推送到制品库\",\"CD工具自动检测镜像更新\",\"执行声明式部署到目标环境\",\"自动验证+监控回滚\"]},\"20\":{\"c\":[\"前端开发\"]},\"21\":{\"h\":\"深拷贝与浅拷贝\",\"t\":[\"注释：深拷贝独立内存，浅拷贝共享内存\",\"深拷贝与浅拷贝的核心区别在于内存管理方式‌：浅拷贝仅复制对象的引用地址，新旧对象共享同一内存空间；深拷贝则递归复制所有层级数据，创建完全独立的内存空间。\"]},\"22\":{\"h\":\"1.内存独立性\",\"t\":[\"（1）浅拷贝：新旧对象共享内存，修改任意一方会影响另一方属性。‌‌‌‌\",\"（2）深拷贝：新旧对象内存完全隔离，修改互不影响\"]},\"23\":{\"h\":\"2.数据影响机制\",\"t\":[\"（1）当对象包含指针或引用类型时，浅拷贝会导致原对象和拷贝对象中的指针指向同一地址，可能引发指针悬挂问题。‌‌\",\"（2）深拷贝通过逐层复制指针指向的实际数据，彻底消除共享依赖\"]},\"24\":{\"h\":\"3.实现复杂度\",\"t\":[\"（1）浅拷贝只需复制基本数据类型和引用地址，时间复杂度为O(1)\",\"（2）深拷贝需要递归处理所有嵌套对象，时间复杂度通常为O(n)，空间占用更高\"]},\"25\":{\"h\":\"4.使用场景不同\",\"t\":[\"浅拷贝：\",\"适用于需要快速创建一个新对象或数组，并且对嵌套的对象或数组的修改不影响原始数据的情况。例如，在函数参数传递中，如果只需要读取对象的属性而不修改它们，可以使用浅拷贝来避免对原始对象的意外修改。\",\"也适用于一些简单的数据结构，或者当性能是主要考虑因素而不需要完全独立的副本时。\",\"深拷贝：\",\"适用于需要创建一个完全独立的副本，确保原对象的任何修改都不会影响新对象的情况。例如，在数据持久化、对象克隆或需要对数据进行独立操作而不影响原始数据的场景中，深拷贝是更好的选择。\"]},\"26\":{\"h\":\"5.实现方式不同\",\"t\":[\"（1）浅拷贝可以使用展开运算符、Object.assign()方法或者手动复制属性的方式实现：使用展开运算符:\",\" const oldObject={name:'小号',age:30,hobbies:['reading','coding']} const newOldObject={...oldObject}\",\"在这个例子中，使用展开运算符创建了一个新的对象newObject，它包含了与oldObject 相同的属性。但是，如果修改 oldObject.name,newOldObject.name也会收到影像\",\"使用Object.assign()方法:\",\" const oldObject={name:'小号',age:30,hobbies:['reading','coding']} const newOldObject=Object.assign({},oldObject)\",\"Object.assign()方法将源对象的所有可枚举属性复制到目标对象，并返回目标对象。同样，如果修改oldObject.hobbies，newObject.hobbies也会收到影响\",\"（2）深拷贝可以使用JSON.parse(JSON.stringify())、、递归函数或借助第三方库（如 lodash的cloneDeep()方法 实现：使用JSON.parse(JSON.stringify()):\",\" const oldObject={name:'小号',age:30,hobbies:['reading','coding']} const newOldObject=JSON.parse(JSON.stringify(oldObject))\",\"这个方法将对象转换为JSON 字符串，然后再将 JSON 字符串转换回对象。这样可以创建一个完全独立的副本。但是，这个方法有一些限制，例如它不能处理函数、正则表达式、日期对象等特殊类型的值。\",\"使用JS库: 有一些 JavaScript 库提供了深拷贝的功能，例如 lodash的cloneDeep()方法\",\" const _=require('lodash') const oldObject={name:'小号',age:30,hobbies:['reading','coding']} const newOldObject=_.cloneDeep(oldObject)\",\"使用库可以简化深拷贝的实现，并且通常提供了更好的性能和更多的功能。但是，引入库可能会增加项目的体积和复杂性。\"]},\"27\":{\"c\":[\"前端开发\"]},\"28\":{\"h\":\"封装一个组件需要考虑什么\"},\"29\":{\"c\":[\"前端开发\"]},\"30\":{\"h\":\"computed和watch区别\"},\"31\":{\"c\":[\"前端开发\"]},\"32\":{\"h\":\"前端解决跨域的方法\",\"t\":[\" 1.什么是跨域 跨域是指一个域下的文档或者脚本试图去请求另一个域下的资源，这里跨域是广义上的，而我们一般说的跨域是狭义的，是由浏览器同源策略限制的一种场景。 2.什么是同源策略 同源策略，简称sop(same origin policy),是一种约定，是浏览器最核心也是最基本的安全功能，如果缺少同源策略，浏览器很容易受到非法攻击，所谓同源，是指 “协议+域名+端口”，三者相同。 同源策略限制以下几种行为： 1、Cookie、LocalStorage 和 IndexDB 无法读取 2、 DOM 和 Js对象无法获得 3、 AJAX 请求不能发送 常见跨域场景 URL 说明 是否允许通信 http://www.demo.com/a.js http://www.demo.com/b.js 同一域名，不同文件或路径 允许 http://www.demo.com/lab/c.js http://www.demo.com:8000/a.js http://www.demo.com/b.js 同一域名，不同端口 不允许 http://www.demo.com/a.js https://www.demo.com/b.js 同一域名，不同协议 不允许 http://www.demo.com/a.js http://127.0.0.1/b.js 域名和域名对应相同ip 不允许 http://www.demo.com/a.js http://x.demo.com/b.js 主域相同，子域不同 不允许 http://demo.com/c.js http://www.demo1.com/a.js http://www.demo2.com/b.js 不同域名 不允许\",\"1、 通过jsonp跨域 2、 document.domain + iframe跨域 3、 location.hash + iframe 4、 window.name + iframe跨域 5、 postMessage跨域 6、 跨域资源共享（CORS） 7、 nginx代理跨域 8、 nodejs中间件代理跨域 9、 WebSocket协议跨域\"]},\"33\":{\"c\":[\"前端开发\"]},\"34\":{\"h\":\"CSS 选择器详解（附优先级与实战技巧）\"},\"35\":{\"h\":\"CSS 选择器是定义样式规则的关键引擎，我将从 11 大类选择器详细解析，涵盖基础用法与高阶应用场景：\"},\"36\":{\"h\":\"🔍 一、基础选择器（4种核心武器）\"},\"37\":{\"h\":\"1. 元素选择器\",\"t\":[\"/* 选择所有 <p> 元素 */ p { color: #333; }\"]},\"38\":{\"h\":\"2. 类选择器 (.class)\",\"t\":[\"/* 选择 class=\\\"warning\\\" 的元素 */ .warning { background-color: yellow; } /* 多类选择：同时有 btn 和 primary 类 */ .btn.primary { background: blue; }\"]},\"39\":{\"h\":\"3. ID 选择器 (#id)\",\"t\":[\"/* 选择 id=\\\"header\\\" 的元素 */ #header { height: 80px; }\"]},\"40\":{\"h\":\"4. 通配符选择器 (*)\",\"t\":[\"/* 选择所有元素 */ * { box-sizing: border-box; }\"]},\"41\":{\"h\":\"🧩 二、关系选择器（5种连接符）\"},\"42\":{\"h\":\"1. 后代选择器 (空格)\",\"t\":[\"/* 选择 .article 内所有 <p> */ .article p { line-height: 1.6; }\"]},\"43\":{\"h\":\"2. 子元素选择器 (>)\",\"t\":[\"/* 只选择 .menu 的直接子元素 <li> */ .menu > li { border-bottom: 1px solid #eee; }\"]},\"44\":{\"h\":\"3. 相邻兄弟选择器 (+)\",\"t\":[\"/* 选择紧跟在 h2 后的第一个 <p> */ h2 + p { margin-top: 0; }\"]},\"45\":{\"h\":\"4. 通用兄弟选择器 (~)\",\"t\":[\"/* 选择 h3 后的所有同级 <p> */ h3 ~ p { color: #666; }\"]},\"46\":{\"h\":\"5. 列选择器 (||)（实验性）\",\"t\":[\"/* 选择表格中列有 col-active 类 */ col.col-active || td { background: #f0f9ff; }\"]},\"47\":{\"h\":\"🎭 三、属性选择器（7种匹配武器）\",\"t\":[\"/* 存在 title 属性 */ [title] {...} /* title=\\\"help\\\" */ [title=\\\"help\\\"] {...} /* title 以 \\\"icon-\\\" 开头 */ [title^=\\\"icon-\\\"] {...} /* title 以 \\\".pdf\\\" 结尾 */ [title$=\\\".pdf\\\"] {...} /* title 包含 \\\"example\\\" */ [title*=\\\"example\\\"] {...} /* 独立单词匹配（空格分隔） */ [class~=\\\"active\\\"] {...} /* 连字符前缀匹配（lang|=\\\"zh\\\"） */ [lang|=\\\"zh\\\"] {...}\"]},\"48\":{\"h\":\"👻 四、伪类选择器（状态类）\"},\"49\":{\"h\":\"1. 动态伪类\",\"t\":[\"a:link {...} /* 未访问 */ a:visited {...} /* 已访问 */ a:hover {...} /* 鼠标悬停 */ a:active {...} /* 激活状态 */ input:focus {...} /* 获得焦点 */\"]},\"50\":{\"h\":\"2. 结构伪类\",\"t\":[\"/* 第一个子元素 */ li:first-child {...} /* 最后一个子元素 */ li:last-child {...} /* 第3个子元素 */ li:nth-child(3) {...} /* 奇数行 */ tr:nth-child(odd) {...} /* 唯一子元素 */ p:only-child {...} /* 空元素 */ div:empty {...}\"]},\"51\":{\"h\":\"3. 表单伪类\",\"t\":[\"input:checked {...} /* 勾选状态 */ input:disabled {...} /* 禁用状态 */ input:required {...} /* 必填项 */ input:in-range {...} /* 值在范围内 */\"]},\"52\":{\"h\":\"🧪 五、伪元素选择器（虚拟元素）\",\"t\":[\"/* 段落首行 */ p::first-line {...} /* 段落首字母 */ p::first-letter {...} /* 元素前插入内容 */ blockquote::before { content: \\\"“\\\"; font-size: 2em; } /* 元素后插入内容 */ .tooltip::after { content: attr(data-tip); } /* 选中的文本 */ ::selection { background: yellow; }\"]},\"53\":{\"h\":\"🎯 六、选择器优先级计算（4级权重）\",\"t\":[\"选择器类型\",\"示例\",\"权重值\",\"行内样式\",\"style=\\\"...\\\"\",\"1000\",\"ID 选择器\",\"#header\",\"100\",\"类/属性/伪类选择器\",\".active\",\"10\",\"元素/伪元素选择器\",\"p / ::after\",\"1\",\"通配符/关系符\",\"* / > / +\",\"0\",\"计算规则：\",\"#nav .item:hover /* 100 + 10 + 10 = 120 */ header#top a.active /* 1 + 100 + 10 = 111 */\"]},\"54\":{\"h\":\"💡 高级技巧与实战应用\"},\"55\":{\"h\":\"1. 性能优化\",\"t\":[\"/* 避免过度使用通用选择器 */ /* 不佳： */ div span {...} /* 更优： */ .specific-span {...}\"]},\"56\":{\"h\":\"2. 动态样式控制\",\"t\":[\"/* 根据属性动态改变样式 */ a[href^=\\\"https\\\"]::after { content: url(secure-icon.svg); }\"]},\"57\":{\"h\":\"3. 表单进阶\",\"t\":[\"/* 未勾选的复选框 */ input[type=\\\"checkbox\\\"]:not(:checked) { opacity: 0.5; }\"]},\"58\":{\"h\":\"4. 现代伪类应用\",\"t\":[\"/* 首个子元素 */ :first-child { ... } /* 用户无效输入 */ input:user-invalid { border-color: red; }\"]},\"59\":{\"h\":\"5. 选择器逻辑组合\",\"t\":[\"/* 排除特定元素 */ article :not(.ad) { max-width: 800px; } /* 组合选择器 */ button:disabled, .button-disabled { cursor: not-allowed; }\"]},\"60\":{\"h\":\"🌐 浏览器支持速查表\",\"t\":[\"选择器\",\"Chrome\",\"Firefox\",\"Safari\",\"Edge\",\":is()\",\"✅ 88+\",\"✅ 78+\",\"✅ 14+\",\"✅ 88+\",\":where()\",\"✅ 88+\",\"✅ 78+\",\"✅ 14+\",\"✅ 88+\",\":has()\",\"✅ 105+\",\"✅ 121+\",\"🚫\",\"✅ 105+\",\"::marker\",\"✅ 86+\",\"✅ 68+\",\"✅ 14+\",\"✅ 86+\",\":focus-visible\",\"✅ 86+\",\"✅ 85+\",\"✅ 15.4+\",\"✅ 86+\",\"✅ = 支持 🚫 = 不支持 掌握这些选择器组合，能让你如CSS忍者般精准定位元素！🏹\"]},\"61\":{\"h\":\"中 class 写样式的时候谁的优先级更高\",\"t\":[\"在 CSS 中，样式优先级不是由 HTML 的 class 属性中的类名顺序决定的。<div class=\\\"static active\\\"></div> 中的两个类名优先级是相等的，关键看样式表中的定义顺序和选择器权重。\"]},\"62\":{\"h\":\"优先级规则：\",\"t\":[\"选择器权重决定优先级： \",\"!important > 行内样式 > ID选择器 > 类/属性/伪类选择器 > 元素/伪元素选择器 > 通配符\",\"相同权重的比较原则： \",\"后定义的样式会覆盖先定义的样式（样式表顺序优先）\",\"HTML 属性中的类名顺序无关紧要\"]},\"63\":{\"h\":\"示例说明：\",\"t\":[\"/* 权重：0-0-1-0 */ .static { color: red; } /* 权重：0-0-1-0 */ .active { color: blue; }\"]},\"64\":{\"h\":\"结果：\",\"t\":[\"会显示 蓝色文字 \",\"因为 .active 定义在 .static 之后，后定义的覆盖先定义的\"]},\"65\":{\"h\":\"如果调换顺序：\",\"t\":[\".active { color: blue; } .static { color: red; }\",\"结果变成 红色文字\"]},\"66\":{\"h\":\"更复杂的权重比较：\",\"t\":[\"/* 权重：0-0-1-0 */ .static.active { font-weight: bold; /* 双类选择器权重更高 */ } /* 权重：0-0-1-0 */ .active { font-weight: normal; }\"]},\"67\":{\"h\":\"结果：\",\"t\":[\" 的字体为 粗体 \",\"即使 .active 定义在双类选择器之后，因为 .static.active 权重更高\"]},\"68\":{\"h\":\"关键总结：\",\"t\":[\"类名顺序不影响：.static.active 与 .active.static 等价\",\"样式表定义顺序：相同权重下，后定义的生效\",\"选择器权重： \",\"类选择器 .class：权重 0-0-1-0\",\"双类选择器 .class1.class2：权重 0-0-2-0\",\"ID 选择器 #id：权重 0-1-0-0\"]},\"69\":{\"h\":\"解决优先级冲突技巧：\",\"t\":[\"/* 方案1：提高选择器权重 */ div.static.active { color: purple; } /* 方案2：改变定义顺序 */ .active { color: blue; } .static { color: red; } /* 后定义的生效 */ /* 方案3：谨慎使用 !important（不推荐） */ .static { color: red !important; /* 强制最高优先级 */ }\",\"📌 最佳实践：当有样式冲突时，优先使用更具体的选择器（如 div.header.active）而不是改变顺序或使用 !important。\"]},\"70\":{\"c\":[\"前端开发\"]},\"71\":{\"h\":\"判断JS数据类型\",\"t\":[\"判断方法收集于网络查阅\"]},\"72\":{\"h\":\"1.typeof\",\"t\":[\"这个方法还是比较常用的，一般用它来判断基本数据类型，比如 String，Number，Boolean，Symbol，Object，Null，Undefined：\",\"这里需要特别说明一下，对于对象（引用对象）类型的判断往往并不是我们想要的结果，换句话说，就是我只知道他是对象类型，但是不知道是什么对象，比如：可能大家还会比较奇怪，为什么 Null 的数据类型竟然是object，去查阅了一番，才知道这竟然是 “打小” 就是这样设计的，在JS中声明的变量在底层的表现形式都是二进制，而二进制前三位都为0的话就会被判断成object类型，而 Null 的所有机器码都是0，所以就会被当成对象来看了.\"]},\"73\":{\"h\":\"2.instanceof：\",\"t\":[\"这个方法，相信写Java的童鞋并不陌生，这个方法主要是用来判断一些引用数据类型，比如 Function，Array，Date：instanceof 主要就是判断一个引用实例是否属于某种类型，简单来说就是判断儿子是否属于该父亲。但是 instanceof 不仅仅是能判断父子关系，还能判断爷孙关系，甚至更多层的关系。那么它的原理是什么呢？\",\"function instanceof(left, right) { const rightVal = right.prototype const leftVal = left.__proto__ // 若找不到就到一直循环到父类型或祖类型 while(true) { if (leftVal === null) { return false } if (leftVal === rightVal) { return true } leftVal = leftVal.__proto__ // 获取祖类型的__proto__ } }\",\"判断原理就是只要右边变量的 prototype 在左边变量的原型链上即可，在这个判断过程中会一直遍历左边变量的原型链（父组件，祖组件）直到查找结束，如果失败就返回false\"]},\"74\":{\"h\":\"3.prototype：\",\"t\":[\"完整写法是 Object.prototype.toString.call(xxx)， 就目前来看，这个方法是最好的一个方法来检测所有的数据类型，无论是基本数据类型还是引用数据类型:toString方法是Object原型对象上的一个方法，默认返回调用者的具体类型，换句话说，toString运行时this指向的对象类型，返回格式为 [object xxx]，但是需要注意的是，有时候我们创建一个对象的时候可能会重写这个方法，这样就可能会导致Object的toString执行不到，所以这里需要用call方法来强制执行Object方法。\"]},\"75\":{\"h\":\"4.constructor\",\"t\":[\"constructor 在其对应对象的原型下面，自动生成，当我们写一个构造函数的时候，会自动添加一个：\",\"构造函数名.prototype.constructor = 构造函数名 function test(){ } test.prototype.constructor = test; // 这个是自动会生成的\",\"于是就有了：图上可以看出来，Null 和 Undefined 是不能够被判断出来的，还会报错，因为 Null 和 Undefined 都是无效的对象，所以不存在 constructor 这一说。另外一点需要注意的是，constructor 属性是可以被修改的，可能会导致最后的结果不正确。\"]},\"76\":{\"c\":[\"前端开发\"]},\"77\":{\"h\":\"vue与angular以及react的区别\"},\"78\":{\"h\":\"vue的双向绑定的原理，和angular的对比\",\"t\":[\"效率: 虽然Vue和Angular的双向绑定原理不同，但它们都致力于提供高效的数据更新机制。但是，由于Vue使用的是数据劫持，其效率通常比Angular的脏值检查更高。\",\"灵活性: Vue和Angular都为开发者提供了灵活的双向绑定选项，但Vue的API通常更为简洁。\",\"兼容性: Vue的数据劫持基于Object.defineProperty()，这意味着它可能不支持某些旧版浏览器。而Angular的脏值检查不受此限制。\",\"第一张图片展示了Vue的双向绑定机制。基于Object.defineProperty的数据劫持以及发布者-订阅者模式，当数据发生变化时，Vue能够自动更新视图，并且当视图发生变化时，也能自动更新数据。\",\"第二张图片描绘了Angular的双向绑定机制。基于脏值检查，当数据模型中的数据发生变化时，Angular会遍历整个数据模型，查找并更新发生变化的数据，从而实现视图的自动更新。\",\"以下是双向数据绑定的几个关键点：\",\"自动性：开发者不需要手动更新视图或数据模型，框架会自动处理这些操作。\",\"实时性：当数据模型发生变化时，视图的更新几乎是实时的，反之亦然。\",\"简化开发：双向数据绑定可以大大简化前端开发的复杂性，因为开发者不再需要手动同步数据和视图。\",\"如何实现？\",\"Vue.js: Vue使用v-model指令实现双向绑定。它的原理主要基于Object.defineProperty()，通过这个方法，Vue可以劫持对象的属性，从而监听数据的变化。\",\"Angular: Angular使用[(ngModel)]指令实现双向绑定。它的原理是基于脏检查机制，当数据模型发生变化时，Angular会遍历整个数据模型来查找变化。\"]},\"79\":{\"h\":\"Vue的双向绑定原理\",\"t\":[\"Vue的双向绑定原理主要基于Object.defineProperty()方法，通过这个方法，Vue能够拦截对象属性的读写操作，从而实现数据劫持。同时，Vue还使用了发布者-订阅者模式，当数据发生变化时，会通知所有订阅了该数据的订阅者，使其进行更新。\"]},\"80\":{\"h\":\"Angular的双向绑定原理\",\"t\":[\" Angular的双向绑定原理基于其核心特性——脏值检查。当应用中的某个数据模型发生改变时，Angular会检查整个数据模型，查找所有发生变化的数据，并更新相应的视图。这与Vue的数据劫持机制有所不同。\",\"效率：虽然Vue和Angular的双向绑定原理不同，但它们都致力于提供高效的数据更新机制。但是，由于Vue使用的是数据劫持，其效率通常比Angular脏值检查更高。\",\"灵活性：虽然Vue和Angular都为开发者提供了灵活的双向绑定选项，但Vue的API通常为更简洁。\",\"兼容性：Vue的数据劫持基于Object.defineProperty()，这意味着它不支持某些旧的浏览器，而Angular的脏值检查不受此限制。\"]},\"81\":{\"h\":\"【Angular】 指令详解\",\"t\":[\"原文：https://blog.csdn.net/u013675821/article/details/144092206\"]},\"82\":{\"h\":\"angular常用的生命周期\",\"t\":[\"注释：生命周期钩子：每个组件都有被Angular管理的生命周期，angular 创建组件、渲染组件，在绑定的属性发生变化时检测，在DOM中被移除前销毁。理解：如果angular创建了组件，那么就有对应的生命周期，如下为一个组件所拥有的全部生命周期钩子，并且每个钩子按照顺序在相应的时间内调用。ngOnChanges()：当绑定的属性值发生变化时调用，在ngOnInit之前调用。主要在父子组件传值中调用。ngngOnInit():在组件渲染到界面时调用，初始化组件，只调用一次。一般做请求数据的时候使用。ngDoCheck() 检测变化，在每个 Angular 变更检测周期中调用。ngAfterContentInit() 当把内容投影进组件之后调用，只调用一次。ngAfterContentChecked() 每次完成被投影组件内容的变更检测之后调用。ngAfterViewInit()，视图操作，DOM节点操作。ngAfterViewChecked() 每次做完组件视图和子视图的变更检测之后调用。ngOnDestroy(): 组件不挂在时触发，同时执行切换到其它组件的生命钩子。\"]},\"83\":{\"h\":\"Vue 3 中的生命周期钩子\",\"t\":[\"原文：https://blog.csdn.net/io_123io_123/article/details/147934777 Vue 3引入了setup()函数作为Composition API的一部分，这是定义组件逻辑的主要方式。在setup()函数中，可以使用一系列的生命周期钩子函数。\",\"onBeforeMount() - 在组件的元素被挂载到DOM之前调用。\",\"onMounted() - 在组件的元素被挂载到DOM后调用。\",\"onBeforeUpdate() - 在组件的DOM被更新之前调用。\",\"onUpdated() - 在组件的DOM被更新后调用。\",\"onBeforeUnmount() - 在组件卸载（销毁）之前调用。\",\"onUnmounted() - 在组件卸载（销毁）后调用。\",\"onErrorCaptured() - 当捕获一个来自子孙组件的错误时调用。\"]},\"84\":{\"c\":[\"前端开发\"]},\"85\":{\"h\":\"网络协议\"},\"86\":{\"h\":\"DOM简介\",\"t\":[\"DOM 全名称 document object model 文档对象模型； JS中通过DOM 来操作HTML ，只要理解dom 就可以随心所欲操作web 页面。 --文档 文档表示的就是整个HTML网页文档； --对象 将网页中的每一个部分都转换成一个对象 --模型 使用模型来表示对象之间的关系，方便获取对象，通俗说，模型就是dom树，关联节点。\",\"节点Node，是构成我们网页的最基本部分，网页中的每一个部分都可以成为一个节点。 比如：属性、文本、注释、整个文档等都是一个节点，每个节点的类型不一样，有元素节点，属性节点、文本节点、文档节点等。\"]},\"87\":{\"h\":\"http三次握手\"},\"88\":{\"c\":[\"前端开发\"]},\"89\":{\"h\":\"es6数组解构赋值\",\"t\":[\"以前为变量赋值，只能直接指定值，如： let a=1； let b=2; let c=3; es6 允许，这样写： let [a,b,c]=[1,2,3]; let [head,...trail]=[1,2,3,4,5] // head:1; trail:[2,3,4,5] let [x,y,z]=['a'] //x:a; y:undefined; z:[] 1.对象的解构赋值 let obj={usename:'kebo',age:67}; let {usename}=obj //让变量usename 拿到obj 的值，obj 是需要解构的对象，赋值给对应的变量 2.数组的解构赋值 let arr=[1,2,3,5,4,9,5] let [a,b,c,d,r]=arr\",\"扩展运算符是三个点（...）,该运算符主要用于函数调用 1.数组的解构赋值 console.log(...[1,2,3]) // 1,2,3 console.log(1,...[1,2,3]) //1,1,2,3 function add (x,y){ return x+y } const number=[4,38] add(...number) 扩展运算符与正常的函数参数可以结合使用 function(x,y,z,w){} const avgs=[1,2,3] if(-1,...avgs,2,...[3]); 2.对象的解构赋值 let {bar,foo}={bar:'78',foo:'0000'}\",\"1.理解 我们平常所写的代码规范，叫正常模式； 2.目的，作用 消除语法的一些不合理，不规范之处； 3.使用 在全局或者函数的第一条语句，使用：\\\"use strict\\\"; 如果浏览器不支持，只是简单的解析为一条语句，没有任何副作用 4.语法和行为改变 必须用var 申明变量； 禁止自定义的this指向windows,一般指向自定义的实例； 对象不能有重名的属性； 创建eval作用域 <script type='text/javascript'> 'use strict' </script> JSON.stringify(obj/arr) //js 对象（数组）转换成json对象数组 JSON.parse(json) //json 对象（数组）转换成js 对象数组\",\"var arr=[1,2,3,56,8,9]; arr.indexof(value) //得到值在数组中的下标 arr.lastindexof(value) //得到值在数组中的最后一个下标 arr.forEach(function (item,index){ // 遍历数组 console.log(item,index) // item是每项值，index是下标 }) var arr1=arr.map(function (item,index){ // 遍历数组,返回一个新的数组，返回加工后的值 return item +10 }) arr.filter(function (item,index){ // 遍历过滤出一个新的子数组，返回条件为true 的值 return item >3 返回新的数组为 arr2=[56,8,9] })\",\"var obj={username:'张三'} function foo(data){ console.log(this) // this指向 windows } 改变this 指向 foo.call(obj) foo.apply(obj) // this指向 obj 1.call 、apply 两者不同在于 传参的方式不同 call 直接从第二个参数开始，一次传入 apply 第二个数组必须是数组，传入的值放在数组里 foo.call(obj,33) foo.apply(obj,[333]) 2.bind foo.bind(obj)() //bind 绑定完this，不会立即调用当前的函数，而是将当前的函数调用，传参方式同call一样\",\"1.变量提升 代码在执行前，会经过预处理的过程，就是变量提升，在预处理的时候，会找到 var function 定义的相关变量 函数\",\"var obj={usename:'huh',age:56}; var att=\\\"我的名字：\\\" +obj.usename+',我的年龄是：'+obj.age 使用模板字符串 var att=`我的名字是：${obj.usename},我的年龄是：${obj.age}`\",\"let fun=()=>console.log(222) // 调用fun()，当没有参数时，不能省略括号 let fun=a=>console.log(555) //调用 fun(33),当有一个参数时，可以省略括号 let fun=(x,y)=>console.log(x,y) //调用 fun(2,7),当有两个参数时，不能省略括号 当只有一条语句的时候，{}可以省略，省略后会自动返回语句执行的结果或者表达式的结果 箭头函数的特点 1.箭头函数没有自己的this,箭头函数的this不是调用的时候决定的，而是定义的时候处在的对象就是它的this 2.箭头函数的this看外层是否与函数 如果有 箭头函数的this就是外层函数的this 如果没有 箭头函数的this就是windows fun:function(){ console.log(this) // this 指向调用它的对象 } fun()=>{ console.log(this) // this 指向windows }\",\"point :function(x=0,y=0){ // 定义默认参数 this.x=x; this.y=y } var point1=new point(80,7); //当传入参数时，使用实参 var point2=new point() //当没有传入参数的时候，使用默认参数\",\"var promise=new Promise((resolve,reject)=>{ console.log(11); setTimeout(()=>{ console.log(333) },2000) resolve() //成功调用 reject() //失败调用 }).then((data)=>{ // 成功的回调 console.log(data) },(error)=>{ //失败的回调 console.log(error) })\"]},\"90\":{\"c\":[\"前端开发\"]},\"91\":{\"c\":[\"es6笔记\",\"前端开发\"]},\"92\":{\"h\":\"前端工程化\"},\"93\":{\"c\":[\"前端开发\"]},\"94\":{\"h\":\"Interface和type的区别\",\"t\":[\"原文:https://blog.csdn.net/2301_81854535/article/details/147693187\"]},\"95\":{\"c\":[\"前端开发\"]},\"96\":{\"h\":\"nodejs主流框架\"},\"97\":{\"c\":[\"前端开发\"]},\"98\":{\"h\":\"pinia的使用\",\"t\":[\"‌Pinia是Vue 3的专属状态管理库，用于跨组件或页面共享状态，其核心功能包括State（数据存储）、Getters（计算属性）和Actions（方法）‌。与Vuex相比，Pinia具有更简单的API设计、完整的TypeScript支持，并取消了mutations概念，更适合组合式API开发。\"]},\"99\":{\"h\":\"‌核心概念与优势\",\"t\":[\"1.核心组成:‌State‌：存储应用状态数据，定义为返回初始状态的函数。‌‌‌Getters‌：派生状态（类似计算属性），接收state作为首个参数。‌‌‌Actions‌：同步/异步方法，直接修改state（无需mutations）\",\"2.‌主要优势‌： 1. 仅1KB体积，支持Vue 2/3和TypeScript。‌‌ 2. 扁平化Store设计，无需模块嵌套。‌‌ 3.支持插件扩展（如持久化存储插件）。‌‌\"]},\"100\":{\"h\":\"‌安装与基础使用\",\"t\":[\"1.‌安装‌：通过npm/yarn/pnpm安装：\",\"pnpm install pinia\",\"2.集成到Vue应用‌\",\"import { createPinia } from 'pinia' app.use(createPinia())\",\"3.‌定义Store‌（两种方式）Option Store‌（类似Vue选项式API）：\",\"defineStore('counter', { state: () => ({ count: 0 }), getters: { double: state => state.count * 2 }, actions: { increment() { this.count++ } } })\",\"Setup Store‌（组合式API风格）：\",\"defineStore('counter', () => { const count = ref(0) const double = computed(() => count.value * 2) function increment() { count.value++ } return { count, double, increment } })\",\"3.‌组件中使用 1.‌调用Store‌：\",\" import { useCounterStore } from '@/stores/counter' const counter = useCounterStore()\",\"2.访问状态与方法‌：\",\" 直接通过counter.count读取state。 通过counter.increment()调用action\"]},\"101\":{\"h\":\"pinia与vuex区别\",\"t\":[\"Vuex和Pinia都是用于Vue.js应用的状态管理库，但它们在设计理念、使用方式、功能、性能等方面存在一些区别。\",\"1.设计理念和使用方式：\",\"Vuex：采用全局单例模式，通过一个store对象来管理所有的状态。它的状态管理是集中的，适合大型项目和需要复杂状态管理的场景。 Pinia：则采用了分离模式，每个组件都可以拥有自己的store实例。这意味着在Pinia中，状态管理是分散的，更适合小型项目或对TypeScript要求高的场景。\",\"2.功能和模块化：\",\"Vuex：提供了更多的功能，如模块化、插件和严格模式等。Vuex的模块化允许将状态管理拆分成多个模块，每个模块负责一部分状态，提高了代码的可维护性。 Pinia：没有modules配置，每一个独立的仓库都是通过definStore生成的，这使得代码更加扁平化和易于维护。同时，Pinia对TypeScript提供了原生支持，提供了更好的类型推导和类型检查。\",\"3.性能：\",\"Pinia：相比Vuex具有更好的性能，因为它使用了新的ES6语法和数据处理方式。同时，Pinia的体积也更小，大约只有1KB，这使得它在性能上更具优势。\",\"4.社区支持和版本兼容性：\",\"Vuex：由Vue.js官方出品，拥有较强的社区支持和丰富的文档。它的设计主要是为了支持Vue 3，但也可以在Vue 2项目中使用（可能需要额外的适配工作）。 Pinia：是一个较新的框架，社区支持相对较弱，但也在不断发展壮大。它同时支持Vue 2和Vue 3，与Vue 3的响应式系统和Composition API紧密集成。\",\"5.易用性和语法：\",\"Pinia：的语法比Vuex更简单且易于理解。它提供了更好的TypeScript支持，使得代码更加简洁和易于维护。同时，Pinia允许直接修改状态，而Vuex则需要通过mutations来修改状态。 综上所述，Vuex和Pinia各有优缺点，选择哪个取决于你的项目需求和个人偏好。如果你需要一个功能丰富、社区支持强的状态管理解决方案，Vuex是一个不错的选择。而如果你追求简单、轻量且高性能的状态管理，Pinia可能是更好的选择\"]},\"102\":{\"c\":[\"前端开发\"]},\"103\":{\"h\":\"代码笔记\"},\"104\":{\"c\":[\"代码笔记\"]},\"105\":{\"h\":\"ref需要.value为什么reactive 不需要\"},\"106\":{\"c\":[\"前端开发\"]},\"107\":{\"h\":\"TS数据类型\",\"t\":[\"TypeScript 的数据类型系统是其核心特性之一，它在 JavaScript 原始类型的基础上增加了强大的静态类型检查能力。以下是 TypeScript 中主要的数据类型及其详细说明：\"]},\"108\":{\"h\":\"🔰 一、原始类型（Primitive Types）\",\"t\":[\"这些是 JavaScript 中的基础原始类型在 TypeScript 中的直接表示：\",\"类型\",\"写法\",\"说明\",\"示例值\",\"布尔值\",\"boolean\",\"值为 true 或 false\",\"const isDone: boolean = true;\",\"数字\",\"number\",\"任意数值（含整数、浮点数等）\",\"const count: number = 42;\",\"字符串\",\"string\",\"任意文本内容\",\"const name: string = 'Alice';\",\"BigInt\",\"bigint\",\"能够安全表示超过 2^53 的数字\",\"const big: bigint = 100n;\",\"Symbol\",\"symbol\",\"创建唯一的键值\",\"const sym: symbol = Symbol('key');\",\"Null\",\"null\",\"明确表示为 null\",\"const n: null = null;\",\"Undefined\",\"undefined\",\"明确表示为 undefined\",\"const u: undefined = undefined;\"]},\"109\":{\"h\":\"🧬 二、对象类型（Object Types）\",\"t\":[\"这些类型用于描述对象、函数等非原始类型的结构：\"]},\"110\":{\"h\":\"1. 数组\",\"t\":[\"表示某种类型的数组，有两种写法：\",\"const nums: number[] = [1, 2, 3]; const names: Array<string> = ['Alice', 'Bob']; // 泛型写法\"]},\"111\":{\"h\":\"2. 元组（Tuple）\",\"t\":[\"表示已知元素数量和类型的数组：\",\"let tuple: [string, number] = ['key', 1]; // OK tuple = ['hello', 42]; // OK tuple = [1, 'key']; // ❌ 类型顺序错误\"]},\"112\":{\"h\":\"3. 任意类型（any）\",\"t\":[\"可用于绕过类型检查：\",\"let risky: any = 'danger'; risky = 42; // ✅ 可通过检查 risky.doSomething(); // ❌ 运行时可能出错\"]},\"113\":{\"h\":\"4. 对象类型\",\"t\":[\"直接定义对象的形状：\",\"type User = { name: string; age?: number; // 可选属性 readonly id: number; // 只读属性 }; const user: User = { name: 'Alice', id: 1 }; user.id = 2; // ❌ 只读属性不可修改\"]},\"114\":{\"h\":\"5. 函数类型\",\"t\":[\"定义函数的类型：\",\"type AddFunc = (a: number, b: number) => number; const add: AddFunc = (a, b) => a + b;\"]},\"115\":{\"h\":\"6. 接口（interface）\",\"t\":[\"类似于对象类型，但支持扩展：\",\"interface Shape { color: string; } interface Circle extends Shape { radius: number; } const circle: Circle = { color: 'blue', radius: 10 };\"]},\"116\":{\"h\":\"7. 类（class）\",\"t\":[\"在类中定义属性类型：\",\"class Point { x: number; y: number; constructor(x: number, y: number) { this.x = x; this.y = y; } }\"]},\"117\":{\"h\":\"8. 枚举（enum）\",\"t\":[\"为一组值命名常量：\",\"enum Direction { Up = 'UP', Down = 'DOWN', } const dir: Direction = Direction.Up;\"]},\"118\":{\"h\":\"🔮 三、特殊类型\"},\"119\":{\"h\":\"1. 联合类型（Union）\",\"t\":[\"表示变量可以是多种类型之一：\",\"type ID = number | string; function printId(id: ID) { if (typeof id === 'string') { console.log(id.toUpperCase()); // ✅ 在此分支识别为字符串 } else { console.log(id.toFixed(2)); // ✅ 识别为数字 } }\"]},\"120\":{\"h\":\"2. 交叉类型（Intersection）\",\"t\":[\"组合多个类型（常用于扩展对象）：\",\"type Admin = User & { permissions: string[] }; const admin: Admin = { name: 'Bob', id: 2, permissions: ['manage'] };\"]},\"121\":{\"h\":\"3. 字面量类型（Literal）\",\"t\":[\"精确到具体的值：\",\"type ButtonSize = 'small' | 'medium' | 'large'; const buttonSize: ButtonSize = 'medium'; // ✅ buttonSize = 'huge'; // ❌ 不在字面量集合中\"]},\"122\":{\"h\":\"4. 未知类型（unknown）\",\"t\":[\"比 any 更安全的顶层类型：\",\"let unsure: unknown = \\\"Hello\\\"; unsure = 42; // ✅ 重新赋值（类似 any） const s: string = unsure; // ❌ 不能直接赋值给其他类型\"]},\"123\":{\"h\":\"5. never 类型\",\"t\":[\"表示永远不会返回的值：\",\"function throwError(msg: string): never { throw new Error(msg); }\"]},\"124\":{\"h\":\"6. void 类型\",\"t\":[\"表示函数没有返回值：\",\"function logMsg(message: string): void { console.log(message); }\"]},\"125\":{\"h\":\"📊 类型关系图\",\"t\":[\"graph TB A[原始类型] --> B(number, string...) C[对象类型] --> D(Object, Array, Function) E[特殊类型] --> F(any, unknown, never) B -->|联合| G(number | string) D -->|交叉| H(User & Admin) G & H --> I(复杂类型)\"]},\"126\":{\"h\":\"💡 类型操作（高级）\"},\"127\":{\"h\":\"1. 类型别名（type）\",\"t\":[\"定义类型的别名：\",\"type Coordinates = [number, number];\"]},\"128\":{\"h\":\"2. 条件类型（Conditional Types）\",\"t\":[\"在类型系统中实现三目运算：\",\"type CheckType<T> = T extends string ? 'str' : 'unknown'; type T = CheckType<number>; // 'unknown'\"]},\"129\":{\"h\":\"3. 映射类型（Mapped Types）\",\"t\":[\"批量转换已有类型：\",\"type Readonly<T> = { readonly [P in keyof T]: T[P]; }; type Optional<T> = { [P in keyof T]?: T[P]; };\"]},\"130\":{\"c\":[\"前端开发\"]},\"131\":{\"h\":\"TypeScript 介绍\",\"t\":[\"1.typescript 是微软开发的一款开源编程语言，支持 ECMAScript 6 标准； 2.TypeScript 是 JavaScript 的超集，这意味着他支持所有的 JavaScript 语法。并在此之上对 JavaScript 添加了一些扩展，如 class / interface / module 等。这样会大大提升代码的可阅读性。 3.最新的 Vue 、React 也可以集成 TypeScript\",\"TypeScript 是 JavaScript 的超集，扩展了 JavaScript 的语法，因此现有的 JavaScript 代码可与 TypeScript 一起工作无需任何修改，TypeScript 通过类型注解提供编译时的静态类型检查。\",\"TypeScript 可处理已有的 JavaScript 代码，并只对其中的 TypeScript 代码进行编译。\",\"cnpm install -g typescript //全局安装 tsc -V 查看版本号\",\"代码编辑 Var message:string=\\\"hello world\\\"; console.log(message) // 注：.ts 作为typescript 文件的扩展名 然后执行以下命令将 TypeScript 转换为 JavaScript 代码： tsc test.ts ts 文件浏览器本身 无法解析，需要转换成可以解析的 js 文件，就是 对应的 ts -> js 每次需要这么转，很麻烦，所以希望编辑完 ts 文件，能够自动转换成浏览器可以解析的文件，需要以下操作： 1.在项目中 需要 tsc --init // 生成 一个tsconfig.json 文件 2.在vscode 编辑器中，任务-运行任务，监控任务\",\"在VUE 中 创建项目的时候，选择编辑语言为 typescript ，不用考虑能否编辑，vue 创建的时候，已经处理好 编辑完文件，自动形成可解析文件\",\"对象：对象是类的实例 类：是描述对象的行为和状态的集合 方法：是类操作的步骤 TypeScript 面向对象编程实例： class site { name():void{ console.log('rundob') } } var obj=new site();obj.name(); 以上实例定义了一个类 site ，该类有一个方法 name ，该方法输出字符串 rundob new 关键字创建类的对象 obj，该对象调用方法 name()\",\"数据类型\",\"关键字\",\"描述\",\"任意类型\",\"any\",\"声明为 any 的变量可以赋予任意类型的值。\",\"数字类型\",\"number\",\"string 一个字符系列，使用单引号（'）或双引号（\\\"）来表示字符串类型。反引号（`）来定义多行文本和内嵌表达式\",\"字符串类型\",\"string\",\"声明为字符串\",\"布尔类型\",\"boolean\",\"boolean 表示逻辑值：true 和 false\",\"数组类型\",\"Array\",\"声明变量为数组\",\"枚举\",\"enum\",\"枚举类型用于定义数值集合\",\"void\",\"void\",\"用于标识方法返回值的类型，表示该方法没有返回值\",\"null\",\"null\",\"表示对象值缺失\",\"undefined\",\"undefined\",\"用于初始化变量为一个未定义的值\",\"never\",\"never\",\"是其它类型（包括 null 和 undefined）的子类型，代表从不会出现的值\",\"1.字符串 var name:string=\\\"hello world\\\" 2.数字 var num:number=1 3.布尔 var flag:boolean=true 4.数组 //在元素类型上面加 [] //使用数组泛型 var numb:number[]=[1,2] var arry:Array<number>=[1,2] 5.元组 //属于数组的一种，可以包含数字，字符串 var arr:[number,string]=[123,'1234'] 6.枚举 enum color{green,red,blue}; var c:color=color.red; console.log(c) // 1 如果标识符没有赋值，它的值是下标 7.null var num:null //空类型 8.undefined var name:number //undefined,定义未赋值，就是undefined 9.never //其他类型，包括（null,undefined）,代表从不会出现的类型 10.any var num:any 11.void function run():void{ //表示方法没有任何返回类型 }\",\"变量是一种使用方便的占位符，用于引用计算机内存地址，我们可以把变量看做存储数据的容器。 typescript 变量的命名规则： 1.变量名可以包含数字和字母； 2.除了下划线_和美元符号$以外，不能包含其它特殊字符，包括空格； 3.变量名不能以数字开头 变量使用前需要申明，我们可以使用 var 来申明变量； var [变量名]：[数据类型]=值 如： var name:string='hello world' 申明变量的类型，没有初始值，变量值会设为 undefined var name:string; 声明变量并初始值，但不设置类型类型，该变量可以是任意类型： var name='string' 声明变量没有设置类型和初始值，类型可以是任意类型，默认初始值为 undefined： var name;\",\"1.public // 公共类型 表示可以在这个类里面使用，也可以在这个类外面使用 2.protected //保护类型 只在当前类和它的子类可以使用 3.private //私有 只在当前类才可以使用 注意：不写类型，默认是 public \",\"1.函数申明法 function run ():string{ return 'run' //正确写法 } function run ():string{ return 111 //错误写法，返回类型不对 } 2.匿名函数 var run=function():number{ return 1111 } run ()//调用函数 3.定义方法传参 function getinfo(name:string,age:number):string{ return name +age } alert('zhangsan',30) var getinfo=function(name:string,age:number):string{ return name+age } //无返回值 function run():void{ } 4.可选参数，如果age 存在，返回两者，否则返回name function getinfo(name:string,age?:number):string{ if(age){ return `${name}+${age}` }else{ return '${name}' } } 5.默认参数 function getinfo(name:string,age:number=20):string{ } 6.剩余参数 function sum(a:number,b:number,c:number):number{ return a+b+c } 三点运算符接收传过来的参数 function sum(...result:number[]):number{ var sum=0; for(var i=0;i<result.length;i++){ sum+=result[i] } return sum } 7.函数的重载 函数名相同，传的参数不同 function get(name:string):string function get(name:string,age:number):string function get(name:any):any{ } 8.继承 functin run (){ this.name='zhangsan'; this.age=90; this.getinfo=function(){//实例方法 alert(89898) } } run.prototype.sex='男';//原型链上的属性 run.prototype.work=function(){//原型链上的方法 alert('正在工作') } 9.对象继承 function web (){ run.call(this) //实现继承,web 可使用run 的方法，对象冒充继承，只能继承构造函数里的方法和属性，无法继承原型链上的方法 } 10.原型链继承 //实例化子类，没发给父类传参 原型链实现继承，既可以继承构造函数里面的熟悉和方法，又可以继承原型链上的属性和方法 web.prototype=new run (); 11.原型链+构造函数组合的继承 funcTion web(name,age){ this.run(this,name,age) } 或者 web.prototype=run.prototype //实现继承 12.ts 中类 class Person{ name:string //定义属性前面省略了关键字 public constructor(n:string){//构造函数，实例化类的时候触发 this.name=n } getname():string{ return this.name } setname(name:string):void{ this.name=name } } 13.ts 中的继承 //关键字 extends、super class person{ name:string constractor(name:string):string{ this.name=name } } class web extends person{ constractor(name:String){ super(name) //实现真正的继承，初始化父类的构造函数 } } 类里面的修饰符，typescript 里面定义属性提供三种修饰符 public ： 公有属性 ,在类里面，子类，类外面都可以访问 protected ：保护， 在类里面，子类可以访问，在类外部无法访问 private: 私有 ，在类里面可以访问，子类，类外面无法访问 //接口的作用 在面向对象的编程中，接口是一种规范的定义，它定义了行为和动作的规范，接口定义了某些类所需要准守的规范，接口不关心类的内部状态数据，也不关心这些类的方法实现细节，它只规定这批类里必须提供某些方法，提供这些方法的类就可以满足某些需求，typescript 接口类似于java ，同时还增加了更灵活的接口类型，包括属性，函数，可索引和类等。 export {j,k,}// 可以导出多个 import {j,k} 引入 export default j // 默认到处，只有一个数据导出，只能用一次 import j //不需要花括号\",\"1.extends （1）在类的声明中通过关键字extends来创建一个类的子类; （2）extends是继承某个类，继承之后可以使用父类的方法，也可以重写父类的方法; （3）extends是继承父类，只要那个类不是声明为final或者那个类定义为abstract的就能继承; （4）JAVA中不支持多重继承，但是可以用接口来实现，这样就要用到implements，继承只能继承一个类; 2.implments (1)一个类通过关键字implements声明自己使用一个或者多个接口。 (2)implements 是实现多个接口, 接口的方法一般为空的, 必须重写才能使用 ; (3)JAVA中不支持多重继承，但是可以用接口 来实现，这样就要用到implements，继承只能继承一个类，\",\"但implements可以实现多个接口，用逗号分开就行了 比如 ：\",\"class A extends B implements C,D,E 接口实现的注意点：\",\"a.实现一个接口就是要实现该接口的所有的方法(抽象类除外)。\",\"b.接口中的方法都是抽象的。\",\"c.多个无关的类可以实现同一个接口，一个类可以实现多个无关的接口。\",\"与Extends的不同 extends， 可以实现父类，也可以调用父类初始化 this.parent()。而且会覆盖父类定义的变量或者函数。这样的好处是：架构师定义好接口，让工程师实现就可以了。整个项目开发效率和开发成本大大降低。 implements，实现父类，子类不可以覆盖父类的方法或者变量。即使子类定义与父类相同的变量或者函数，也会被父类取代掉。 这两种实现的具体使用，是要看项目的实际情况，需要实现，不可以修改implements，只定义接口需要具体实现，或者可以被修改扩展性好，用extends。\",\"装饰器就是一个方法 // 定义一个装饰器 function logclass(params:any){ console.log(params) params 就是当前类 params.prototype.apiurl=\\\"xxxxx\\\" // 给这个class 扩展属性 } @logclass // 调用装饰器 class person{ constactor(){ // 定义构造函数 } getdata(){ // 定义一个方法 } }\",\"基础数据类型：string number boolean null undefiend 引用数据类型：object 在js中为我们提供了三个包装类，通过这个三个类可以将基本数据类型转换成对象 三个包装类： String() //将基本数据类型字符串转换成对象 Number() Boolean()\",\"数组是一个特殊的变量，数组用于在单一变量中存储多个值，我们通过下标号来引用某个元素。 var all=['arr','vol','bmw'] 1.把数组转换成字符串 var fruits=[\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; document.getelementbyid('demo').innerhtml=fruits.toString(); //结果 ：Banana，Orange，Apple，Mango 2.数组方法 (1) slice(startIndex, endIndex) // 从已经存在的数组中返回选定的元素 var fruits=[\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; 该方法接收两个参数slice(start,end)，strat为必选，表示从第几位开始；end为可选，表示到第几位结束(不包含end位)，省略表示到最后一位；start和end都可以为负数，负数时表示从最后一位开始算起，如-1表示最后一位。 fruits.slice(1,3) //slice()可接受两个参数，当赋予两个参数时，从Start数组元素开始选择元素，直到（但不包括） end 参数 如：slice(1,3) 结果：Orange Apple (2) splice() //向数组中添加，或从数组删除，或替换数组中的元素，然后返回被删除/替换的元素。 var fruits = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; fruits.splice(2, 0, \\\"Lemon\\\", \\\"Kiwi\\\"); //结果：Banana，Orange，Lemon，Kiwi，Apple，Mango 第一个参数（2）定义了应添加新元素的位置（拼接）。 第二个参数（0）定义应删除多少元素。 其余参数（“Lemon”，“Kiwi”）定义要添加的新元素。 //删除元素 fruits.splice(2, 2, \\\"Lemon\\\", \\\"Kiwi\\\"); //结果：Banana，Orange，Lemon，Kiwi， //删除Apple，Mango fruits.splice(0,1); // 删除 fruits 中的第一个元素 //结果 Orange，Apple，Mango 第一个参数（0）定义新元素应该被添加（接入）的位置。 第二个参数（1）定义应该删除多个元素。 其余参数被省略。没有新元素将被添加。 (3)join // 把数组元素，结合成一个字符串 var frusts=[\\\"orange\\\",\\\"apple\\\",\\\"banana\\\",\\\"mango\\\"]; var ner=document.getelementbyid('demo').innerhtml=frusts.join('-'); console.log(ner) //结果：orange-apple-banana-mango (4)pop // 从数组中删除最后一个元素 var frusts=[\\\"orange\\\",\\\"apple\\\",\\\"banana\\\",\\\"mango\\\"]; frusts.pop() // 结果：orange，apple，banana (5)concat //方法通过合并（连接）现有数组来创建一个新数组： var myGirls = [\\\"Cecilie\\\", \\\"Lone\\\"]; var myBoys = [\\\"Emil\\\", \\\"Tobias\\\", \\\"Linus\\\"]; var myChildren = myGirls.concat(myBoys); // 连接 myGirls 和 myBoys (6)shift //方法会删除首个数组元素，并把所有其他元素“位移”到更低的索引。 var fruits = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; fruits.shift(); // Orange,Apple,Mango (7)unshift //方法（在开头）向数组添加新元素，并“反向位移”旧元素 var fruits = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; fruits.unshift(\\\"Lemon\\\"); // 向 fruits 添加新元素 \\\"Lemon\\\" // 结果 Lemon,Banana,Orange,Apple,Mango\"]},\"132\":{\"h\":\"为什么Vue3可以多个根节点\",\"t\":[\"‌Vue 3 允许组件包含多个根节点的核心原因在于引入了 Fragment（碎片化） 机制，通过虚拟 DOM 的结构升级实现了对多根节点的支持‌。 这一改进不仅解决了 Vue 2 时代模板结构冗余的问题，还通过更智能的渲染策略提升了性能表现。 因为vue3引入了fragment概念，这是一个抽象的节点，如果发现组件是多根的会自动创建一个fragment节点，把多根节点视为自己的children。在patch时，如果发现这是一个fragment节点，则直接遍历children创建或更新。\",\"Fragement的实现原理\",\"Vue3会生成如下的虚拟结构 const vnode={ type:Symbol.for('vue-fragement'),//标识为fragement children:[ {type:'h1',children:'标题'} {type:'p',children:'内容'} ] }\"]},\"133\":{\"h\":\"‌虚拟 DOM 的结构升级\",\"t\":[\"Vue 3 重构了虚拟 DOM 的实现机制： 1.‌Fragment 抽象节点‌：当检测到多根节点时自动创建 Fragment 虚拟节点，将其子节点作为独立渲染单元。‌‌\",\"2.‌分层对比算法‌：新的 diff 算法能独立处理每个根节点的更新，无需强制合并层级\",\"Vue 3 允许使用多个根节点的原因有以下几点：1、增强组件的灵活性；2、简化模板结构；3、提升性能\",\"在 Vue 2 中，每个组件只能有一个根节点，这在某些场景下会导致模板结构复杂且不直观。而 Vue 3 引入了多个根节点的支持，通过新的编译器和 Virtual DOM 改进，解决了这些问题，使开发更加高效和灵活。\"]},\"134\":{\"h\":\"一、增强组件的灵活性\",\"t\":[\"在 Vue 3 中，允许组件包含多个根节点，可以使组件更加灵活，特别是在需要返回多个平级元素的场景下。例如，一个表单组件可能需要返回一个标题和多个输入框，如果只能有一个根节点，开发者就需要额外添加一个包裹元素，这样会导致代码不够简洁。\",\"<template> <h1>标题</h1> <input v-model=\\\"input1\\\" /> <input v-model=\\\"input2\\\" /> </template>\",\"这种方式使得模板更符合直觉和设计需求，无需额外的包裹元素。\"]},\"135\":{\"h\":\"二、优势与影响\",\"t\":[\"1.减少标签层级： Vue 3不再需要唯一根标签后，开发者可以更加自由地组织组件的模板结构。 这意味着可以减少不必要的DOM层级，使得DOM结构更加简洁和高效。\",\"2.提高渲染性能： 减少DOM层级可以降低浏览器的渲染负担，从而提高页面的渲染性能。 这对于大型应用或需要频繁更新DOM的应用来说尤为重要。\",\"3.优化内存占用： 减少DOM层级还可以减少内存占用，因为浏览器不需要为额外的根标签分配内存。 这有助于提升应用的性能和响应速度。\",\"4.增强组件灵活性： 支持片段使得Vue 3的组件设计更加灵活和多样化。 开发者可以根据实际需求来组织组件的模板结构，而无需受到唯一根标签的限制。\"]},\"136\":{\"h\":\"三、实现方式\",\"t\":[\"Vue 3内部实现不再需要唯一根标签的机制，主要依赖于其虚拟DOM和渲染器的改进。以下是对Vue 3内部实现这一特性的详细解释：\",\"1、虚拟DOM的改进 Fragment节点： Vue 3的虚拟DOM引入了Fragment节点，这使得组件可以返回多个顶级节点，而无需将它们包裹在一个单一的根元素内。 Fragment节点在虚拟DOM树中作为一个特殊的节点存在，它不会对应到真实的DOM节点，而是作为多个并列顶级节点的容器。 渲染优化：Vue 3的渲染器在处理Fragment节点时，会将其内部的多个顶级节点直接渲染到父节点下，而不会创建额外的DOM层级。 这减少了不必要的DOM操作，提高了渲染性能。\",\"2、编译器的优化 模板编译：Vue 3的编译器在编译模板时，会识别出Fragment节点，并将其转换为相应的虚拟DOM结构。 编译器还会对模板中的指令、事件和插槽等进行处理，以确保它们在运行时能够正确执行。 错误检查：尽管Vue3不再要求唯一根标签，但编译器仍然会进行一定的错误检查，以确保模板结构的合理性和一致性。如果模板中存在无法识别的结构或语法错误，编译器会抛出相应的错误信息。\"]},\"137\":{\"h\":\"总结\",\"t\":[\"综上所述，Vue 3不再需要唯一根标签是框架设计上的一大进步，它带来了诸多优势和影响。这一变化不仅简化了模板结构、提高了渲染性能和优化了内存占用，还增强了组件的灵活性和多样性。因此，开发者在构建Vue 3应用时可以更加高效地利用这些特性来构建更加复杂和高效的应用。\"]},\"138\":{\"c\":[\"前端开发\"]},\"139\":{\"h\":\"Vue3新特性\"},\"140\":{\"c\":[\"前端开发\"]},\"141\":{\"h\":\"vue3为什么使用proxy\",\"t\":[\"‌ ‌Vue3使用Proxy的主要原因是为了提升性能、增强响应式系统的灵活性、简化代码实现，并解决Vue2中Object.defineProperty的局限性‌。Proxy能够直接代理整个对象，支持动态属性监听、数组操作拦截以及嵌套对象的惰性处理，从而显著优化了响应式数据的初始化速度和运行时性能。‌\",\"核心优势分析‌\",\"1.‌性能提升‌\",\"初始化效率‌：Proxy无需像Object.defineProperty那样递归遍历对象所有属性进行劫持，仅代理最外层对象，嵌套属性按需处理（惰性监听），减少了初始化开销。‌‌\",\"‌动态属性支持‌：Proxy自动捕获新增或删除的属性，无需手动调用Vue.set/Vue.delete，避免了Vue2中因动态属性导致的响应式失效问题。‌‌\",\"‌数组操作优化‌：Proxy可直接拦截数组的push、pop等方法，而Vue2需重写数组原型方法实现响应式。‌‌\",\"2.‌功能增强‌\",\"‌全面拦截能力‌：Proxy支持13种操作拦截（如get、set、deleteProperty等），覆盖对象的所有读写行为，而Object.defineProperty仅能拦截属性读写。‌‌\",\"‌嵌套对象处理‌：Proxy通过递归代理实现深度监听，且仅在访问嵌套对象时才触发代理，避免了不必要的性能损耗。‌‌\",\"3.‌代码简化与维护性‌\",\"‌统一拦截逻辑‌：Proxy通过一个处理器对象（handler）集中定义拦截行为，代码更简洁，而Object.defineProperty需为每个属性单独定义描述符。‌‌\",\"‌类型推断支持‌：Proxy的强类型特性有助于提升TypeScript的类型推断准确性，增强开发体验\"]},\"142\":{\"h\":\"对比Vue2的局限性\",\"t\":[\"特性\",\"Vue2 (Object.defineProperty)\",\"Vue3 (Proxy)\",\"‌动态属性监听‌\",\"需手动调用Vue.set\",\"自动捕获新增/删除属性\",\"‌数组操作‌\",\"需重写数组方法\",\"直接拦截原生方法\",\"‌嵌套对象处理\",\"初始化时递归劫持所有属性\",\"惰性代理，按需触发\",\"性能表现‌\",\"大数据量下性能较低\",\"官方测试提升20%-30%\"]},\"143\":{\"c\":[\"前端开发\"]},\"144\":{\"h\":\"vue3\"},\"145\":{\"h\":\"1.Vue3简介\",\"t\":[\"2020年9月18日，Vue.js发布版3.0版本，代号：One Piece（n\",\"经历了：4800+次提交、40+个RFC、600+次PR、300+贡献者\",\"官方发版地址：Release v3.0.0 One Piece · vuejs/core\",\"截止2023年10月，最新的公开版本为：3.3.4\"]},\"146\":{\"h\":\"1.1Vue3的优势\"},\"147\":{\"h\":\"（1） 性能的提升\",\"t\":[\" - 打包大小减少`41%`。 - 初次渲染快`55%`, 更新渲染快`133%`。 - 内存减少`54%`。 \"]},\"148\":{\"h\":\"（1） 源码的升级\",\"t\":[\" - 使用`Proxy`代替`defineProperty`实现响应式。 - 重写虚拟`DOM`的实现和`Tree-Shaking`。 \"]},\"149\":{\"h\":\"（2） 拥抱TypeScript\",\"t\":[\"`Vue3`可以更好的支持`TypeScript` \"]},\"150\":{\"h\":\"（3） 新的特性\",\"t\":[\"Composition API（组合API）：\",\"setup\",\"ref与reactive\",\"computed与watch\",\"......\",\"新的内置组件：\",\"Fragment\",\"Teleport\",\"Suspense\",\"......\",\"其他改变：\",\"新的生命周期钩子\",\"data 选项应始终被声明为一个函数\",\"移除keyCode支持作为 v-on 的修饰符\"]},\"151\":{\"h\":\"2.1. 【基于 vue-cli 创建】\",\"t\":[\"点击查看官方文档\",\"备注：目前vue-cli已处于维护模式，官方推荐基于 Vite 创建项目。\",\"## 查看@vue/cli版本，确保@vue/cli版本在4.5.0以上 vue --version ## 安装或者升级你的@vue/cli npm install -g @vue/cli ## 执行创建命令 vue create vue_test ## 随后选择3.x ## Choose a version of Vue.js that you want to start the project with (Use arrow keys) ## > 3.x ## 2.x ## 启动 cd vue_test npm run serve\"]},\"152\":{\"h\":\"2.2. 【基于 vite 创建】(推荐)\",\"t\":[\"vite 是新一代前端构建工具，官网地址：https://vitejs.cn，vite的优势如下：\",\"轻量快速的热重载（HMR），能实现极速的服务启动。\",\"对 TypeScript、JSX、CSS 等支持开箱即用。\",\"真正的按需编译，不再等待整个应用编译完成。\",\"webpack构建 与 vite构建对比图如下：\",\"具体操作如下（点击查看官方文档）\",\"## 1.创建命令 npm create vue@latest ## 2.具体配置 ## 配置项目名称 √ Project name: vue3_test ## 是否添加TypeScript支持 √ Add TypeScript? Yes ## 是否添加JSX支持 √ Add JSX Support? No ## 是否添加路由环境 √ Add Vue Router for Single Page Application development? No ## 是否添加pinia环境 √ Add Pinia for state management? No ## 是否添加单元测试 √ Add Vitest for Unit Testing? No ## 是否添加端到端测试方案 √ Add an End-to-End Testing Solution? » No ## 是否添加ESLint语法检查 √ Add ESLint for code quality? Yes ## 是否添加Prettiert代码格式化 √ Add Prettier for code formatting? No\",\"自己动手编写一个App组件\",\"<template> <div class=\\\"app\\\"> <h1>你好啊！</h1> </div> </template> <script lang=\\\"ts\\\"> export default { name:'App' //组件名 } </script> <style> .app { background-color: #ddd; box-shadow: 0 0 10px; border-radius: 10px; padding: 20px; } </style>\",\"安装官方推荐的vscode插件：\",\"总结：\",\"Vite 项目中，index.html 是项目的入口文件，在项目最外层。\",\"加载index.html后，Vite 解析 <script type=\\\"module\\\" src=\\\"xxx\\\"> 指向的JavaScript。\",\"Vue3**中是通过 **createApp 函数创建一个应用实例。\"]},\"153\":{\"h\":\"2.3. 【一个简单的效果】\",\"t\":[\"Vue3向下兼容Vue2语法，且Vue3中的模板中可以没有根标签\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{name}}</h2> <h2>年龄：{{age}}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">年龄+1</button> <button @click=\\\"showTel\\\">点我查看联系方式</button> </div> </template> <script lang=\\\"ts\\\"> export default { name:'App', data() { return { name:'张三', age:18, tel:'13888888888' } }, methods:{ changeName(){ this.name = 'zhang-san' }, changeAge(){ this.age += 1 }, showTel(){ alert(this.tel) } }, } </script>\"]},\"154\":{\"h\":\"3.1. 【OptionsAPI 与 CompositionAPI】\",\"t\":[\"Vue2的API设计是Options（配置）风格的。\",\"Vue3的API设计是Composition（组合）风格的。\"]},\"155\":{\"h\":\"Options API 的弊端\",\"t\":[\"Options类型的 API，数据、方法、计算属性等，是分散在：data、methods、computed中的，若想新增或者修改一个需求，就需要分别修改：data、methods、computed，不便于维护和复用。\"]},\"156\":{\"h\":\"Composition API 的优势\",\"t\":[\"可以用函数的方式，更加优雅的组织代码，让相关功能的代码更加有序的组织在一起。\",\"说明：以上四张动图原创作者：大帅老猿\"]},\"157\":{\"h\":\"3.2. 【拉开序幕的 setup】\"},\"158\":{\"h\":\"setup 概述\",\"t\":[\"setup是Vue3中一个新的配置项，值是一个函数，它是 Composition API“表演的舞台”，组件中所用到的：数据、方法、计算属性、监视......等等，均配置在setup中。\",\"特点如下：\",\"setup函数返回的对象中的内容，可直接在模板中使用。\",\"setup中访问this是undefined。\",\"setup函数会在beforeCreate之前调用，它是“领先”所有钩子执行的。\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{name}}</h2> <h2>年龄：{{age}}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">年龄+1</button> <button @click=\\\"showTel\\\">点我查看联系方式</button> </div> </template> <script lang=\\\"ts\\\"> export default { name:'Person', setup(){ // 数据，原来写在data中（注意：此时的name、age、tel数据都不是响应式数据） let name = '张三' let age = 18 let tel = '13888888888' // 方法，原来写在methods中 function changeName(){ name = 'zhang-san' //注意：此时这么修改name页面是不变化的 console.log(name) } function changeAge(){ age += 1 //注意：此时这么修改age页面是不变化的 console.log(age) } function showTel(){ alert(tel) } // 返回一个对象，对象中的内容，模板中可以直接使用 return {name,age,tel,changeName,changeAge,showTel} } } </script>\"]},\"159\":{\"h\":\"setup 的返回值\",\"t\":[\"若返回一个对象：则对象中的：属性、方法等，在模板中均可以直接使用**（重点关注）。**\",\"若返回一个函数：则可以自定义渲染内容，代码如下：\",\"setup(){ return ()=> '你好啊！' }\"]},\"160\":{\"h\":\"setup 与 Options API 的关系\",\"t\":[\"Vue2 的配置（data、methos......）中可以访问到setup中的属性、方法。\",\"但在setup中不能访问到Vue2的配置（data、methos......）。\",\"如果与Vue2冲突，则setup优先。\"]},\"161\":{\"h\":\"setup 语法糖\",\"t\":[\"setup函数有一个语法糖，这个语法糖，可以让我们把setup独立出去，代码如下：\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{name}}</h2> <h2>年龄：{{age}}</h2> <button @click=\\\"changName\\\">修改名字</button> <button @click=\\\"changAge\\\">年龄+1</button> <button @click=\\\"showTel\\\">点我查看联系方式</button> </div> </template> <script lang=\\\"ts\\\"> export default { name:'Person', } </script> <!-- 下面的写法是setup语法糖 --> <script setup lang=\\\"ts\\\"> console.log(this) //undefined // 数据（注意：此时的name、age、tel都不是响应式数据） let name = '张三' let age = 18 let tel = '13888888888' // 方法 function changName(){ name = '李四'//注意：此时这么修改name页面是不变化的 } function changAge(){ console.log(age) age += 1 //注意：此时这么修改age页面是不变化的 } function showTel(){ alert(tel) } </script>\",\"扩展：上述代码，还需要编写一个不写setup的script标签，去指定组件名字，比较麻烦，我们可以借助vite中的插件简化\",\"第一步：npm i vite-plugin-vue-setup-extend -D\",\"第二步：vite.config.ts\",\"import { defineConfig } from 'vite' import VueSetupExtend from 'vite-plugin-vue-setup-extend' export default defineConfig({ plugins: [ VueSetupExtend() ] })\",\"第三步：<script setup lang=\\\"ts\\\" name=\\\"Person\\\">\"]},\"162\":{\"h\":\"3.3. 【ref 创建：基本类型的响应式数据】\",\"t\":[\"**作用：**定义响应式变量。\",\"语法：let xxx = ref(初始值)。\",\"**返回值：**一个RefImpl的实例对象，简称ref对象或ref，ref对象的value属性是响应式的。\",\"注意点：\",\"tS中操作数据需要：xxx.value，但模板中不需要.value，直接使用即可。\",\"何时需要.value？模板中不需要；包裹在响应式对象里面的ref不需要；未包裹的ref需要。\",\"对于let name = ref('张三')来说，name不是响应式的，name.value是响应式的。\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{name}}</h2> <h2>年龄：{{age}}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">年龄+1</button> <button @click=\\\"showTel\\\">点我查看联系方式</button> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Person\\\"> import {ref} from 'vue' // name和age是一个RefImpl的实例对象，简称ref对象，它们的value属性是响应式的。 let name = ref('张三') let age = ref(18) // tel就是一个普通的字符串，不是响应式的 let tel = '13888888888' function changeName(){ // JS中操作ref对象时候需要.value name.value = '李四' console.log(name.value) // 注意：name不是响应式的，name.value是响应式的，所以如下代码并不会引起页面的更新。 // name = ref('zhang-san') } function changeAge(){ // JS中操作ref对象时候需要.value age.value += 1 console.log(age.value) } function showTel(){ alert(tel) } </script>\"]},\"163\":{\"h\":\"3.4. 【reactive 创建：对象类型的响应式数据】\",\"t\":[\"作用：定义一个响应式对象（基本类型不要用它，要用ref，否则报错）\",\"语法：let 响应式对象= reactive(源对象)。\",\"**返回值：**一个Proxy的实例对象，简称：响应式对象。\",\"注意点：reactive定义的响应式数据是“深层次”的。\",\"<template> <div class=\\\"person\\\"> <h2>汽车信息：一台{{ car.brand }}汽车，价值{{ car.price }}万</h2> <h2>游戏列表：</h2> <ul> <li v-for=\\\"g in games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> <h2>测试：{{obj.a.b.c.d}}</h2> <button @click=\\\"changeCarPrice\\\">修改汽车价格</button> <button @click=\\\"changeFirstGame\\\">修改第一游戏</button> <button @click=\\\"test\\\">测试</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { reactive } from 'vue' // 数据 let car = reactive({ brand: '奔驰', price: 100 }) let games = reactive([ { id: 'ahsgdyfa01', name: '英雄联盟' }, { id: 'ahsgdyfa02', name: '王者荣耀' }, { id: 'ahsgdyfa03', name: '原神' } ]) let obj = reactive({ a:{ b:{ c:{ d:666 } } } }) function changeCarPrice() { car.price += 10 } function changeFirstGame() { games[0].name = '流星蝴蝶剑' } function test(){ obj.a.b.c.d = 999 } </script>\"]},\"164\":{\"h\":\"3.5. 【ref 创建：对象类型的响应式数据】\",\"t\":[\"其实ref接收的数据可以是：基本类型、对象类型。\",\"若ref接收的是对象类型，内部其实也是调用了reactive函数。\",\"<template> <div class=\\\"person\\\"> <h2>汽车信息：一台{{ car.brand }}汽车，价值{{ car.price }}万</h2> <h2>游戏列表：</h2> <ul> <li v-for=\\\"g in games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> <h2>测试：{{obj.a.b.c.d}}</h2> <button @click=\\\"changeCarPrice\\\">修改汽车价格</button> <button @click=\\\"changeFirstGame\\\">修改第一游戏</button> <button @click=\\\"test\\\">测试</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref } from 'vue' // 数据 let car = ref({ brand: '奔驰', price: 100 }) let games = ref([ { id: 'ahsgdyfa01', name: '英雄联盟' }, { id: 'ahsgdyfa02', name: '王者荣耀' }, { id: 'ahsgdyfa03', name: '原神' } ]) let obj = ref({ a:{ b:{ c:{ d:666 } } } }) console.log(car) function changeCarPrice() { car.value.price += 10 } function changeFirstGame() { games.value[0].name = '流星蝴蝶剑' } function test(){ obj.value.a.b.c.d = 999 } </script>\"]},\"165\":{\"h\":\"3.6. 【ref 对比 reactive】\",\"t\":[\"宏观角度看：\",\"ref用来定义：基本类型数据、对象类型数据；\",\"reactive用来定义：对象类型数据。\",\"区别：\",\"ref创建的变量必须使用.value（可以使用volar插件自动添加.value）。\",\"reactive重新分配一个新对象，会失去响应式（可以使用Object.assign去整体替换）。\",\" Object.assign(car, { brand: '奥拓', price: 1 })\",\"使用原则：\",\"若需要一个基本类型的响应式数据，必须使用ref。\",\"若需要一个响应式对象，层级不深，ref、reactive都可以。\",\"若需要一个响应式对象，且层级较深，推荐使用reactive。\"]},\"166\":{\"h\":\"3.7. 【toRefs 与 toRef】\",\"t\":[\"作用：将一个响应式对象中的每一个属性，转换为ref对象。并且改变解构的值，也会影响到原响应式对象的值。\",\"备注：toRefs与toRef功能一致，但toRefs可以批量转换。\",\"语法如下：\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{person.name}}</h2> <h2>年龄：{{person.age}}</h2> <h2>性别：{{person.gender}}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changeGender\\\">修改性别</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {ref,reactive,toRefs,toRef} from 'vue' // 数据 let person = reactive({name:'张三', age:18, gender:'男'}) // 通过toRefs将person对象中的n个属性批量取出，且依然保持响应式的能力 //改变name和gender的值，也会影响到person里面的值 let {name,gender} = toRefs(person) // 通过toRef将person对象中的gender属性取出，且依然保持响应式的能力 let age = toRef(person,'age') // 方法 function changeName(){ name.value += '~' } function changeAge(){ age.value += 1 } function changeGender(){ gender.value = '女' } </script>\"]},\"167\":{\"h\":\"3.8. 【computed】\",\"t\":[\"作用：根据已有数据计算出新数据（和Vue2中的computed作用一致）。\",\"实现同样的功能，方法function没有缓存，模板调用几次，函数就执行几次；计算属性computed有缓存，模板调用多次，实际上只执行一次。\",\"计算属性实际上是一个ref响应式对象，因此赋值时候需要加上.value\",\"<template> <div class=\\\"person\\\"> 姓：<input type=\\\"text\\\" v-model=\\\"firstName\\\"> <br> 名：<input type=\\\"text\\\" v-model=\\\"lastName\\\"> <br> 全名：<span>{{fullName}}</span> <br> 全名：<span>{{fullName}}</span> <br> <button @click=\\\"changeFullName\\\">全名改为：li-si</button> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"App\\\"> import {ref,computed} from 'vue' //引入computed let firstName = ref('zhang') let lastName = ref('san') // 计算属性——只读取，不修改 /* let fullName = computed(()=>{ return firstName.value + '-' + lastName.value }) */ // 计算属性——既读取又修改 let fullName = computed({ // 读取 get(){ return firstName.value + '-' + lastName.value }, // 修改 set(val){ console.log('有人修改了fullName',val) firstName.value = val.split('-')[0] lastName.value = val.split('-')[1] //第二种写法 //const [str1,str2] = val.split('-') //firstName.value = str1 //lastName.value = str2 } }) function changeFullName(){ fullName.value = 'li-si' //引起set的val变化 } </script>\"]},\"168\":{\"h\":\"3.9.【watch】\",\"t\":[\"作用：监视数据的变化（和Vue2中的watch作用一致）\",\"特点：Vue3中的watch只能监视以下四种数据：\",\"ref定义的数据。\",\"reactive定义的数据。\",\"函数返回一个值（getter函数）。\",\"一个包含上述内容的数组。\",\"我们在Vue3中使用watch的时候，通常会遇到以下几种情况：\"]},\"169\":{\"h\":\"* 情况一\",\"t\":[\"监视ref定义的【基本类型】数据：直接写数据名即可，监视的是其value值的改变。\",\"<template> <div class=\\\"person\\\"> <h1>情况一：监视【ref】定义的【基本类型】数据</h1> <h2>当前求和为：{{sum}}</h2> <button @click=\\\"changeSum\\\">点我sum+1</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {ref,watch} from 'vue' // 数据 let sum = ref(0) // 方法 function changeSum(){ sum.value += 1 } // 监视，情况一：监视【ref】定义的【基本类型】数据 const stopWatch = watch(sum,(newValue,oldValue)=>{ console.log('sum变化了',newValue,oldValue) if(newValue >= 10){ stopWatch() } }) </script>\"]},\"170\":{\"h\":\"* 情况二\",\"t\":[\"监视ref定义的【对象类型】数据：直接写数据名，监视的是对象的【地址值】，若想监视对象内部的数据，要手动开启深度监视。\",\"注意：\",\"若修改的是ref定义的对象中的属性，newValue 和 oldValue 都是新值，因为它们是同一个对象。\",\"若修改整个ref定义的对象，newValue 是新值， oldValue 是旧值，因为不是同一个对象了。\",\"<template> <div class=\\\"person\\\"> <h1>情况二：监视【ref】定义的【对象类型】数据</h1> <h2>姓名：{{ person.name }}</h2> <h2>年龄：{{ person.age }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changePerson\\\">修改整个人</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {ref,watch} from 'vue' // 数据 let person = ref({ name:'张三', age:18 }) // 方法 function changeName(){ person.value.name += '~' } function changeAge(){ person.value.age += 1 } function changePerson(){ person.value = {name:'李四',age:90} } /* 监视，情况一：监视【ref】定义的【对象类型】数据，监视的是对象的地址值，若想监视对象内部属性的变化，需要手动开启深度监视 watch的第一个参数是：被监视的数据 watch的第二个参数是：监视的回调 watch的第三个参数是：配置对象（deep、immediate等等.....） */ watch(person,(newValue,oldValue)=>{ console.log('person变化了',newValue,oldValue) },{deep:true,immediate:true}) </script>\"]},\"171\":{\"h\":\"* 情况三\",\"t\":[\"监视reactive定义的【对象类型】数据，且默认开启了深度监视，且深层监视无法关闭。\",\"无法监视地址值，因为对象地址值没有改变，本质上assign在原对象上进行的是赋值。\",\"newValue和oldValue值相同，都是新值，还是因为对象地址值没有改变，本质上assign在原对象上进行的是赋值。\",\"<template> <div class=\\\"person\\\"> <h1>情况三：监视【reactive】定义的【对象类型】数据</h1> <h2>姓名：{{ person.name }}</h2> <h2>年龄：{{ person.age }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changePerson\\\">修改整个人</button> <hr> <h2>测试：{{obj.a.b.c}}</h2> <button @click=\\\"test\\\">修改obj.a.b.c</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {reactive,watch} from 'vue' // 数据 let person = reactive({ name:'张三', age:18 }) let obj = reactive({ a:{ b:{ c:666 } } }) // 方法 function changeName(){ person.name += '~' } function changeAge(){ person.age += 1 } function changePerson(){ // person = { name: '李四', age: 80 }//直接修改，不行 // person = reactive({ name: '李四', age: 80 })//reactive包裹修改，也不行 Object.assign(person,{name:'李四',age:80})//本质上替换了原person的每个属性值 } function test(){ obj.a.b.c = 888 } // 监视，情况三：监视【reactive】定义的【对象类型】数据，且默认是开启深度监视的 watch(person,(newValue,oldValue)=>{ console.log('person变化了',newValue,oldValue) }) watch(obj,(newValue,oldValue)=>{ console.log('Obj变化了',newValue,oldValue) }) </script>\"]},\"172\":{\"h\":\"* 情况四\",\"t\":[\"监视ref或reactive定义的【对象类型】数据中的某个属性，注意点如下：\",\"若该属性值不是【对象类型】即【基本类型】，需要写成函数形式，此时oldValue是旧值，newValue是新值。\",\"若该属性值是依然是【对象类型】，可直接编，也可写成函数，建议写成函数。\",\"**直接写：**可以监视到对象内部属性a，b...的变化，但是监视不到整体的变化。整体改变时，对象地址值变化了，所以监视不到了。\",\"**写函数（不开启深度监视）：**监视不到对象内部属性a，b...的变化，但是可以监视到整体的变化，函数返回值监视的是对象的地址值，改变整体是产生一个新对象，所以能监视到，并且新值是新值，旧值是旧值。（不过对象内部属性a，b...的新旧值都是新值）\",\"**写函数（开启深度监视）推荐：**既能监视到对象内部属性a，b...的变化，也可以监视到整体的变化，函数返回值监视的是对象的地址值，改变整体是产生一个新对象，所以能监视到，并且新值是新值，旧值是旧值。（不过对象内部属性a，b...的新旧值都是新值）\",\"结论：监视的要是对象里的属性，那么最好写函数式。\",\"注意点：若是对象监视的是地址值，需要关注对象内部，需要手动开启深度监视。\",\"<template> <div class=\\\"person\\\"> <h1>情况四：监视【ref】或【reactive】定义的【对象类型】数据中的某个属性</h1> <h2>姓名：{{ person.name }}</h2> <h2>年龄：{{ person.age }}</h2> <h2>汽车：{{ person.car.c1 }}、{{ person.car.c2 }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changeC1\\\">修改第一台车</button> <button @click=\\\"changeC2\\\">修改第二台车</button> <button @click=\\\"changeCar\\\">修改整个车</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {reactive,watch} from 'vue' // 数据 let person = reactive({ name:'张三', age:18, car:{ c1:'奔驰', c2:'宝马' } }) // 方法 function changeName(){ person.name += '~' } function changeAge(){ person.age += 1 } function changeC1(){ person.car.c1 = '奥迪' } function changeC2(){ person.car.c2 = '大众' } function changeCar(){ person.car = {c1:'雅迪',c2:'爱玛'} } // 监视，情况四：监视响应式对象中的某个属性，且该属性是【基本类型】的，要写成函数式 /* watch(()=> person.name,(newValue,oldValue)=>{ console.log('person.name变化了',newValue,oldValue) }) */ // 监视，情况四：监视响应式对象中的某个属性，且该属性是【对象类型】的，可以直接写，也能写函数，更推荐写函数 //直接写： watch(person.car, (newValue, oldValue) => { console.log('person.car变化了', newValue, oldValue) }, { deep: true }) //写函数（不开启深度监视）： watch(()=>person.car,(newValue,oldValue)=>{ console.log('person.car变化了',newValue,oldValue) }) //写函数（开启深度监视）： watch(()=>person.car,(newValue,oldValue)=>{ console.log('person.car变化了',newValue,oldValue) },{deep:true}) </script>\"]},\"173\":{\"h\":\"* 情况五\",\"t\":[\"监视上述的多个数据\",\"<template> <div class=\\\"person\\\"> <h1>情况五：监视上述的多个数据</h1> <h2>姓名：{{ person.name }}</h2> <h2>年龄：{{ person.age }}</h2> <h2>汽车：{{ person.car.c1 }}、{{ person.car.c2 }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changeC1\\\">修改第一台车</button> <button @click=\\\"changeC2\\\">修改第二台车</button> <button @click=\\\"changeCar\\\">修改整个车</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {reactive,watch} from 'vue' // 数据 let person = reactive({ name:'张三', age:18, car:{ c1:'奔驰', c2:'宝马' } }) // 方法 function changeName(){ person.name += '~' } function changeAge(){ person.age += 1 } function changeC1(){ person.car.c1 = '奥迪' } function changeC2(){ person.car.c2 = '大众' } function changeCar(){ person.car = {c1:'雅迪',c2:'爱玛'} } // 监视，情况五：监视上述的多个数据 watch([()=>person.name,person.car],(newValue,oldValue)=>{ console.log('person.car变化了',newValue,oldValue) },{deep:true}) </script>\"]},\"174\":{\"h\":\"3.10. 【watchEffect】\",\"t\":[\"官网：立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行该函数。\",\"watch对比watchEffect\",\"都能监听响应式数据的变化，不同的是监听数据变化的方式不同\",\"watch：要明确指出监视的数据\",\"watchEffect：不用明确指出监视的数据（函数中用到哪些属性，那就监视哪些属性）。\",\"示例代码：\",\"<template> <div class=\\\"person\\\"> <h1>需求：水温达到50℃，或水位达到20cm，则联系服务器</h1> <h2 id=\\\"demo\\\">水温：{{temp}}</h2> <h2>水位：{{height}}</h2> <button @click=\\\"changePrice\\\">水温+1</button> <button @click=\\\"changeSum\\\">水位+10</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {ref,watch,watchEffect} from 'vue' // 数据 let temp = ref(0) let height = ref(0) // 方法 function changePrice(){ temp.value += 10 } function changeSum(){ height.value += 1 } // 用watch实现，需要明确的指出要监视：temp、height watch([temp,height],(value)=>{ // 从value中获取最新的temp值、height值 const [newTemp,newHeight] = value // 室温达到50℃，或水位达到20cm，立刻联系服务器 if(newTemp >= 50 || newHeight >= 20){ console.log('联系服务器') } }) // 用watchEffect实现，不用 const stopWtach = watchEffect(()=>{ // 室温达到50℃，或水位达到20cm，立刻联系服务器 if(temp.value >= 50 || height.value >= 20){ console.log(document.getElementById('demo')?.innerText) console.log('联系服务器') } // 水温达到100，或水位达到50，取消监视 if(temp.value === 100 || height.value === 50){ console.log('清理了') stopWtach() } }) </script>\"]},\"175\":{\"h\":\"3.11. 【标签的 ref 属性】\",\"t\":[\"作用：用于注册模板引用。\",\"用在普通DOM标签上，获取的是DOM节点。\",\"用在组件标签上，获取的是组件实例对象。\",\"用在普通DOM标签上：\",\"<template> <div class=\\\"person\\\"> <h1 ref=\\\"title1\\\">尚硅谷</h1> <h2 ref=\\\"title2\\\">前端</h2> <h3 ref=\\\"title3\\\">Vue</h3> <input type=\\\"text\\\" ref=\\\"inpt\\\"> <br><br> <button @click=\\\"showLog\\\">点我打印内容</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {ref} from 'vue' let title1 = ref() let title2 = ref() let title3 = ref() function showLog(){ // 通过id获取元素 const t1 = document.getElementById('title1') // 打印内容 console.log((t1 as HTMLElement).innerText) console.log((<HTMLElement>t1).innerText) console.log(t1?.innerText) /************************************/ // 通过ref获取元素 console.log(title1.value) console.log(title2.value) console.log(title3.value) } </script>\",\"用在组件标签上：\",\"<!-- 父组件App.vue --> <template> <Person ref=\\\"ren\\\"/> <button @click=\\\"test\\\">测试</button> </template> <script lang=\\\"ts\\\" setup name=\\\"App\\\"> import Person from './components/Person.vue' import {ref} from 'vue' let ren = ref() function test(){ console.log(ren.value.name) console.log(ren.value.age) } </script> <!-- 子组件Person.vue中要使用defineExpose暴露内容 --> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {ref,defineExpose} from 'vue' // 数据 let name = ref('张三') let age = ref(18) /****************************/ /****************************/ // 使用defineExpose将组件中的数据导出交给外部 defineExpose({name,age}) </script>\"]},\"176\":{\"h\":\"3.12. 【props】\",\"t\":[\"// 定义一个接口，限制每个Person对象的格式 export interface PersonInter { id:string, name:string, age:number } // 定义一个自定义类型Persons export type Persons = Array<PersonInter>\",\"App.vue中代码：\",\"<template> <Person :list=\\\"persons\\\"/> </template> <script lang=\\\"ts\\\" setup name=\\\"App\\\"> import Person from './components/Person.vue' import {reactive} from 'vue' import {type Persons} from './types' let persons = reactive<Persons>([ {id:'e98219e12',name:'张三',age:18}, {id:'e98219e13',name:'李四',age:19}, {id:'e98219e14',name:'王五',age:20} ]) </script>\",\"Person.vue中代码：\",\"<template> <div class=\\\"person\\\"> <ul> <li v-for=\\\"item in list\\\" :key=\\\"item.id\\\"> {{item.name}}--{{item.age}} </li> </ul> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {defineProps} from 'vue' import {type PersonInter} from '@/types' // 第一种写法：仅接收 // const props = defineProps(['list']) // 第二种写法：接收 + 限制类型 // defineProps<{list:Persons}>() // 第三种写法：接收 + 限制类型 + 指定默认值 + 限制必要性 let props = withDefaults(defineProps<{list?:Persons}>(),{ list:()=>[{id:'asdasg01',name:'小猪佩奇',age:18}] }) console.log(props) </script>\"]},\"177\":{\"h\":\"3.13. 【生命周期】\",\"t\":[\"概念：Vue组件实例在创建时要经历一系列的初始化步骤，在此过程中Vue会在合适的时机，调用特定的函数，从而让开发者有机会在特定阶段运行自己的代码，这些特定的函数统称为：生命周期钩子\",\"规律：\",\"生命周期整体分为四个阶段，分别是：创建、挂载、更新、销毁，每个阶段都有两个钩子，一前一后。\",\"Vue2的生命周期\",\"创建阶段：beforeCreate、created\",\"挂载阶段：beforeMount、mounted\",\"更新阶段：beforeUpdate、updated\",\"销毁阶段：beforeDestroy、destroyed\",\"Vue3的生命周期\",\"创建阶段：setup\",\"挂载阶段：onBeforeMount、onMounted\",\"更新阶段：onBeforeUpdate、onUpdated\",\"卸载阶段：onBeforeUnmount、onUnmounted\",\"常用的钩子：onMounted(挂载完毕)、onUpdated(更新完毕)、onBeforeUnmount(卸载之前)\",\"示例代码：\",\"<template> <div class=\\\"person\\\"> <h2>当前求和为：{{ sum }}</h2> <button @click=\\\"changeSum\\\">点我sum+1</button> </div> </template> <!-- vue3写法 --> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref, onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted } from 'vue' // 数据 let sum = ref(0) // 方法 function changeSum() { sum.value += 1 } console.log('setup') // 生命周期钩子 onBeforeMount(()=>{ console.log('挂载之前') }) onMounted(()=>{ console.log('挂载完毕') }) onBeforeUpdate(()=>{ console.log('更新之前') }) onUpdated(()=>{ console.log('更新完毕') }) onBeforeUnmount(()=>{ console.log('卸载之前') }) onUnmounted(()=>{ console.log('卸载完毕') }) </script>\"]},\"178\":{\"h\":\"3.14. 【自定义hook】\",\"t\":[\"什么是hook？—— 本质是一个函数，把setup函数中使用的Composition API进行了封装，类似于vue2.x中的mixin。\",\"自定义hook的优势：复用代码, 让setup中的逻辑更清楚易懂。\",\"示例代码：\",\"useSum.ts中内容如下：\",\"import {ref,onMounted} from 'vue' export default function(){ let sum = ref(0) const increment = ()=>{ sum.value += 1 } const decrement = ()=>{ sum.value -= 1 } onMounted(()=>{ increment() }) //向外部暴露数据 return {sum,increment,decrement} }\",\"useDog.ts中内容如下：\",\"import {reactive,onMounted} from 'vue' import axios,{AxiosError} from 'axios' export default function(){ let dogList = reactive<string[]>([]) // 方法 async function getDog(){ try { // 发请求 let {data} = await axios.get('https://dog.ceo/api/breed/pembroke/images/random') // 维护数据 dogList.push(data.message) } catch (error) { // 处理错误 const err = <AxiosError>error console.log(err.message) } } // 挂载钩子 onMounted(()=>{ getDog() }) //向外部暴露数据 return {dogList,getDog} }\",\"组件中具体使用：\",\"<template> <h2>当前求和为：{{sum}}</h2> <button @click=\\\"increment\\\">点我+1</button> <button @click=\\\"decrement\\\">点我-1</button> <hr> <img v-for=\\\"(u,index) in dogList.urlList\\\" :key=\\\"index\\\" :src=\\\"(u as string)\\\"> <span v-show=\\\"dogList.isLoading\\\">加载中......</span><br> <button @click=\\\"getDog\\\">再来一只狗</button> </template> <script lang=\\\"ts\\\"> import {defineComponent} from 'vue' export default defineComponent({ name:'App', }) </script> <script setup lang=\\\"ts\\\"> import useSum from './hooks/useSum' import useDog from './hooks/useDog' let {sum,increment,decrement} = useSum() let {dogList,getDog} = useDog() </script>\"]},\"179\":{\"h\":\"4.1. 【对路由的理解】\"},\"180\":{\"h\":\"4.2. 【基本切换效果】\",\"t\":[\"Vue3中要使用vue-router的最新版本，目前是4版本。\",\"路由配置文件代码如下：\",\"import {createRouter,createWebHistory} from 'vue-router' import Home from '@/pages/Home.vue' import News from '@/pages/News.vue' import About from '@/pages/About.vue' const router = createRouter({ history:createWebHistory(), routes:[ { path:'/home', component:Home }, { path:'/about', component:About } ] }) export default router\",\"main.ts代码如下：\",\"import router from './router/index' app.use(router) app.mount('#app')\",\"App.vue代码如下\",\"<template> <div class=\\\"app\\\"> <h2 class=\\\"title\\\">Vue路由测试</h2> <!-- 导航区 --> <div class=\\\"navigate\\\"> <RouterLink to=\\\"/home\\\" active-class=\\\"active\\\">首页</RouterLink> <RouterLink to=\\\"/news\\\" active-class=\\\"active\\\">新闻</RouterLink> <RouterLink to=\\\"/about\\\" active-class=\\\"active\\\">关于</RouterLink> </div> <!-- 展示区 --> <div class=\\\"main-content\\\"> <RouterView></RouterView> </div> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"App\\\"> import {RouterLink,RouterView} from 'vue-router' </script>\"]},\"181\":{\"h\":\"4.3. 【两个注意点】\",\"t\":[\"路由组件通常存放在pages 或 views文件夹，一般组件通常存放在components文件夹。\",\"通过点击导航，视觉效果上“消失” 了的路由组件，默认是被卸载掉的，需要的时候再去挂载。\",\"路由组件：靠路由规则渲染出来的。route:[{path:/demo,component:demo}]\",\"一般组件：亲手写出来的标签。<demo/>\"]},\"182\":{\"h\":\"4.4.【路由器工作模式】\",\"t\":[\"history模式\",\"优点：URL更加美观，不带有#，更接近传统的网站URL。\",\"缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有404错误。\",\"const router = createRouter({ history:createWebHistory(), //history模式 /******/ })\",\"各版本：\",\"vue2——mode:'history'\",\"vue3——history:createWebHistory()\",\"React——BrowserRouter\",\"hash模式\",\"优点：兼容性更好，因为不需要服务器端处理路径。\",\"缺点：URL带有#不太美观，且在SEO优化方面相对较差。\",\"const router = createRouter({ history:createWebHashHistory(), //hash模式 /******/ })\"]},\"183\":{\"h\":\"4.5. 【to的两种写法】\",\"t\":[\"<!-- 第一种：to的字符串写法 --> <router-link active-class=\\\"active\\\" to=\\\"/home\\\">主页</router-link> <!-- 第二种：to的对象写法 --> <router-link active-class=\\\"active\\\" :to=\\\"{path:'/home'}\\\">Home</router-link>\"]},\"184\":{\"h\":\"4.6. 【命名路由】\",\"t\":[\"作用：可以简化路由跳转及传参（后面就讲）。\",\"给路由规则命名：\",\"routes:[ { name:'zhuye', path:'/home', component:Home }, { name:'xinwen', path:'/news', component:News, }, { name:'guanyu', path:'/about', component:About } ]\",\"跳转路由：\",\"<!--简化前：需要写完整的路径（to的字符串写法） --> <!--to写法(通过路径）--> <router-link to=\\\"/news/detail\\\">跳转</router-link> <!--简化后：直接通过名字跳转（to的对象写法配合name属性） --> <!--:to写法(通过名字）--> <router-link :to=\\\"{name:'guanyu'}\\\">跳转</router-link> <!--:to写法(通过路径）--> <router-link :to=\\\"{path:'/about'}\\\">跳转</router-link>\"]},\"185\":{\"h\":\"4.7. 【嵌套路由】\",\"t\":[\"编写News的子路由：Detail.vue\",\"配置路由规则，使用children配置项：\",\"const router = createRouter({ history:createWebHistory(), routes:[ { name:'zhuye', path:'/home', component:Home }, { name:'xinwen', path:'/news', component:News, children:[ { name:'xiang', path:'detail', component:Detail } ] }, { name:'guanyu', path:'/about', component:About } ] }) export default router\",\"跳转路由（记得要加完整路径）：\",\"<router-link to=\\\"/news/detail\\\">xxxx</router-link> <!-- 或 --> <router-link :to=\\\"{path:'/news/detail'}\\\">xxxx</router-link>\",\"记得去Home组件中预留一个<router-view>\",\"<template> <div class=\\\"news\\\"> <nav class=\\\"news-list\\\"> <RouterLink v-for=\\\"news in newsList\\\" :key=\\\"news.id\\\" :to=\\\"{path:'/news/detail'}\\\"> {{news.name}} </RouterLink> </nav> <div class=\\\"news-detail\\\"> <RouterView/> </div> </div> </template>\"]},\"186\":{\"h\":\"4.8. 【路由传参】\"},\"187\":{\"h\":\"query参数\",\"t\":[\"传递参数\",\"<!-- 跳转并携带query参数（to的字符串写法） --> <router-link to=\\\"/news/detail?a=1&b=2&content=欢迎你\\\"> 跳转 </router-link> <!-- 跳转并携带query参数（to的对象写法） --> <RouterLink :to=\\\"{ //name:'xiang', //用name也可以跳转 path:'/news/detail', query:{ id:news.id, title:news.title, content:news.content } }\\\" > {{news.title}} </RouterLink>\",\"接收参数：\",\"import {useRoute} from 'vue-router' const route = useRoute() // 打印query参数 console.log(route.query)\"]},\"188\":{\"h\":\"params参数\",\"t\":[\"传递参数\",\"<!-- 跳转并携带params参数（to的字符串写法） --> <RouterLink :to=\\\"`/news/detail/001/新闻001/内容001`\\\">{{news.title}}</RouterLink> <!-- 跳转并携带params参数（to的对象写法） --> <RouterLink :to=\\\"{ name:'xiang', //用name跳转 params:{ id:news.id, title:news.title, content:news.title } }\\\" > {{news.title}} </RouterLink>\",\"接收参数：\",\"import {useRoute} from 'vue-router' const route = useRoute() // 打印params参数 console.log(route.params)\",\"备注1：传递params参数时，若使用to的对象写法，必须使用name配置项，不能用path。\",\"备注2：传递params参数时，需要提前在规则中占位。\"]},\"189\":{\"h\":\"4.9. 【路由的props配置】\",\"t\":[\"作用：让路由组件更方便的收到参数（可以将路由参数作为props传给组件）\",\"{ name:'xiang', path:'detail/:id/:title/:content', component:Detail, // props的对象写法，作用：把对象中的每一组key-value作为props传给Detail组件 // props:{a:1,b:2,c:3}, // props的布尔值写法，作用：把收到了每一组params参数，作为props传给Detail组件 // props:true // props的函数写法，作用：把返回的对象中每一组key-value作为props传给Detail组件 props(route){ return route.query } }\"]},\"190\":{\"h\":\"4.10. 【 replace属性】\",\"t\":[\"作用：控制路由跳转时操作浏览器历史记录的模式。\",\"浏览器的历史记录有两种写入方式：分别为push和replace：\",\"push是追加历史记录（默认值）。\",\"replace是替换当前记录。\",\"开启replace模式：\",\"<RouterLink replace .......>News</RouterLink>\"]},\"191\":{\"h\":\"4.11. 【编程式导航】\",\"t\":[\"路由组件的两个重要的属性：$route和$router变成了两个hooks\",\"import {useRoute,useRouter} from 'vue-router' const route = useRoute() const router = useRouter() console.log(route.query) console.log(route.parmas) console.log(router.push) console.log(router.replace)\"]},\"192\":{\"h\":\"4.12. 【重定向】\",\"t\":[\"作用：将特定的路径，重新定向到已有路由。\",\"具体编码：\",\"{ path:'/', redirect:'/about' }\"]},\"193\":{\"h\":\"5.1【准备一个效果】\"},\"194\":{\"h\":\"5.2【搭建 pinia 环境】\",\"t\":[\"第一步：npm install pinia\",\"第二步：操作src/main.ts\",\"import { createApp } from 'vue' import App from './App.vue' /* 引入createPinia，用于创建pinia */ import { createPinia } from 'pinia' /* 创建pinia */ const pinia = createPinia() const app = createApp(App) /* 使用插件 */{} app.use(pinia) app.mount('#app')\",\"此时开发者工具中已经有了pinia选项\"]},\"195\":{\"h\":\"5.3【存储+读取数据】\",\"t\":[\"Store是一个保存：状态、业务逻辑 的实体，每个组件都可以读取、写入它。\",\"它有三个概念：state、getter、action，相当于组件中的： data、 computed 和 methods。\",\"具体编码：src/store/count.ts\",\"// 引入defineStore用于创建store import {defineStore} from 'pinia' // 定义并暴露一个store export const useCountStore = defineStore('count',{ // 动作 actions:{}, // 状态 state(){ return { sum:6 } }, // 计算 getters:{} })\",\"具体编码：src/store/talk.ts\",\"// 引入defineStore用于创建store import {defineStore} from 'pinia' // 定义并暴露一个store export const useTalkStore = defineStore('talk',{ // 动作 actions:{}, // 状态 state(){ return { talkList:[ {id:'yuysada01',content:'你今天有点怪，哪里怪？怪好看的！'}, {id:'yuysada02',content:'草莓、蓝莓、蔓越莓，你想我了没？'}, {id:'yuysada03',content:'心里给你留了一块地，我的死心塌地'} ] } }, // 计算 getters:{} })\",\"组件中使用state中的数据\",\"<template> <h2>当前求和为：{{ sumStore.sum }}</h2> </template> <script setup lang=\\\"ts\\\" name=\\\"Count\\\"> // 引入对应的useXxxxxStore import {useSumStore} from '@/store/sum' // 调用useXxxxxStore得到对应的store const sumStore = useSumStore() </script>\",\"<template> <ul> <li v-for=\\\"talk in talkStore.talkList\\\" :key=\\\"talk.id\\\"> {{ talk.content }} </li> </ul> </template> <script setup lang=\\\"ts\\\" name=\\\"Count\\\"> import axios from 'axios' import {useTalkStore} from '@/store/talk' const talkStore = useTalkStore() </script>\"]},\"196\":{\"h\":\"5.4.【修改数据】(三种方式)\",\"t\":[\"第一种修改方式，直接修改\",\"countStore.sum = 666\",\"第二种修改方式：批量修改\",\"countStore.$patch({ sum:999, school:'atguigu' })\",\"第三种修改方式：借助action修改（action中可以编写一些业务逻辑）\",\"import { defineStore } from 'pinia' export const useCountStore = defineStore('count', { /*************/ actions: { //加 increment(value:number) { if (this.sum < 10) { //操作countStore中的sum this.sum += value } }, //减 decrement(value:number){ if(this.sum > 1){ this.sum -= value } } }, /*************/ })\",\"组件中调用action即可\",\"// 使用countStore const countStore = useCountStore() // 调用对应action countStore.incrementOdd(n.value)\"]},\"197\":{\"h\":\"5.5.【storeToRefs】\",\"t\":[\"借助storeToRefs将store中的数据转为ref对象，方便在模板中使用。\",\"注意：pinia提供的storeToRefs只会将数据做转换，而Vue的toRefs会转换store中数据。\",\"<template> <div class=\\\"count\\\"> <h2>当前求和为：{{sum}}</h2> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Count\\\"> import { useCountStore } from '@/store/count' /* 引入storeToRefs */ import { storeToRefs } from 'pinia' /* 得到countStore */ const countStore = useCountStore() /* 使用storeToRefs转换countStore，随后解构 */ const {sum} = storeToRefs(countStore) </script>\"]},\"198\":{\"h\":\"5.6.【getters】\",\"t\":[\"概念：当state中的数据，需要经过处理后再使用时，可以使用getters配置。\",\"追加getters配置。\",\"// 引入defineStore用于创建store import {defineStore} from 'pinia' // 定义并暴露一个store export const useCountStore = defineStore('count',{ // 动作 actions:{ /************/ }, // 状态 state(){ return { sum:1, school:'atguigu' } }, // 计算 getters:{ bigSum:(state):number => state.sum *10, upperSchool():string{ return this. school.toUpperCase() } } })\",\"组件中读取数据：\",\"const {increment,decrement} = countStore let {sum,school,bigSum,upperSchool} = storeToRefs(countStore)\"]},\"199\":{\"h\":\"5.7.【$subscribe】\",\"t\":[\"通过 store 的 $subscribe() 方法侦听 state 及其变化\",\"talkStore.$subscribe((mutate,state)=>{ console.log('LoveTalk',mutate,state) localStorage.setItem('talk',JSON.stringify(talkList.value)) })\"]},\"200\":{\"h\":\"5.8. 【store组合式写法】\",\"t\":[\"import {defineStore} from 'pinia' import axios from 'axios' import {nanoid} from 'nanoid' import {reactive} from 'vue' export const useTalkStore = defineStore('talk',()=>{ // talkList就是state const talkList = reactive( JSON.parse(localStorage.getItem('talkList') as string) || [] ) // getATalk函数相当于action async function getATalk(){ // 发请求，下面这行的写法是：连续解构赋值+重命名 let {data:{content:title}} = await axios.get('https://api.uomg.com/api/rand.qinghua?format=json') // 把请求回来的字符串，包装成一个对象 let obj = {id:nanoid(),title} // 放到数组中 talkList.unshift(obj) } return {talkList,getATalk} })\",\"Vue3组件通信和Vue2的区别：\",\"移出事件总线，使用mitt代替。\",\"vuex换成了pinia。\",\"把.sync优化到了v-model里面了。\",\"把$listeners所有的东西，合并到$attrs中了。\",\"$children被砍掉了。\",\"常见搭配形式：\"]},\"201\":{\"h\":\"6.1. 【props】\",\"t\":[\"概述：props是使用频率最高的一种通信方式，常用与 ：父 ↔ 子。\",\"若 父传子：属性值是非函数。\",\"若 子传父：属性值是函数。\",\"父组件：\",\"<template> <div class=\\\"father\\\"> <h3>父组件，</h3> <h4>我的车：{{ car }}</h4> <h4>儿子给的玩具：{{ toy }}</h4> <Child :car=\\\"car\\\" :getToy=\\\"getToy\\\"/> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Father\\\"> import Child from './Child.vue' import { ref } from \\\"vue\\\"; // 数据 const car = ref('奔驰') const toy = ref() // 方法 function getToy(value:string){ toy.value = value } </script>\",\"子组件\",\"<template> <div class=\\\"child\\\"> <h3>子组件</h3> <h4>我的玩具：{{ toy }}</h4> <h4>父给我的车：{{ car }}</h4> <button @click=\\\"getToy(toy)\\\">玩具给父亲</button> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Child\\\"> import { ref } from \\\"vue\\\"; const toy = ref('奥特曼') defineProps(['car','getToy']) </script>\"]},\"202\":{\"h\":\"6.2. 【自定义事件】\",\"t\":[\"概述：自定义事件常用于：子 => 父。\",\"注意区分好：原生事件、自定义事件。\",\"原生事件： \",\"事件名是特定的（click、mosueenter等等）\",\"事件对象$event: 是包含事件相关信息的对象（pageX、pageY、target、keyCode）\",\"自定义事件： \",\"事件名是任意名称\",\"事件对象$event: 是调用emit时所提供的数据，可以是任意类型！！！\",\"命名方式尽量不要驼峰式，而是采取keybab-case式，即send-toy\",\"示例：\",\"<!--在父组件中，给子组件绑定自定义事件：--> <Child @send-toy=\\\"toy = $event\\\"/> <!--注意区分原生事件与自定义事件中的$event--> <button @click=\\\"toy = $event\\\">测试</button>\",\"//子组件中，触发事件： this.$emit('send-toy', 具体数据)\"]},\"203\":{\"h\":\"6.3. 【mitt】\",\"t\":[\"概述：与消息订阅与发布（pubsub）功能类似，可以实现任意组件间通信。\",\"安装mitt\",\"npm i mitt\",\"新建文件：src\\\\utils\\\\emitter.ts\",\"on 触发事件\",\"off 移除事件\",\"all.clear 移除全部事件\",\"// 引入mitt import mitt from \\\"mitt\\\"; // 创建emitter const emitter = mitt() /* // 绑定事件 emitter.on('abc',(value)=>{ console.log('abc事件被触发',value) }) emitter.on('xyz',(value)=>{ console.log('xyz事件被触发',value) }) setInterval(() => { // 触发事件 emitter.emit('abc',666) emitter.emit('xyz',777) }, 1000); setTimeout(() => { // 清理事件 emitter.all.clear() }, 3000); */ // 创建并暴露mitt export default emitter\",\"接收数据的组件中：绑定事件、同时在销毁前解绑事件：\",\"import emitter from \\\"@/utils/emitter\\\"; import { onUnmounted } from \\\"vue\\\"; // 绑定事件 emitter.on('send-toy',(value)=>{ console.log('send-toy事件被触发',value) }) onUnmounted(()=>{ // 解绑事件 emitter.off('send-toy') })\",\"【第三步】：提供数据的组件，在合适的时候触发事件\",\"import emitter from \\\"@/utils/emitter\\\"; function sendToy(){ // 触发事件 emitter.emit('send-toy',toy.value) }\",\"注意这个重要的内置关系，总线依赖着这个内置关系\"]},\"204\":{\"h\":\"6.4.【v-model】\",\"t\":[\"概述：实现 父↔子 之间相互通信。\",\"前序知识 —— v-model的本质\",\"<!-- 使用v-model指令 --> <input type=\\\"text\\\" v-model=\\\"userName\\\"> <!-- v-model的本质是下面这行代码 --> <input type=\\\"text\\\" :value=\\\"userName\\\" @input=\\\"userName =(<HTMLInputElement>$event.target).value\\\" >\",\"数据到页面 :value=\\\"userName\\\" \",\"页面到数据 @input=\\\"userName =(<HTMLInputElement>$event.target).value\\\" \",\"组件标签上的v-model的本质：:moldeValue ＋ update:modelValue事件。\",\"<!-- 组件标签上使用v-model指令 --> <AtguiguInput v-model=\\\"userName\\\"/> <!-- 组件标签上v-model的本质 --> <AtguiguInput :modelValue=\\\"userName\\\" @update:model-value=\\\"userName = $event\\\"/>\",\"在vue3中：\",\"数据到页面 :modelValue=\\\"userName\\\" \",\"页面到数据 @update:model-value=\\\"userName = $event\\\" \",\"AtguiguInput组件中：\",\"<template> <div class=\\\"box\\\"> <!--将接收的value值赋给input元素的value属性，目的是：为了呈现数据 --> <!--给input元素绑定原生input事件，触发input事件时，进而触发update:model-value事件--> <input type=\\\"text\\\" :value=\\\"modelValue\\\" @input=\\\"emit('update:model-value',$event.target.value)\\\" > </div> </template> <script setup lang=\\\"ts\\\" name=\\\"AtguiguInput\\\"> // 接收props defineProps(['modelValue']) // 声明事件 const emit = defineEmits(['update:model-value']) </script>\",\"也可以更换value，例如改成abc\",\"<!-- 也可以更换value，例如改成abc--> <AtguiguInput v-model:abc=\\\"userName\\\"/> <!-- 上面代码的本质如下 --> <AtguiguInput :abc=\\\"userName\\\" @update:abc=\\\"userName = $event\\\"/>\",\"AtguiguInput组件中：\",\"<template> <div class=\\\"box\\\"> <input type=\\\"text\\\" :value=\\\"abc\\\" @input=\\\"emit('update:abc',$event.target.value)\\\" > </div> </template> <script setup lang=\\\"ts\\\" name=\\\"AtguiguInput\\\"> // 接收props defineProps(['abc']) // 声明事件 const emit = defineEmits(['update:abc']) </script>\",\"如果value可以更换，那么就可以在组件标签上多次使用v-model\",\"<AtguiguInput v-model:abc=\\\"userName\\\" v-model:xyz=\\\"password\\\"/>\",\"关于$event到底是什么？什么时候能够.target？\",\"对于原生事件，$event就是事件对象====>能.target\",\"对于自定义事件，$event就是触发事件时，所传递的对象====>不能.target\"]},\"205\":{\"h\":\"6.5.【$attrs 】\",\"t\":[\"概述：$attrs用于实现当前组件的父组件，向当前组件的子组件通信（祖→孙）。\",\"具体说明：$attrs是一个对象，包含所有父组件传入的标签属性。\",\"注意：$attrs会自动排除props中声明的属性(可以认为声明过的 props 被子组件自己“消费”了)\",\"父组件：\",\"<template> <div class=\\\"father\\\"> <h3>父组件</h3> <Child :a=\\\"a\\\" :b=\\\"b\\\" :c=\\\"c\\\" :d=\\\"d\\\" v-bind=\\\"{x:100,y:200}\\\" :updateA=\\\"updateA\\\"/> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Father\\\"> import Child from './Child.vue' import { ref } from \\\"vue\\\"; let a = ref(1) let b = ref(2) let c = ref(3) let d = ref(4) function updateA(value){ a.value = value } </script>\",\"子组件：\",\"<template> <div class=\\\"child\\\"> <h3>子组件</h3> <GrandChild v-bind=\\\"$attrs\\\"/> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Child\\\"> import GrandChild from './GrandChild.vue' </script>\",\"孙组件：\",\"<template> <div class=\\\"grand-child\\\"> <h3>孙组件</h3> <h4>a：{{ a }}</h4> <h4>b：{{ b }}</h4> <h4>c：{{ c }}</h4> <h4>d：{{ d }}</h4> <h4>x：{{ x }}</h4> <h4>y：{{ y }}</h4> <button @click=\\\"updateA(666)\\\">点我更新A</button> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"GrandChild\\\"> defineProps(['a','b','c','d','x','y','updateA']) </script>\"]},\"206\":{\"h\":\"6.6. 【$refs、$parent】\",\"t\":[\"概述：\",\"$refs用于 ：父→子。\",\"$parent用于：子→父。\",\"原理如下：\",\"属性\",\"说明\",\"$refs\",\"值为对象，包含所有被ref属性标识的DOM元素或组件实例。\",\"$parent\",\"值为对象，当前组件的父组件实例对象。\",\"子组件需要将数据暴露出来，父组件才能被允许使用；同样的，父组件把需要子组件操作的数据暴露出来，子组件才能拿到使用。\",\"// 宏函数把数据交给外部 defineExpose({ toy, book })\"]},\"207\":{\"h\":\"6.7. 【provide、inject】\",\"t\":[\"概述：实现祖孙组件直接通信\",\"具体使用：\",\"在祖先组件中通过provide配置向后代组件提供数据\",\"在后代组件中通过inject配置来声明接收数据\",\"具体编码：\",\"【第一步】父组件中，使用provide提供数据\",\"<template> <div class=\\\"father\\\"> <h3>父组件</h3> <h4>资产：{{ money }}</h4> <h4>汽车：{{ car }}</h4> <button @click=\\\"money += 1\\\">资产+1</button> <button @click=\\\"car.price += 1\\\">汽车价格+1</button> <Child/> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Father\\\"> import Child from './Child.vue' import { ref,reactive,provide } from \\\"vue\\\"; // 数据 let money = ref(100) let car = reactive({ brand:'奔驰', price:100 }) // 用于更新money的方法 function updateMoney(value:number){ money.value += value } // 提供数据 provide('moneyContext',{money,updateMoney}) provide('car',car) </script>\",\"注意：子组件中不用编写任何东西，是不受到任何打扰的\",\"【第二步】孙组件中使用inject配置项接受数据。\",\"<template> <div class=\\\"grand-child\\\"> <h3>我是孙组件</h3> <h4>资产：{{ money }}</h4> <h4>汽车：{{ car }}</h4> <button @click=\\\"updateMoney(6)\\\">点我</button> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"GrandChild\\\"> import { inject } from 'vue'; // 注入数据 let {money,updateMoney} = inject('moneyContext',{money:0,updateMoney:(x:number)=>{}}) let car = inject('car') </script>\"]},\"208\":{\"h\":\"6.8. 【pinia】\",\"t\":[\"参考之前pinia部分的讲解\"]},\"209\":{\"h\":\"6.9. 【slot】\"},\"210\":{\"h\":\"1. 默认插槽\",\"t\":[\"img\",\"父组件中： <Category title=\\\"今日热门游戏\\\"> <ul> <li v-for=\\\"g in games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> </Category> 子组件中： <template> <div class=\\\"item\\\"> <h3>{{ title }}</h3> <!-- 默认插槽 --> <slot></slot> </div> </template>\"]},\"211\":{\"h\":\"2. 具名插槽\",\"t\":[\"父组件中： <Category title=\\\"今日热门游戏\\\"> <template v-slot:s1> <ul> <li v-for=\\\"g in games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> </template> <template #s2> <a href=\\\"\\\">更多</a> </template> </Category> 子组件中： <template> <div class=\\\"item\\\"> <h3>{{ title }}</h3> <slot name=\\\"s1\\\"></slot> <slot name=\\\"s2\\\"></slot> </div> </template>\"]},\"212\":{\"h\":\"3. 作用域插槽\",\"t\":[\"理解：数据在组件的自身（子组件），但根据数据生成的结构需要组件的使用者（父组件）来决定。（新闻数据在News组件中，但使用数据所遍历出来的结构由App组件决定）\",\"具体编码：\",\"父组件中： <Game v-slot=\\\"params\\\"> <!-- <Game v-slot:default=\\\"params\\\"> --> <!-- <Game #default=\\\"params\\\"> --> <ul> <li v-for=\\\"g in params.games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> </Game> 子组件中： <template> <div class=\\\"category\\\"> <h2>今日游戏榜单</h2> <slot :games=\\\"games\\\" a=\\\"哈哈\\\"></slot> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Category\\\"> import {reactive} from 'vue' let games = reactive([ {id:'asgdytsa01',name:'英雄联盟'}, {id:'asgdytsa02',name:'王者荣耀'}, {id:'asgdytsa03',name:'红色警戒'}, {id:'asgdytsa04',name:'斗罗大陆'} ]) </script>\"]},\"213\":{\"h\":\"7.1.【shallowRef 与 shallowReactive 】\"},\"214\":{\"h\":\"\",\"t\":[\"作用：创建一个响应式数据，但只对顶层属性进行响应式处理。\",\"用法：\",\"let myVar = shallowRef(initialValue);\",\"特点：只跟踪引用值的变化，不关心值内部的属性变化。\"]},\"215\":{\"h\":\"\",\"t\":[\"作用：创建一个浅层响应式对象，只会使对象的最顶层属性变成响应式的，对象内部的嵌套属性则不会变成响应式的\",\"用法：\",\"const myObj = shallowReactive({ ... });\",\"特点：对象的顶层属性是响应式的，但嵌套对象的属性不是。\"]},\"216\":{\"h\":\"总结\",\"t\":[\"通过使用 shallowRef() 和 shallowReactive() 来绕开深度响应。浅层式 API 创建的状态只在其顶层是响应式的，对所有深层的对象不会做任何处理，避免了对每一个内部属性做响应式所带来的性能成本，这使得属性的访问变得更快，可提升性能。\"]},\"217\":{\"h\":\"7.2.【readonly 与 shallowReadonly】\"},\"218\":{\"h\":\"\",\"t\":[\"作用：用于创建一个对象的深只读副本。\",\"用法：\",\"const original = reactive({ ... }); const readOnlyCopy = readonly(original);\",\"特点：\",\"对象的所有嵌套属性都将变为只读。\",\"任何尝试修改这个对象的操作都会被阻止（在开发模式下，还会在控制台中发出警告）。\",\"应用场景：\",\"创建不可变的状态快照。\",\"保护全局状态或配置不被修改。\"]},\"219\":{\"h\":\"\",\"t\":[\"作用：与 readonly 类似，但只作用于对象的顶层属性。\",\"用法：\",\"const original = reactive({ ... }); const shallowReadOnlyCopy = shallowReadonly(original);\",\"特点：\",\"只将对象的顶层属性设置为只读，对象内部的嵌套属性仍然是可变的。\",\"适用于只需保护对象顶层属性的场景。\"]},\"220\":{\"h\":\"7.3.【toRaw 与 markRaw】\"},\"221\":{\"h\":\"\",\"t\":[\"作用：用于获取一个响应式对象的原始对象， toRaw 返回的对象不再是响应式的，不会触发视图更新。\",\"官网描述：这是一个可以用于临时读取而不引起代理访问/跟踪开销，或是写入而不触发更改的特殊方法。不建议保存对原始对象的持久引用，请谨慎使用。\",\"何时使用？ —— 在需要将响应式对象传递给非 Vue 的库或外部系统时，使用 toRaw 可以确保它们收到的是普通对象\",\"具体编码：\",\"import { reactive,toRaw,markRaw,isReactive } from \\\"vue\\\"; /* toRaw */ // 响应式对象 let person = reactive({name:'tony',age:18}) // 原始对象 let rawPerson = toRaw(person) /* markRaw */ let citysd = markRaw([ {id:'asdda01',name:'北京'}, {id:'asdda02',name:'上海'}, {id:'asdda03',name:'天津'}, {id:'asdda04',name:'重庆'} ]) // 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了 let citys2 = reactive(citys) console.log(isReactive(person)) console.log(isReactive(rawPerson)) console.log(isReactive(citys)) console.log(isReactive(citys2))\"]},\"222\":{\"h\":\"\",\"t\":[\"作用：标记一个对象，使其永远不会变成响应式的。\",\"例如使用mockjs时，为了防止误把mockjs变为响应式对象，可以使用 markRaw 去标记mockjs\",\"编码：\",\"/* markRaw */ let citys = markRaw([ {id:'asdda01',name:'北京'}, {id:'asdda02',name:'上海'}, {id:'asdda03',name:'天津'}, {id:'asdda04',name:'重庆'} ]) // 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了 let citys2 = reactive(citys)\"]},\"223\":{\"h\":\"7.4.【customRef】\",\"t\":[\"作用：创建一个自定义的ref，并对其依赖项跟踪和更新触发进行逻辑控制。\",\"实现防抖效果（useSumRef.ts）封装在hooks里面：\",\"import {customRef } from \\\"vue\\\"; export default function(initValue:string,delay:number){ //track（跟踪），trigger（触发） let msg = customRef((track,trigger)=>{ let timer:number return { //get何时调用？——msg被读取时候 get(){ track() // 告诉Vue数据msg很重要，要对msg持续关注，一旦变化就更新 return initValue }, //set何时调用？——msg被修改时候 set(value){ clearTimeout(timer) timer = setTimeout(() => { initValue = value trigger() //通知Vue数据msg变化了 }, delay); } } }) return {msg} }\",\"组件中使用：\",\"<template> <div class=\\\"app\\\"> <h2>{{ msg }}</h2> <input type=\\\"text\\\" v-model=\\\"msg\\\" > </div> </template> <script setup lang=\\\"ts\\\" name=\\\"App\\\"> import { ref } from 'vue' import useMsgRef from './useMsgRef' // 使用Vue提供的默认ref定义响应式数据，数据一变，页面就更新 // let msg = ref('你好') // 使用useMsgRef来定义一个响应式数据且有延迟效果 let { msg } = useMsgRef('你好', 2000) </script>\"]},\"224\":{\"h\":\"8.1. 【Teleport】\",\"t\":[\"什么是Teleport？—— Teleport 是一种能够将我们的组件html结构移动到指定位置的技术。\",\"<teleport to='body' > <div class=\\\"modal\\\" v-show=\\\"isShow\\\"> <h2>我是一个弹窗</h2> <p>我是弹窗中的一些内容</p> <button @click=\\\"isShow = false\\\">关闭弹窗</button> </div> </teleport>\"]},\"225\":{\"h\":\"8.2. 【Suspense】\",\"t\":[\"等待异步组件时渲染一些额外内容，让应用有更好的用户体验\",\"使用步骤： \",\"异步引入组件\",\"使用Suspense包裹组件，并配置好default 与 fallback\",\"import { defineAsyncComponent,Suspense } from \\\"vue\\\"; const Child = defineAsyncComponent(()=>import('./Child.vue'))\",\"<Child/>是一个包含了异步请求的子组件\",\"<template> <div class=\\\"child\\\"> <h2>我是Child组件</h2> <h3>当前求和为：{{ sum }}</h3> </div> </template> <script setup lang=\\\"ts\\\"> import { ref } from 'vue' import axios from 'axios' let sum = ref(0) let { data: { content } } = await axios.get('https://api.uomg.com/api/rand.qinghua?format=json') console.log(content) </script>\",\"<template> <div class=\\\"app\\\"> <h3>我是App组件</h3> <Suspense> <template v-slot:default> <Child/> </template> <template v-slot:fallback> <h3>加载中.......</h3> </template> </Suspense> </div> </template>\"]},\"226\":{\"h\":\"8.3.【全局API转移到应用对象】\",\"t\":[\"app.component 注册全局组件\",\"app.config 配置对象\",\"app.directive 注册全局指令\",\"app.mount\",\"app.unmount\",\"app.use\"]},\"227\":{\"h\":\"8.4.【其他】\",\"t\":[\"过渡类名 v-enter 修改为 v-enter-from、过渡类名 v-leave 修改为 v-leave-from。\",\"keyCode 作为 v-on 修饰符的支持。\",\"v-model 指令在组件上的使用已经被重新设计，替换掉了 v-bind.sync。\",\"v-if 和 v-for 在同一个元素身上使用时的优先级发生了变化。\",\"移除了$on、$off 和 $once 实例方法。\",\"移除了过滤器 filter。\",\"移除了$children 实例 propert。\",\"......\"]},\"228\":{\"c\":[\"前端开发\"]},\"229\":{\"c\":[\"Vue3\",\"前端开发\"]},\"230\":{\"h\":\"Vue组件通信方式\",\"t\":[\"Vue2组件之间的通信方式： 1.props:可以实现父子组件、字父组件、甚至兄弟组件通信 2.自定义事件:可以实现子父组件通信 3.全局事件总线$bus:可以实现任意组件通信 4.pubsub:发布订阅模式实现任意组件通信 5.vuex:集中式状态管理容器，实现任意组件通信 6.ref:父组件获取子组件实例，获取子组件的响应式数据以及方法 7.slot：插槽（默认插槽、具名插槽、作用于插槽）实现父子组件通信\",\"Vue3组件之间的通信方式： 1.props:可以实现父子组件、字父组件、甚至兄弟组件通信 2.自定义事件:可以实现子父组件通信 3.插件mitt:可以实现任意组件通信 4.pubsub:发布订阅模式实现任意组件通信 5.pinia:集中式状态管理容器，实现任意组件通信 6.ref:父组件获取子组件实例，获取子组件的响应式数据以及方法 7.slot：插槽（默认插槽、具名插槽、作用于插槽）实现父子组件通信 8.provide/inject:提供注入\"]},\"231\":{\"h\":\"1.1props\",\"t\":[\"props可以实现父子组件通信,在vue3中我们可以通过defineProps获取父组件传递的数据。且在组件内部不需要引入defineProps方法可以直接使用！\",\"父组件给子组件传递数据\",\"<Child info=\\\"传递信息\\\" :money=\\\"money\\\"></Child>\",\"子组件获取父组件传递数据:方式1\",\"let props = defineProps({ info:{ type:String,//接受的数据类型 default:'默认参数',//接受默认数据 }, money:{ type:Number, default:0 }})\",\"子组件获取父组件传递数据:方式2\",\"let props = defineProps([\\\"info\\\",'money']);\",\"子组件获取到props数据就可以在模板中使用了,但是切记props是只读的(只能读取，不能修改)\"]},\"232\":{\"h\":\"1.2自定义事件\",\"t\":[\"在vue框架中事件分为两种:一种是原生的DOM事件，另外一种自定义事件。\",\"原生DOM事件可以让用户与网页进行交互，比如click、dbclick、change、mouseenter、mouseleave....\",\"自定义事件可以实现子组件给父组件传递数据\"]},\"233\":{\"h\":\"1.2.1原生DOM事件\",\"t\":[\"代码如下:\",\" <pre @click=\\\"handler\\\"> 事件名称 </pre>\",\"当前代码级给pre标签绑定原生DOM事件点击事件,默认会给事件回调注入event事件对象。当然点击事件想注入多个参数可以按照下图操作。但是切记注入的事件对象务必叫做$event.\",\" <div @click=\\\"handler1(1,2,3,$event)\\\">我要传递多个参数</div>\",\"在vue3框架click、dbclick、change(这类原生DOM事件),不管是在标签、自定义标签上(组件标签)都是原生DOM事件。\"]},\"234\":{\"h\":\"1.2.2自定义事件\",\"t\":[\"自定义事件可以实现子组件给父组件传递数据.在项目中是比较常用的。\",\"比如在父组件内部给子组件(Event2)绑定一个自定义事件\",\"<Event2 @xxx=\\\"handler3\\\"></Event2>\",\"在Event2子组件内部触发这个自定义事件\",\"<template> <div> <h1>我是子组件2</h1> <button @click=\\\"handler\\\">点击我触发xxx自定义事件</button> </div> </template> <script setup lang=\\\"ts\\\"> let $emit = defineEmits([\\\"xxx\\\"]); const handler = () => { $emit(\\\"xxx\\\", \\\"法拉利\\\", \\\"茅台\\\"); }; </script> <style scoped> </style>\",\"我们会发现在script标签内部,使用了defineEmits方法，此方法是vue3提供的方法,不需要引入直接使用。defineEmits方法执行，传递一个数组，数组元素即为将来组件需要触发的自定义事件类型，此方执行会返回一个$emit方法用于触发自定义事件。\",\"当点击按钮的时候，事件回调内部调用$emit方法去触发自定义事件,第一个参数为触发事件类型，第二个、三个、N个参数即为传递给父组件的数据。\",\"需要注意的是:代码如下\",\"<Event2 @xxx=\\\"handler3\\\" @click=\\\"handler\\\"></Event2>\",\"正常说组件标签书写@click应该为原生DOM事件,但是如果子组件内部通过defineEmits定义就变为自定义事件了\",\"let $emit = defineEmits([\\\"xxx\\\",'click']);\"]},\"235\":{\"h\":\"1.3全局事件总线\",\"t\":[\"全局事件总线可以实现任意组件通信，在vue2中可以根据VM与VC关系推出全局事件总线。\",\"但是在vue3中没有Vue构造函数，也就没有Vue.prototype.以及组合式API写法没有this，\",\"那么在Vue3想实现全局事件的总线功能就有点不现实啦，如果想在Vue3中使用全局事件总线功能\",\"可以使用插件mitt实现。\",\"mitt:官网地址:https://www.npmjs.com/package/mitt\"]},\"236\":{\"h\":\"1.4v-model\",\"t\":[\"v-model指令可是收集表单数据(数据双向绑定)，除此之外它也可以实现父子组件数据同步。\",\"而v-model实指利用props[modelValue]与自定义事件[update:modelValue]实现的。\",\"下方代码:相当于给组件Child传递一个props(modelValue)与绑定一个自定义事件update:modelValue\",\"实现父子组件数据同步\",\"<Child v-model=\\\"msg\\\"></Child>\",\"在vue3中一个组件可以通过使用多个v-model,让父子组件多个数据同步,下方代码相当于给组件Child传递两个props分别是pageNo与pageSize，以及绑定两个自定义事件update:pageNo与update:pageSize实现父子数据同步\",\"<Child v-model:pageNo=\\\"msg\\\" v-model:pageSize=\\\"msg1\\\"></Child>\"]},\"237\":{\"h\":\"1.5useAttrs\",\"t\":[\"在Vue3中可以利用useAttrs方法获取组件的属性与事件(包含:原生DOM事件或者自定义事件),次函数功能类似于Vue2框架中$attrs属性与$listeners方法。\",\"比如:在父组件内部使用一个子组件my-button\",\"<my-button type=\\\"success\\\" size=\\\"small\\\" title='标题' @click=\\\"handler\\\"></my-button>\",\"子组件内部可以通过useAttrs方法获取组件属性与事件.因此你也发现了，它类似于props,可以接受父组件传递过来的属性与属性值。需要注意如果defineProps接受了某一个属性，useAttrs方法返回的对象身上就没有相应属性与属性值。\",\"<script setup lang=\\\"ts\\\"> import {useAttrs} from 'vue'; let $attrs = useAttrs(); </script>\"]},\"238\":{\"h\":\"1.6ref与$parent\",\"t\":[\"ref,提及到ref可能会想到它可以获取元素的DOM或者获取子组件实例的VC。既然可以在父组件内部通过ref获取子组件实例VC，那么子组件内部的方法与响应式数据父组件可以使用的。\",\"比如:在父组件挂载完毕获取组件实例\",\"父组件内部代码:\",\"<template> <div> <h1>ref与$parent</h1> <Son ref=\\\"son\\\"></Son> </div> </template> <script setup lang=\\\"ts\\\"> import Son from \\\"./Son.vue\\\"; import { onMounted, ref } from \\\"vue\\\"; const son = ref(); onMounted(() => { console.log(son.value); }); </script>\",\"但是需要注意，如果想让父组件获取子组件的数据或者方法需要通过defineExpose对外暴露,因为vue3中组件内部的数据对外“关闭的”，外部不能访问\",\"<script setup lang=\\\"ts\\\"> import { ref } from \\\"vue\\\"; //数据 let money = ref(1000); //方法 const handler = ()=>{ } defineExpose({ money, handler }) </script>\",\"$parent可以获取某一个组件的父组件实例VC,因此可以使用父组件内部的数据与方法。必须子组件内部拥有一个按钮点击时候获取父组件实例，当然父组件的数据与方法需要通过defineExpose方法对外暴露\",\"<button @click=\\\"handler($parent)\\\">点击我获取父组件实例</button>\"]},\"239\":{\"h\":\"1.7provide与inject\",\"t\":[\"provide[提供]\",\"inject[注入]\",\"vue3提供两个方法provide与inject,可以实现隔辈组件传递参数\",\"组件组件提供数据:\",\"provide方法用于提供数据，此方法执需要传递两个参数,分别提供数据的key与提供数据value\",\"<script setup lang=\\\"ts\\\"> import {provide} from 'vue' provide('token','admin_token'); </script>\",\"后代组件可以通过inject方法获取数据,通过key获取存储的数值\",\"<script setup lang=\\\"ts\\\"> import {inject} from 'vue' let token = inject('token'); </script>\"]},\"240\":{\"h\":\"1.8pinia\",\"t\":[\"pinia官网:https://pinia.web3doc.top/\",\"pinia也是集中式管理状态容器,类似于vuex。但是核心概念没有mutation、modules,使用方式参照官网\"]},\"241\":{\"h\":\"1.9slot\",\"t\":[\"插槽：默认插槽、具名插槽、作用域插槽可以实现父子组件通信.\",\"默认插槽:\",\"在子组件内部的模板中书写slot全局组件标签\",\"<template> <div> <slot></slot> </div> </template> <script setup lang=\\\"ts\\\"> </script> <style scoped> </style>\",\"在父组件内部提供结构：Todo即为子组件,在父组件内部使用的时候，在双标签内部书写结构传递给子组件\",\"注意开发项目的时候默认插槽一般只有一个\",\"<Todo> <h1>我是默认插槽填充的结构</h1> </Todo>\",\"具名插槽：\",\"顾名思义，此插槽带有名字在组件内部留多个指定名字的插槽。\",\"下面是一个子组件内部,模板中留两个插槽\",\"<template> <div> <h1>todo</h1> <slot name=\\\"a\\\"></slot> <slot name=\\\"b\\\"></slot> </div> </template> <script setup lang=\\\"ts\\\"> </script> <style scoped> </style>\",\"父组件内部向指定的具名插槽传递结构。需要注意v-slot：可以替换为#\",\"<template> <div> <h1>slot</h1> <Todo> <template v-slot:a> //可以用#a替换 <div>填入组件A部分的结构</div> </template> <template v-slot:b>//可以用#b替换 <div>填入组件B部分的结构</div> </template> </Todo> </div> </template> <script setup lang=\\\"ts\\\"> import Todo from \\\"./Todo.vue\\\"; </script> <style scoped> </style>\",\"作用域插槽\",\"作用域插槽：可以理解为，子组件数据由父组件提供，但是子组件内部决定不了自身结构与外观(样式)\",\"子组件Todo代码如下:\",\"<template> <div> <h1>todo</h1> <ul> <!--组件内部遍历数组--> <li v-for=\\\"(item,index) in todos\\\" :key=\\\"item.id\\\"> <!--作用域插槽将数据回传给父组件--> <slot :$row=\\\"item\\\" :$index=\\\"index\\\"></slot> </li> </ul> </div> </template> <script setup lang=\\\"ts\\\"> defineProps(['todos']);//接受父组件传递过来的数据 </script> <style scoped> </style>\",\"父组件内部代码如下:\",\"<template> <div> <h1>slot</h1> <Todo :todos=\\\"todos\\\"> <template v-slot=\\\"{$row,$index}\\\"> <!--父组件决定子组件的结构与外观--> <span :style=\\\"{color:$row.done?'green':'red'}\\\">{{$row.title}}</span> </template> </Todo> </div> </template> <script setup lang=\\\"ts\\\"> import Todo from \\\"./Todo.vue\\\"; import { ref } from \\\"vue\\\"; //父组件内部数据 let todos = ref([ { id: 1, title: \\\"吃饭\\\", done: true }, { id: 2, title: \\\"睡觉\\\", done: false }, { id: 3, title: \\\"打豆豆\\\", done: true }, ]); </script> <style scoped> </style>\"]},\"242\":{\"c\":[\"前端开发\"]},\"243\":{\"c\":[\"Vue组件通信方式\",\"前端开发\"]},\"244\":{\"h\":\"Vue3定于组件名字的几种方法\"},\"245\":{\"h\":\"方法一\",\"t\":[\"使用两个组件标签\",\"<script lang=\\\"ts\\\"> export default({ name:'myComponnet' }) </script> <script lang=\\\"ts\\\" setup> // 组件逻辑 </script>\"]},\"246\":{\"h\":\"方法二\",\"t\":[\"使用defineOptions <script> defineOptions({ name:'myComponnet' }) </script>\"]},\"247\":{\"h\":\"方法三\",\"t\":[\"使用插件 ：pnpm i vite-plugin-vue-setup-extend -D\"]},\"248\":{\"c\":[\"前端开发\"]},\"249\":{\"h\":\"为什么Vue3没有this\",\"t\":[\"‌ Vue 3 没有this的主要原因是因为它引入了 组合式API（Composition API），这种新的API设 计使得代码更加模块化和清晰，减少了对this的依赖‌‌.\"]},\"250\":{\"h\":\"1.组合式API的作用和优势\",\"t\":[\"组合式API通过 setup函数 来定义组件的状态和行为，所有的响应式状态和方法都定义在setup函数内，并通过返回对象的形式暴露出去。这种方式不再需要使用this，因为状态和方法都是通过显式的变量和函数来引用，从而避免了this指向不明确的问题‌.组合式API的优点包括：1.‌模块化‌：将组件逻辑拆分成更小的、可重用的函数，使得代码更易于维护和测试。2.‌逻辑清晰‌：避免了this带来的困惑，尤其是在复杂的组件中。3.‌类型支持‌：与 TypeScript 结合更加自然，能够更好地利用TypeScript的类型检查和智能提示‌\",\"组合式API的具体应用示例 在Vue 3中，组合式API的使用方式如下：\",\"import { ref } from 'vue'; export default { setup() { const count = ref(0); const increment = () => { count.value++; }; return { count, increment }; } }\",\"在这个例子中，count和increment函数都不需要使用this，因为它们是通过显式的变量和函数来引用的\"]},\"251\":{\"c\":[\"前端开发\"]},\"252\":{\"h\":\"webpack打包优化方案\"},\"253\":{\"c\":[\"前端开发\"]},\"254\":{\"h\":\"webpack Loader类型\"},\"255\":{\"c\":[\"前端开发\"]},\"256\":{\"h\":\"webpack与vite的区别\",\"t\":[\"‌Vue3 项目中使用 Webpack 和 Vite 的主要区别包括构建原理、性能、配置复杂度、生态支持以及适用场景等方面。\"]},\"257\":{\"h\":\"构建原理与性能\",\"t\":[\"‌Webpack‌：采用打包器模式，启动时需遍历整个模块依赖图，将所有资源打包成Bundle，再启动开发服务器。这种方式在项目规模增大时，启动和热更新速度会变慢，尤其是在大型项目中，冷启动时间可能长达几分钟‌。\",\"‌Vite‌：基于ES Modules原生支持，开发环境下直接利用浏览器原生ES Module加载模块，无需打包，仅编译被请求的文件。这种方式使得Vite的冷启动速度极快（毫秒级），热更新也几乎实时，适合频繁开发的迭代‌。\"]},\"258\":{\"h\":\"配置复杂度与生态支持\",\"t\":[\"‌Webpack‌：高度灵活但配置复杂，需要手动处理Loader和Plugin。Webpack的插件生态庞大，覆盖复杂场景，适合深度定制化项目‌\",\"‌Vite‌：开箱即用，默认支持TS、CSS预处理器等，简化配置。虽然插件生态较小，但正在快速发展，支持现代工具链如TypeScript、CSS Modules等‌。\"]},\"259\":{\"h\":\"适用场景\",\"t\":[\"Webpack‌：适合需要深度定制或兼容性要求高的项目，尤其是在需要支持老旧浏览器或复杂构建需求时‌。\",\"‌Vite‌：特别适合新项目或现代框架（如Vue 3/React），尤其适合开发效率要求高的场景。对于大型项目，可以混合使用（开发用Vite，生产用Webpack）‌\"]},\"260\":{\"c\":[\"前端开发\"]},\"261\":{\"h\":\"学习网站\",\"t\":[\"此处是 reveal 存放的一些网站，持续更新中.....。\"]},\"262\":{\"h\":\"前端开发\",\"t\":[\"1.Vue3：https://cn.vuejs.org/guide/introduction.html 2.UI: https://element-plus.org/zh-CN/component/overview.html 3.ES6 入门教程: https://es6.ruanyifeng.com/ 4.TypeScript 教程：https://www.runoob.com/typescript/ts-install.html 5.前端数据存储解析: https://blog.csdn.net/m0_74037439/article/details/146538639 6.为什么推荐使用ref而不是reactive: https://mp.weixin.qq.com/s/WEN8UjEHGDQpMiQMJXf1ww\"]},\"263\":{\"h\":\"MarkDown 文档\",\"t\":[\"1.菜鸟：https://www.runoob.com/markdown/md-code.html\"]},\"264\":{\"h\":\"布局与功能禁用\",\"t\":[\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\",\"本页面就是一个示例，禁用了如下功能:\",\"导航栏\",\"侧边栏\",\"路径导航\",\"页面信息\",\"贡献者\",\"编辑此页链接\",\"更新时间\",\"上一篇/下一篇 链接\",\"评论\",\"页脚\",\"返回顶部按钮\"]},\"265\":{\"c\":[\"使用指南\"]},\"266\":{\"c\":[\"禁用\"]},\"267\":{\"h\":\"布局\",\"t\":[\"布局包括:\",\"导航栏\",\"侧边栏\",\"页脚\",\"同时每个页面包含:\",\"路径导航\",\"标题和页面信息\",\"TOC (文章标题列表)\",\"贡献者、更新时间等页面元信息\",\"评论\",\"主题也带有以下元素:\",\"夜间模式按钮\",\"返回顶部按钮\",\"打印按钮\",\"你可以在主题选项和页面的 frontmatter 中自定义它们。\"]},\"268\":{\"c\":[\"指南\"]},\"269\":{\"c\":[\"布局\"]},\"270\":{\"h\":\"Markdown 展示\",\"t\":[\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\",\"你需要创建并编写 Markdown，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"]},\"271\":{\"h\":\"Markdown 介绍\",\"t\":[\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"]},\"272\":{\"h\":\"Markdown 配置\",\"t\":[\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\",\"Frontmatter\",\"Frontmatter 是 VuePress 中很重要的一个概念，请阅读 Frontmatter 介绍 了解详情。\"]},\"273\":{\"h\":\"Markdown 扩展\",\"t\":[\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"]},\"274\":{\"h\":\"VuePress 扩展\",\"t\":[\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\",\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"]},\"275\":{\"h\":\"主题扩展\",\"t\":[\"通过 VuePress 插件，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"]},\"276\":{\"h\":\"选项卡\",\"t\":[\"查看详情\"]},\"277\":{\"h\":\"脚注\",\"t\":[\"此文字有脚注[1].\",\"查看详情\"]},\"278\":{\"h\":\"导入文件\",\"t\":[\"查看详情\"]},\"279\":{\"h\":\"TeX 语法\",\"t\":[\"$$ \\\\frac {\\\\partial^r} {\\\\partial \\\\omega^r} \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) = \\\\left(\\\\frac {y^{\\\\omega}} {\\\\omega}\\\\right) \\\\left{(\\\\log y)^r + \\\\sum_{i=1}^r \\\\frac {(-1)^i r \\\\cdots (r-i+1) (\\\\log y)^{r-i}} {\\\\omega^i} \\\\right} $$\",\"查看详情\"]},\"280\":{\"h\":\"任务列表\",\"t\":[\" 计划 1\",\" 计划 2\",\"查看详情\"]},\"281\":{\"h\":\"图片增强\",\"t\":[\"支持为图片设置颜色模式和大小。\",\"查看详情\"]},\"282\":{\"h\":\"上下角标\",\"t\":[\"19th H2O\",\"查看详情\"]},\"283\":{\"h\":\"组件\"},\"284\":{\"c\":[\"使用指南\"]},\"285\":{\"c\":[\"Markdown\"]},\"286\":{\"h\":\"页面配置\",\"t\":[\"more 注释之前的内容被视为文章摘要。\"]},\"287\":{\"h\":\"页面标题\",\"t\":[\"The first H1 title in Markdown will be regarded as page title.\",\"Markdown 中的第一个 H1 标题会被视为页面标题。\",\"你可以在 Markdown 的 Frontmatter 中设置页面标题。\",\"--- title: 页面标题 ---\"]},\"288\":{\"h\":\"页面信息\",\"t\":[\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\",\"作者设置为 Ms.Hope。\",\"写作日期为 2020 年 1 月 1 日\",\"分类为 “使用指南”\",\"标签为 “页面配置” 和 “使用指南”\"]},\"289\":{\"h\":\"页面内容\",\"t\":[\"你可以自由在这里书写你的 Markdown。\",\"图片引入\",\"你可以将图片和 Markdown 文件放置在一起使用相对路径进行引用。\",\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"]},\"290\":{\"h\":\"组件\",\"t\":[\"每个 Markdown 页面都会被转换为一个 Vue 组件，这意味着你可以在 Markdown 中使用 Vue 语法：\",\"{{ 1 + 1 }}\",\"{{ i }}\",\"你也可以创建并引入你自己的组件。\"]},\"291\":{\"c\":[\"使用指南\"]},\"292\":{\"c\":[\"页面配置\",\"使用指南\"]},\"293\":{\"h\":\"主要功能与配置演示\"},\"294\":{\"c\":[\"使用指南\"]},\"295\":{\"h\":\"reveal随笔\",\"t\":[\"此处是 reveal 存放的一些随笔，散文、诗歌、感想等，持续更新中.....。\"]},\"296\":{\"c\":[\"reveal随笔\"]},\"297\":{\"h\":\"背影\",\"t\":[\"作者：朱自清\",\"我与父亲不相见已二年余了，我最不能忘记的是他的背影。\",\"那年冬天，祖母死了，父亲的差使也交卸了，正是祸不单行的日子。我从北京到徐州打算跟着父亲奔丧回家。到徐州见着父亲，看见满院狼藉的东西，又想起祖母，不禁簌簌地流下眼泪。父亲说，“事已如此，不必难过，好在天无绝人之路！”\",\"回家变卖典质，父亲还了亏空；又借钱办了丧事。这些日子，家中光景很是惨淡，一半为了丧事，一半为了父亲赋闲。丧事完毕，父亲要到南京谋事，我也要回北京念书，我们便同行。\",\"到南京时，有朋友约去游逛，勾留了一日；第二日上午便须渡江到浦口，下午上车北去。父亲因为事忙，本已说定不送我，叫旅馆里一个熟识的茶房陪我同去。他再三嘱咐茶房，甚是仔细。但他终于不放心，怕茶房不妥帖；颇踌躇了一会。其实我那年已二十岁，北京已来往过两三次，是没有什么要紧的了。他踌躇了一会，终于决定还是自己送我去。我两三回劝他不必去；他只说，“不要紧，他们去不好！”\",\"我们过了江，进了车站。我买票，他忙着照看行李。行李太多了，得向脚夫行些小费才可过去。他便又忙着和他们讲价钱。我那时真是聪明过分，总觉他说话不大漂亮，非自己插嘴不可，但他终于讲定了价钱；就送我上车。他给我拣定了靠车门的一张椅子；我将他给我做的紫毛大衣铺好坐位。他嘱我路上小心，夜里要警醒些，不要受凉。又嘱托茶房好好照应我。我心里暗笑他的迂；他们只认得钱，托他们只是白托！而且我这样大年纪的人，难道还不能料理自己么？唉，我现在想想，那时真是太聪明了！\",\"我说道，“爸爸，你走吧。”他往车外看了看说：“我买几个橘子去。你就在此地，不要走动。”我看那边月台的栅栏外有几个卖东西的等着顾客。走到那边月台，须穿过铁道，须跳下去又爬上去。父亲是一个胖子，走过去自然要费事些。我本来要去的，他不肯，只好让他去。我看见他戴着黑布小帽，穿着黑布大马褂，深青布棉袍，蹒跚地走到铁道边，慢慢探身下去，尚不大难。可是他穿过铁道，要爬上那边月台，就不容易了。他用两手攀着上面，两脚再向上缩；他肥胖的身子向左微倾，显出努力的样子。这时我看见他的背影，我的泪很快地流下来了。我赶紧拭干了泪。怕他看见，也怕别人看见。我再向外看时，他已抱了朱红的橘子往回走了。过铁道时，他先将橘子散放在地上，自己慢慢爬下，再抱起橘子走。到这边时，我赶紧去搀他。他和我走到车上，将橘子一股脑儿放在我的皮大衣上。于是扑扑衣上的泥土，心里很轻松似的。过一会说：“我走了，到那边来信！”我望着他走出去。他走了几步，回过头看见我，说：“进去吧，里边没人。”等他的背影混入来来往往的人里，再找不着了，我便进来坐下，我的眼泪又来了。\",\"近几年来，父亲和我都是东奔西走，家中光景是一日不如一日。他少年出外谋生，独力支持，做了许多大事。哪知老境却如此颓唐！他触目伤怀，自然情不能自已。情郁于中，自然要发之于外；家庭琐屑便往往触他之怒。他待我渐渐不同往日。但最近两年的不见，他终于忘却我的不好，只是惦记着我，惦记着我的儿子。我北来后，他写了一信给我，信中说道：“我身体平安，惟膀子疼痛厉害，举箸提笔，诸多不便，大约大去之期不远矣。”我读到此处，在晶莹的泪光中，又看见那肥胖的、青布棉袍黑布马褂的背影。唉！我不知何时再能与他相见！\"]},\"298\":{\"h\":\"遇到的问题记录\",\"t\":[\"此处是 reveal 存放的一些项目中的总结、报错、解决方法等。\"]},\"299\":{\"c\":[\"项目\"]},\"300\":{\"h\":\"记一次vite项目无法启动的问题\"},\"301\":{\"h\":\"问题描述\",\"t\":[\"在启动vue3项目，项目构建工具使用的是vite，但当我满心欢喜一顿install、dev操作启动之后，发现报错了；\"]},\"302\":{\"h\":\"问题分析\",\"t\":[\"跟随提示发现esbuild@0.11.3下没有esbuild.exe文件\"]},\"303\":{\"h\":\"解决方案\",\"t\":[\"手动执行这个文件,node D:\\\\project\\\\node_modules.pnpm\\\\esbuild@0.11.3\\\\node_modules\\\\esbuild\\\\install 运行正常\"]},\"304\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"手动执行这个文件\",{\"1\":{\"303\":1}}],[\"跟随提示发现esbuild\",{\"1\":{\"302\":1}}],[\"跟踪\",{\"1\":{\"223\":1}}],[\"跟踪开销\",{\"1\":{\"221\":1}}],[\"问题分析\",{\"0\":{\"302\":1}}],[\"问题描述\",{\"0\":{\"301\":1}}],[\"记一次vite项目无法启动的问题\",{\"0\":{\"300\":1}}],[\"记得去home组件中预留一个<router\",{\"1\":{\"185\":1}}],[\"记得要加完整路径\",{\"1\":{\"185\":1}}],[\"项目构建工具使用的是vite\",{\"1\":{\"301\":1}}],[\"项目\",{\"2\":{\"299\":1}}],[\"项目中使用\",{\"1\":{\"256\":1}}],[\"项目中\",{\"1\":{\"152\":1}}],[\"报错\",{\"1\":{\"298\":1}}],[\"遇到的问题记录\",{\"0\":{\"298\":1}}],[\"青布棉袍黑布马褂的背影\",{\"1\":{\"297\":1}}],[\"诸多不便\",{\"1\":{\"297\":1}}],[\"举箸提笔\",{\"1\":{\"297\":1}}],[\"惟膀子疼痛厉害\",{\"1\":{\"297\":1}}],[\"信中说道\",{\"1\":{\"297\":1}}],[\"惦记着我的儿子\",{\"1\":{\"297\":1}}],[\"家庭琐屑便往往触他之怒\",{\"1\":{\"297\":1}}],[\"家中光景是一日不如一日\",{\"1\":{\"297\":1}}],[\"家中光景很是惨淡\",{\"1\":{\"297\":1}}],[\"情郁于中\",{\"1\":{\"297\":1}}],[\"情况五\",{\"0\":{\"173\":1},\"1\":{\"173\":1}}],[\"情况四\",{\"0\":{\"172\":1},\"1\":{\"172\":2}}],[\"情况三\",{\"0\":{\"171\":1},\"1\":{\"171\":1}}],[\"情况二\",{\"0\":{\"170\":1}}],[\"情况一\",{\"0\":{\"169\":1},\"1\":{\"169\":1,\"170\":1}}],[\"哪知老境却如此颓唐\",{\"1\":{\"297\":1}}],[\"哪里怪\",{\"1\":{\"195\":1}}],[\"做了许多大事\",{\"1\":{\"297\":1}}],[\"独力支持\",{\"1\":{\"297\":1}}],[\"独立单词匹配\",{\"1\":{\"47\":1}}],[\"近几年来\",{\"1\":{\"297\":1}}],[\"里边没人\",{\"1\":{\"297\":1}}],[\"里面定义属性提供三种修饰符\",{\"1\":{\"131\":1}}],[\"说\",{\"1\":{\"297\":1}}],[\"说明\",{\"1\":{\"32\":1,\"108\":1,\"156\":1,\"206\":1}}],[\"心里很轻松似的\",{\"1\":{\"297\":1}}],[\"心里给你留了一块地\",{\"1\":{\"195\":1}}],[\"于是扑扑衣上的泥土\",{\"1\":{\"297\":1}}],[\"于是就有了\",{\"1\":{\"75\":1}}],[\"再找不着了\",{\"1\":{\"297\":1}}],[\"再抱起橘子走\",{\"1\":{\"297\":1}}],[\"再启动开发服务器\",{\"1\":{\"257\":1}}],[\"怕他看见\",{\"1\":{\"297\":1}}],[\"怕茶房不妥帖\",{\"1\":{\"297\":1}}],[\"显出努力的样子\",{\"1\":{\"297\":1}}],[\"显示数据颜色\",{\"1\":{\"9\":1}}],[\"显示的位置坐标\",{\"1\":{\"8\":1}}],[\"显示文字类型\",{\"1\":{\"8\":1}}],[\"尚不大难\",{\"1\":{\"297\":1}}],[\"慢慢探身下去\",{\"1\":{\"297\":1}}],[\"蹒跚地走到铁道边\",{\"1\":{\"297\":1}}],[\"穿着黑布大马褂\",{\"1\":{\"297\":1}}],[\"走过去自然要费事些\",{\"1\":{\"297\":1}}],[\"走到那边月台\",{\"1\":{\"297\":1}}],[\"须跳下去又爬上去\",{\"1\":{\"297\":1}}],[\"须穿过铁道\",{\"1\":{\"297\":1}}],[\"爸爸\",{\"1\":{\"297\":1}}],[\"唉\",{\"1\":{\"297\":2}}],[\"难道还不能料理自己么\",{\"1\":{\"297\":1}}],[\"托他们只是白托\",{\"1\":{\"297\":1}}],[\"夜里要警醒些\",{\"1\":{\"297\":1}}],[\"夜间模式按钮\",{\"1\":{\"267\":1}}],[\"非自己插嘴不可\",{\"1\":{\"297\":1}}],[\"得向脚夫行些小费才可过去\",{\"1\":{\"297\":1}}],[\"得到countstore\",{\"1\":{\"197\":1}}],[\"得到值在数组中的最后一个下标\",{\"1\":{\"89\":1}}],[\"得到值在数组中的下标\",{\"1\":{\"89\":1}}],[\"行李太多了\",{\"1\":{\"297\":1}}],[\"行内样式\",{\"1\":{\"53\":1,\"62\":1}}],[\"终于决定还是自己送我去\",{\"1\":{\"297\":1}}],[\"他写了一信给我\",{\"1\":{\"297\":1}}],[\"他终于忘却我的不好\",{\"1\":{\"297\":1}}],[\"他待我渐渐不同往日\",{\"1\":{\"297\":1}}],[\"他触目伤怀\",{\"1\":{\"297\":1}}],[\"他少年出外谋生\",{\"1\":{\"297\":1}}],[\"他走了几步\",{\"1\":{\"297\":1}}],[\"他和我走到车上\",{\"1\":{\"297\":1}}],[\"他先将橘子散放在地上\",{\"1\":{\"297\":1}}],[\"他已抱了朱红的橘子往回走了\",{\"1\":{\"297\":1}}],[\"他肥胖的身子向左微倾\",{\"1\":{\"297\":1}}],[\"他用两手攀着上面\",{\"1\":{\"297\":1}}],[\"他不肯\",{\"1\":{\"297\":1}}],[\"他往车外看了看说\",{\"1\":{\"297\":1}}],[\"他们只认得钱\",{\"1\":{\"297\":1}}],[\"他们去不好\",{\"1\":{\"297\":1}}],[\"他嘱我路上小心\",{\"1\":{\"297\":1}}],[\"他给我拣定了靠车门的一张椅子\",{\"1\":{\"297\":1}}],[\"他便又忙着和他们讲价钱\",{\"1\":{\"297\":1}}],[\"他忙着照看行李\",{\"1\":{\"297\":1}}],[\"他只说\",{\"1\":{\"297\":1}}],[\"他踌躇了一会\",{\"1\":{\"297\":1}}],[\"他再三嘱咐茶房\",{\"1\":{\"297\":1}}],[\"颇踌躇了一会\",{\"1\":{\"297\":1}}],[\"甚是仔细\",{\"1\":{\"297\":1}}],[\"甚至兄弟组件通信\",{\"1\":{\"230\":2}}],[\"甚至更多层的关系\",{\"1\":{\"73\":1}}],[\"叫旅馆里一个熟识的茶房陪我同去\",{\"1\":{\"297\":1}}],[\"叫正常模式\",{\"1\":{\"89\":1}}],[\"勾留了一日\",{\"1\":{\"297\":1}}],[\"勾选状态\",{\"1\":{\"51\":1}}],[\"丧事完毕\",{\"1\":{\"297\":1}}],[\"回过头看见我\",{\"1\":{\"297\":1}}],[\"回家变卖典质\",{\"1\":{\"297\":1}}],[\"回滚\",{\"1\":{\"17\":1}}],[\"好在天无绝人之路\",{\"1\":{\"297\":1}}],[\"事已如此\",{\"1\":{\"297\":1}}],[\"事件回调内部调用$emit方法去触发自定义事件\",{\"1\":{\"234\":1}}],[\"事件名称\",{\"1\":{\"233\":1}}],[\"事件名是任意名称\",{\"1\":{\"202\":1}}],[\"事件名是特定的\",{\"1\":{\"202\":1}}],[\"事件对象$event\",{\"1\":{\"202\":2}}],[\"事件和插槽等进行处理\",{\"1\":{\"136\":1}}],[\"又看见那肥胖的\",{\"1\":{\"297\":1}}],[\"又嘱托茶房好好照应我\",{\"1\":{\"297\":1}}],[\"又借钱办了丧事\",{\"1\":{\"297\":1}}],[\"又想起祖母\",{\"1\":{\"297\":1}}],[\"又可以继承原型链上的属性和方法\",{\"1\":{\"131\":1}}],[\"看见满院狼藉的东西\",{\"1\":{\"297\":1}}],[\"到那边来信\",{\"1\":{\"297\":1}}],[\"到这边时\",{\"1\":{\"297\":1}}],[\"到南京时\",{\"1\":{\"297\":1}}],[\"到徐州见着父亲\",{\"1\":{\"297\":1}}],[\"到更低的索引\",{\"1\":{\"131\":1}}],[\"朱自清\",{\"1\":{\"297\":1}}],[\"背影\",{\"0\":{\"297\":1}}],[\"感想等\",{\"1\":{\"295\":1}}],[\"诗歌\",{\"1\":{\"295\":1}}],[\"散文\",{\"1\":{\"295\":1}}],[\"进去吧\",{\"1\":{\"297\":1}}],[\"进了车站\",{\"1\":{\"297\":1}}],[\"进行引用\",{\"1\":{\"289\":1}}],[\"进而触发update\",{\"1\":{\"204\":1}}],[\"分类为\",{\"1\":{\"288\":1}}],[\"分别提供数据的key与提供数据value\",{\"1\":{\"239\":1}}],[\"分别为push和replace\",{\"1\":{\"190\":1}}],[\"分别是\",{\"1\":{\"177\":1}}],[\"日\",{\"1\":{\"288\":1}}],[\"日期对象等特殊类型的值\",{\"1\":{\"26\":1}}],[\"月\",{\"1\":{\"288\":1}}],[\"年\",{\"1\":{\"288\":1}}],[\"^\",{\"1\":{\"279\":1}}],[\"^i\",{\"1\":{\"279\":1}}],[\"^r\",{\"1\":{\"279\":2}}],[\"导入文件\",{\"0\":{\"278\":1}}],[\"导航栏\",{\"1\":{\"264\":1,\"267\":1}}],[\"导航区\",{\"1\":{\"180\":1}}],[\"脚注\",{\"0\":{\"277\":1}}],[\"演示\",{\"1\":{\"271\":1}}],[\"展示\",{\"0\":{\"270\":1}}],[\"展示区\",{\"1\":{\"180\":1}}],[\"页脚\",{\"1\":{\"264\":1,\"267\":1}}],[\"页面都会被转换为一个\",{\"1\":{\"290\":1}}],[\"页面内容\",{\"0\":{\"289\":1}}],[\"页面标题\",{\"0\":{\"287\":1},\"1\":{\"287\":1}}],[\"页面配置\",{\"0\":{\"286\":1},\"1\":{\"288\":1},\"2\":{\"292\":1}}],[\"页面引入配置\",{\"1\":{\"272\":1}}],[\"页面信息\",{\"0\":{\"288\":1},\"1\":{\"264\":1}}],[\"页面就更新\",{\"1\":{\"223\":1}}],[\"页面到数据\",{\"1\":{\"204\":2}}],[\"页面\",{\"1\":{\"86\":1}}],[\"评论\",{\"1\":{\"264\":1,\"267\":1}}],[\"链接\",{\"1\":{\"264\":1}}],[\"贡献者\",{\"1\":{\"264\":1,\"267\":1}}],[\"路径导航\",{\"1\":{\"264\":1,\"267\":1}}],[\"路由的props配置\",{\"0\":{\"189\":1}}],[\"路由传参\",{\"0\":{\"186\":1}}],[\"路由器工作模式\",{\"0\":{\"182\":1}}],[\"路由组件的两个重要的属性\",{\"1\":{\"191\":1}}],[\"路由组件\",{\"1\":{\"181\":1}}],[\"路由组件通常存放在pages\",{\"1\":{\"181\":1}}],[\"路由配置文件代码如下\",{\"1\":{\"180\":1}}],[\"侧边栏\",{\"1\":{\"264\":1,\"267\":1}}],[\"本已说定不送我\",{\"1\":{\"297\":1}}],[\"本页面就是一个示例\",{\"1\":{\"264\":1}}],[\"本质是一个函数\",{\"1\":{\"178\":1}}],[\"本质上替换了原person的每个属性值\",{\"1\":{\"171\":1}}],[\"本质上assign在原对象上进行的是赋值\",{\"1\":{\"171\":2}}],[\"菜鸟\",{\"1\":{\"263\":1}}],[\"教程\",{\"1\":{\"262\":1}}],[\"入门教程\",{\"1\":{\"262\":1}}],[\"持续更新中\",{\"1\":{\"261\":1,\"295\":1}}],[\"持续部署\",{\"1\":{\"13\":1}}],[\"持续部署cd有哪些工具\",{\"0\":{\"13\":1}}],[\"学习网站\",{\"0\":{\"261\":1}}],[\"尤其适合开发效率要求高的场景\",{\"1\":{\"259\":1}}],[\"尤其是在需要支持老旧浏览器或复杂构建需求时‌\",{\"1\":{\"259\":1}}],[\"尤其是在大型项目中\",{\"1\":{\"257\":1}}],[\"尤其是在复杂的组件中\",{\"1\":{\"250\":1}}],[\"虽然插件生态较小\",{\"1\":{\"258\":1}}],[\"虽然vue和angular都为开发者提供了灵活的双向绑定选项\",{\"1\":{\"80\":1}}],[\"虽然vue和angular的双向绑定原理不同\",{\"1\":{\"78\":1,\"80\":1}}],[\"覆盖复杂场景\",{\"1\":{\"258\":1}}],[\"覆盖对象的所有读写行为\",{\"1\":{\"141\":1}}],[\"热更新也几乎实时\",{\"1\":{\"257\":1}}],[\"热图\",{\"1\":{\"9\":1}}],[\"毫秒级\",{\"1\":{\"257\":1}}],[\"冷启动时间可能长达几分钟‌\",{\"1\":{\"257\":1}}],[\"计划\",{\"1\":{\"280\":2}}],[\"计使得代码更加模块化和清晰\",{\"1\":{\"249\":1}}],[\"计算\",{\"1\":{\"195\":2,\"198\":1}}],[\"计算属性实际上是一个ref响应式对象\",{\"1\":{\"167\":1}}],[\"计算属性computed有缓存\",{\"1\":{\"167\":1}}],[\"计算属性等\",{\"1\":{\"155\":1}}],[\"计算属性\",{\"1\":{\"98\":1,\"158\":1,\"167\":2}}],[\"计算规则\",{\"1\":{\"53\":1}}],[\"睡觉\",{\"1\":{\"241\":1}}],[\"吃饭\",{\"1\":{\"241\":1}}],[\"顾名思义\",{\"1\":{\"241\":1}}],[\"外部不能访问\",{\"1\":{\"238\":1}}],[\"次函数功能类似于vue2框架中$attrs属性与$listeners方法\",{\"1\":{\"237\":1}}],[\"除此之外它也可以实现父子组件数据同步\",{\"1\":{\"236\":1}}],[\"除了下划线\",{\"1\":{\"131\":1}}],[\"茅台\",{\"1\":{\"234\":1}}],[\"法拉利\",{\"1\":{\"234\":1}}],[\"另外一种自定义事件\",{\"1\":{\"232\":1}}],[\"另外一点需要注意的是\",{\"1\":{\"75\":1}}],[\"插槽\",{\"1\":{\"230\":2,\"241\":1}}],[\"插件\",{\"1\":{\"275\":1}}],[\"插件来实现\",{\"1\":{\"273\":1}}],[\"插件mitt\",{\"1\":{\"230\":1}}],[\"插件和严格模式等\",{\"1\":{\"101\":1}}],[\"插件生态系统丰富\",{\"1\":{\"13\":1}}],[\"发现报错了\",{\"1\":{\"301\":1}}],[\"发布订阅模式实现任意组件通信\",{\"1\":{\"230\":2}}],[\"发请求\",{\"1\":{\"178\":1,\"200\":1}}],[\"替换掉了\",{\"1\":{\"227\":1}}],[\"替换的元素\",{\"1\":{\"131\":1}}],[\"修饰符的支持\",{\"1\":{\"227\":1}}],[\"修改为\",{\"1\":{\"227\":2}}],[\"修改数据\",{\"0\":{\"196\":1}}],[\"修改\",{\"1\":{\"167\":1}}],[\"修改互不影响\",{\"1\":{\"22\":1}}],[\"修改任意一方会影响另一方属性\",{\"1\":{\"22\":1}}],[\"过一会说\",{\"1\":{\"297\":1}}],[\"过铁道时\",{\"1\":{\"297\":1}}],[\"过渡类名\",{\"1\":{\"227\":2}}],[\"过滤器\",{\"1\":{\"9\":1}}],[\"异步引入组件\",{\"1\":{\"225\":1}}],[\"异步方法\",{\"1\":{\"99\":1}}],[\"告诉vue数据msg很重要\",{\"1\":{\"223\":1}}],[\"封装在hooks里面\",{\"1\":{\"223\":1}}],[\"封装一个组件需要考虑什么\",{\"0\":{\"28\":1}}],[\"天津\",{\"1\":{\"221\":1,\"222\":1}}],[\"北京已来往过两三次\",{\"1\":{\"297\":1}}],[\"北京\",{\"1\":{\"221\":1,\"222\":1}}],[\"何时使用\",{\"1\":{\"221\":1}}],[\"何时需要\",{\"1\":{\"162\":1}}],[\"请使用绝对链接\",{\"1\":{\"289\":1}}],[\"请阅读\",{\"1\":{\"272\":1,\"274\":1}}],[\"请先阅读\",{\"1\":{\"271\":1}}],[\"请谨慎使用\",{\"1\":{\"221\":1}}],[\"请求不能发送\",{\"1\":{\"32\":1}}],[\"应用场景\",{\"1\":{\"218\":1}}],[\"浅层式\",{\"1\":{\"216\":1}}],[\"浅拷贝可以使用展开运算符\",{\"1\":{\"26\":1}}],[\"浅拷贝只需复制基本数据类型和引用地址\",{\"1\":{\"24\":1}}],[\"浅拷贝会导致原对象和拷贝对象中的指针指向同一地址\",{\"1\":{\"23\":1}}],[\"浅拷贝\",{\"1\":{\"22\":1,\"25\":1}}],[\"浅拷贝仅复制对象的引用地址\",{\"1\":{\"21\":1}}],[\"浅拷贝共享内存\",{\"1\":{\"21\":1}}],[\"斗罗大陆\",{\"1\":{\"212\":1}}],[\"红色警戒\",{\"1\":{\"212\":1}}],[\"红色文字\",{\"1\":{\"65\":1}}],[\"哈哈\",{\"1\":{\"212\":1}}],[\"具名插槽\",{\"0\":{\"211\":1},\"1\":{\"230\":2,\"241\":2}}],[\"具体使用\",{\"1\":{\"207\":1}}],[\"具体说明\",{\"1\":{\"205\":1}}],[\"具体数据\",{\"1\":{\"202\":1}}],[\"具体编码\",{\"1\":{\"192\":1,\"195\":2,\"207\":1,\"212\":1,\"221\":1}}],[\"具体配置\",{\"1\":{\"152\":1}}],[\"具体操作如下\",{\"1\":{\"152\":1}}],[\"今日热门游戏\",{\"1\":{\"210\":1,\"211\":1}}],[\"参考之前pinia部分的讲解\",{\"1\":{\"208\":1}}],[\"参数\",{\"1\":{\"9\":1,\"131\":1}}],[\"宏函数把数据交给外部\",{\"1\":{\"206\":1}}],[\"宏观角度看\",{\"1\":{\"165\":1}}],[\"孙组件中使用inject配置项接受数据\",{\"1\":{\"207\":1}}],[\"孙组件\",{\"1\":{\"205\":1}}],[\"了解详情\",{\"1\":{\"272\":1}}],[\"了\",{\"1\":{\"205\":1}}],[\"了的路由组件\",{\"1\":{\"181\":1}}],[\"被子组件自己\",{\"1\":{\"205\":1}}],[\"被监视的数据\",{\"1\":{\"170\":1}}],[\"祖母死了\",{\"1\":{\"297\":1}}],[\"祖→孙\",{\"1\":{\"205\":1}}],[\"祖组件\",{\"1\":{\"73\":1}}],[\"什么时候能够\",{\"1\":{\"204\":1}}],[\"什么是teleport\",{\"1\":{\"224\":1}}],[\"什么是hook\",{\"1\":{\"178\":1}}],[\"什么是同源策略\",{\"1\":{\"32\":1}}],[\"什么是跨域\",{\"1\":{\"32\":1}}],[\"触发\",{\"1\":{\"223\":1}}],[\"触发input事件时\",{\"1\":{\"204\":1}}],[\"触发事件\",{\"1\":{\"202\":1,\"203\":3}}],[\"＋\",{\"1\":{\"204\":1}}],[\"前序知识\",{\"1\":{\"204\":1}}],[\"前端数据存储解析\",{\"1\":{\"262\":1}}],[\"前端工程化\",{\"0\":{\"92\":1}}],[\"前端解决跨域的方法\",{\"0\":{\"32\":1}}],[\"前端开发\",{\"0\":{\"262\":1},\"2\":{\"2\":1,\"4\":1,\"6\":1,\"11\":1,\"20\":1,\"27\":1,\"29\":1,\"31\":1,\"33\":1,\"70\":1,\"76\":1,\"84\":1,\"88\":1,\"90\":1,\"91\":1,\"93\":1,\"95\":1,\"97\":1,\"102\":1,\"106\":1,\"130\":1,\"138\":1,\"140\":1,\"143\":1,\"228\":1,\"229\":1,\"242\":1,\"243\":1,\"248\":1,\"251\":1,\"253\":1,\"255\":1,\"260\":1}}],[\"总觉他说话不大漂亮\",{\"1\":{\"297\":1}}],[\"总线依赖着这个内置关系\",{\"1\":{\"203\":1}}],[\"总结\",{\"0\":{\"137\":1,\"216\":1},\"1\":{\"9\":1,\"152\":1}}],[\"清理事件\",{\"1\":{\"203\":1}}],[\"清理了\",{\"1\":{\"174\":1}}],[\"绑定一个自定义事件\",{\"1\":{\"234\":1}}],[\"绑定事件\",{\"1\":{\"203\":3}}],[\"绑定完this\",{\"1\":{\"89\":1}}],[\"命名方式尽量不要驼峰式\",{\"1\":{\"202\":1}}],[\"命名路由\",{\"0\":{\"184\":1}}],[\"↔\",{\"1\":{\"201\":1}}],[\"父亲和我都是东奔西走\",{\"1\":{\"297\":1}}],[\"父亲是一个胖子\",{\"1\":{\"297\":1}}],[\"父亲因为事忙\",{\"1\":{\"297\":1}}],[\"父亲要到南京谋事\",{\"1\":{\"297\":1}}],[\"父亲还了亏空\",{\"1\":{\"297\":1}}],[\"父亲说\",{\"1\":{\"297\":1}}],[\"父亲的差使也交卸了\",{\"1\":{\"297\":1}}],[\"父→子\",{\"1\":{\"206\":1}}],[\"父↔子\",{\"1\":{\"204\":1}}],[\"父传子\",{\"1\":{\"201\":1}}],[\"父\",{\"1\":{\"201\":1,\"202\":1}}],[\"父组件决定子组件的结构与外观\",{\"1\":{\"241\":1}}],[\"父组件内部数据\",{\"1\":{\"241\":1}}],[\"父组件内部向指定的具名插槽传递结构\",{\"1\":{\"241\":1}}],[\"父组件内部代码如下\",{\"1\":{\"241\":1}}],[\"父组件内部代码\",{\"1\":{\"238\":1}}],[\"父组件给子组件传递数据\",{\"1\":{\"231\":1}}],[\"父组件获取子组件实例\",{\"1\":{\"230\":2}}],[\"父组件中\",{\"1\":{\"207\":1,\"210\":1,\"211\":1,\"212\":1}}],[\"父组件把需要子组件操作的数据暴露出来\",{\"1\":{\"206\":1}}],[\"父组件才能被允许使用\",{\"1\":{\"206\":1}}],[\"父组件app\",{\"1\":{\"175\":1}}],[\"父组件\",{\"1\":{\"73\":1,\"201\":1,\"205\":1,\"212\":1}}],[\"合并到$attrs中了\",{\"1\":{\"200\":1}}],[\"合规管理等\",{\"1\":{\"13\":1}}],[\"放到数组中\",{\"1\":{\"200\":1}}],[\"qq\",{\"1\":{\"262\":1}}],[\"qinghua\",{\"1\":{\"200\":1,\"225\":1}}],[\"query\",{\"1\":{\"187\":2,\"189\":1,\"191\":1}}],[\"query参数\",{\"0\":{\"187\":1}}],[\"quality\",{\"1\":{\"152\":1}}],[\"及其变化\",{\"1\":{\"199\":1}}],[\"追加getters配置\",{\"1\":{\"198\":1}}],[\"追求新技术\",{\"1\":{\"0\":1}}],[\"随后解构\",{\"1\":{\"197\":1}}],[\"随后选择3\",{\"1\":{\"151\":1}}],[\"借助storetorefs将store中的数据转为ref对象\",{\"1\":{\"197\":1}}],[\"借助action修改\",{\"1\":{\"196\":1}}],[\"减\",{\"1\":{\"196\":1}}],[\"减少了对this的依赖‌‌\",{\"1\":{\"249\":1}}],[\"减少了初始化开销\",{\"1\":{\"141\":1}}],[\"减少dom层级还可以减少内存占用\",{\"1\":{\"135\":1}}],[\"减少dom层级可以降低浏览器的渲染负担\",{\"1\":{\"135\":1}}],[\"减少标签层级\",{\"1\":{\"135\":1}}],[\"操作countstore中的sum\",{\"1\":{\"196\":1}}],[\"操作src\",{\"1\":{\"194\":1}}],[\"加\",{\"1\":{\"196\":1}}],[\"加载index\",{\"1\":{\"152\":1}}],[\"批量修改\",{\"1\":{\"196\":1}}],[\"批量转换已有类型\",{\"1\":{\"129\":1}}],[\"蔓越莓\",{\"1\":{\"195\":1}}],[\"草莓\",{\"1\":{\"195\":1}}],[\"怪好看的\",{\"1\":{\"195\":1}}],[\"你就在此地\",{\"1\":{\"297\":1}}],[\"你走吧\",{\"1\":{\"297\":1}}],[\"你也可以创建并引入你自己的组件\",{\"1\":{\"290\":1}}],[\"你需要创建并编写\",{\"1\":{\"270\":1}}],[\"你可以将图片和\",{\"1\":{\"289\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"289\":1}}],[\"你可以在\",{\"1\":{\"287\":1,\"288\":1}}],[\"你可以在主题选项和页面的\",{\"1\":{\"267\":1}}],[\"你可以使用它轻松生成文档或博客站点\",{\"1\":{\"270\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"264\":1}}],[\"你好\",{\"1\":{\"223\":2}}],[\"你好啊\",{\"1\":{\"159\":1}}],[\"你想我了没\",{\"1\":{\"195\":1}}],[\"你今天有点怪\",{\"1\":{\"195\":1}}],[\"动作\",{\"1\":{\"195\":2,\"198\":1}}],[\"动态样式控制\",{\"0\":{\"56\":1}}],[\"动态伪类\",{\"0\":{\"49\":1}}],[\"业务逻辑\",{\"1\":{\"195\":1}}],[\"环境\",{\"0\":{\"194\":1}}],[\"环境适配\",{\"1\":{\"18\":1}}],[\"搭建\",{\"0\":{\"194\":1}}],[\"准备一个效果\",{\"0\":{\"193\":1}}],[\"控制路由跳转时操作浏览器历史记录的模式\",{\"1\":{\"190\":1}}],[\"跳转并携带params参数\",{\"1\":{\"188\":2}}],[\"跳转并携带query参数\",{\"1\":{\"187\":2}}],[\"跳转\",{\"1\":{\"187\":1}}],[\"跳转路由\",{\"1\":{\"184\":1,\"185\":1}}],[\"嵌套路由\",{\"0\":{\"185\":1}}],[\"嵌套属性按需处理\",{\"1\":{\"141\":1}}],[\"各版本\",{\"1\":{\"182\":1}}],[\"缺点\",{\"1\":{\"182\":2}}],[\"亲手写出来的标签\",{\"1\":{\"181\":1}}],[\"靠路由规则渲染出来的\",{\"1\":{\"181\":1}}],[\"消费\",{\"1\":{\"205\":1}}],[\"消失\",{\"1\":{\"181\":1}}],[\"消除语法的一些不合理\",{\"1\":{\"89\":1}}],[\"处理错误\",{\"1\":{\"178\":1}}],[\"维护数据\",{\"1\":{\"178\":1}}],[\"复用代码\",{\"1\":{\"178\":1}}],[\"复杂类型\",{\"1\":{\"125\":1}}],[\"复杂发布策略企业\",{\"1\":{\"14\":1}}],[\"复杂的定制化部署流程\",{\"1\":{\"13\":1}}],[\"卸载完毕\",{\"1\":{\"177\":1}}],[\"卸载之前\",{\"1\":{\"177\":2}}],[\"卸载阶段\",{\"1\":{\"177\":1}}],[\"挂载钩子\",{\"1\":{\"178\":1}}],[\"挂载之前\",{\"1\":{\"177\":1}}],[\"挂载完毕\",{\"1\":{\"177\":2}}],[\"挂载阶段\",{\"1\":{\"177\":2}}],[\"挂载\",{\"1\":{\"177\":1}}],[\"规律\",{\"1\":{\"177\":1}}],[\"概念\",{\"1\":{\"177\":1,\"198\":1}}],[\"概述\",{\"0\":{\"158\":1},\"1\":{\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1}}],[\"限制必要性\",{\"1\":{\"176\":1}}],[\"限制类型\",{\"1\":{\"176\":2}}],[\"限制每个person对象的格式\",{\"1\":{\"176\":1}}],[\"王五\",{\"1\":{\"176\":1}}],[\"王者荣耀\",{\"1\":{\"163\":1,\"164\":1,\"212\":1}}],[\"取消监视\",{\"1\":{\"174\":1}}],[\"水温达到100\",{\"1\":{\"174\":1}}],[\"水温达到50℃\",{\"1\":{\"174\":1}}],[\"联系服务器\",{\"1\":{\"174\":2}}],[\"联合类型\",{\"0\":{\"119\":1}}],[\"立刻联系服务器\",{\"1\":{\"174\":2}}],[\"立即运行一个函数\",{\"1\":{\"174\":1}}],[\"室温达到50℃\",{\"1\":{\"174\":2}}],[\"那时真是太聪明了\",{\"1\":{\"297\":1}}],[\"那年冬天\",{\"1\":{\"297\":1}}],[\"那就监视哪些属性\",{\"1\":{\"174\":1}}],[\"那么子组件内部的方法与响应式数据父组件可以使用的\",{\"1\":{\"238\":1}}],[\"那么在vue3想实现全局事件的总线功能就有点不现实啦\",{\"1\":{\"235\":1}}],[\"那么就可以在组件标签上多次使用v\",{\"1\":{\"204\":1}}],[\"那么就有对应的生命周期\",{\"1\":{\"82\":1}}],[\"那么最好写函数式\",{\"1\":{\"172\":1}}],[\"那么它的原理是什么呢\",{\"1\":{\"73\":1}}],[\"爱玛\",{\"1\":{\"172\":1,\"173\":1}}],[\"雅迪\",{\"1\":{\"172\":1,\"173\":1}}],[\"奥特曼\",{\"1\":{\"201\":1}}],[\"奥迪\",{\"1\":{\"172\":1,\"173\":1}}],[\"奥拓\",{\"1\":{\"165\":1}}],[\"宝马\",{\"1\":{\"172\":1,\"173\":1}}],[\"旧值是旧值\",{\"1\":{\"172\":2}}],[\"旧元素\",{\"1\":{\"131\":1}}],[\"整体改变时\",{\"1\":{\"172\":1}}],[\"整个项目开发效率和开发成本大大降低\",{\"1\":{\"131\":1}}],[\"整个文档等都是一个节点\",{\"1\":{\"86\":1}}],[\"建议写成函数\",{\"1\":{\"172\":1}}],[\"建议新项目优先评估此类工具\",{\"1\":{\"13\":1}}],[\"要爬上那边月台\",{\"1\":{\"297\":1}}],[\"要对msg持续关注\",{\"1\":{\"223\":1}}],[\"要明确指出监视的数据\",{\"1\":{\"174\":1}}],[\"要写成函数式\",{\"1\":{\"172\":1}}],[\"要手动开启深度监视\",{\"1\":{\"170\":1}}],[\"要用ref\",{\"1\":{\"163\":1}}],[\"地址值\",{\"1\":{\"170\":1}}],[\"地图接口\",{\"1\":{\"9\":1}}],[\"地图不可拖拽\",{\"1\":{\"9\":1}}],[\"地图可拖拽\",{\"1\":{\"9\":1}}],[\"地图可否可拖拽\",{\"1\":{\"9\":1}}],[\"地图点击一次后\",{\"1\":{\"9\":2}}],[\"地图中图层配置样式\",{\"1\":{\"9\":1}}],[\"地图中\",{\"1\":{\"9\":1}}],[\"地图加载完成后\",{\"1\":{\"9\":1}}],[\"地图的背景色或者图案\",{\"1\":{\"9\":1}}],[\"读取\",{\"1\":{\"167\":1}}],[\"既然可以在父组件内部通过ref获取子组件实例vc\",{\"1\":{\"238\":1}}],[\"既能监视到对象内部属性a\",{\"1\":{\"172\":1}}],[\"既读取又修改\",{\"1\":{\"167\":1}}],[\"既可以继承构造函数里面的熟悉和方法\",{\"1\":{\"131\":1}}],[\"名\",{\"1\":{\"167\":1}}],[\"姓\",{\"1\":{\"167\":1}}],[\"女\",{\"1\":{\"166\":1}}],[\"层级不深\",{\"1\":{\"165\":1}}],[\"区别\",{\"1\":{\"165\":1}}],[\"流星蝴蝶剑\",{\"1\":{\"163\":1,\"164\":1}}],[\"英雄联盟\",{\"1\":{\"163\":1,\"164\":1,\"212\":1}}],[\"奔驰\",{\"1\":{\"163\":1,\"164\":1,\"172\":1,\"173\":1,\"201\":1,\"207\":1}}],[\"万<\",{\"1\":{\"163\":1,\"164\":1}}],[\"价值\",{\"1\":{\"163\":1,\"164\":1}}],[\"汽车\",{\"1\":{\"163\":1,\"164\":1}}],[\"响应式对象\",{\"1\":{\"163\":1,\"221\":1}}],[\"响应式对象=\",{\"1\":{\"163\":1}}],[\"源对象\",{\"1\":{\"163\":1}}],[\"源码的升级\",{\"0\":{\"148\":1}}],[\"否则刷新会有404错误\",{\"1\":{\"182\":1}}],[\"否则报错\",{\"1\":{\"163\":1}}],[\"否则返回name\",{\"1\":{\"131\":1}}],[\"去标记mockjs\",{\"1\":{\"222\":1}}],[\"去指定组件名字\",{\"1\":{\"161\":1}}],[\"去查阅了一番\",{\"1\":{\"72\":1}}],[\"上下角标\",{\"0\":{\"282\":1}}],[\"上一篇\",{\"1\":{\"264\":1}}],[\"上海\",{\"1\":{\"221\":1,\"222\":1}}],[\"上述代码\",{\"1\":{\"161\":1}}],[\"上面代码的本质如下\",{\"1\":{\"204\":1}}],[\"上面三种情况都不满足\",{\"1\":{\"9\":1}}],[\"上面三种情况都得满足\",{\"1\":{\"9\":1}}],[\"上面三种情况满足其中一个就可以\",{\"1\":{\"9\":1}}],[\"上面表示颜色的写法\",{\"1\":{\"9\":1}}],[\"李四\",{\"1\":{\"161\":1,\"162\":1,\"170\":1,\"171\":3,\"176\":1}}],[\"下午上车北去\",{\"1\":{\"297\":1}}],[\"下一篇\",{\"1\":{\"264\":1}}],[\"下方代码相当于给组件child传递两个props分别是pageno与pagesize\",{\"1\":{\"236\":1}}],[\"下方代码\",{\"1\":{\"236\":1}}],[\"下面是一个子组件内部\",{\"1\":{\"241\":1}}],[\"下面这行的写法是\",{\"1\":{\"200\":1}}],[\"下面的写法是setup语法糖\",{\"1\":{\"161\":1}}],[\"下次点击没有效果\",{\"1\":{\"9\":1}}],[\"下次还可以点击\",{\"1\":{\"9\":1}}],[\"此文字有脚注\",{\"1\":{\"277\":1}}],[\"此处是\",{\"1\":{\"261\":1,\"295\":1,\"298\":1}}],[\"此插槽带有名字在组件内部留多个指定名字的插槽\",{\"1\":{\"241\":1}}],[\"此方法执需要传递两个参数\",{\"1\":{\"239\":1}}],[\"此方法是vue3提供的方法\",{\"1\":{\"234\":1}}],[\"此方执行会返回一个$emit方法用于触发自定义事件\",{\"1\":{\"234\":1}}],[\"此时开发者工具中已经有了pinia选项\",{\"1\":{\"194\":1}}],[\"此时oldvalue是旧值\",{\"1\":{\"172\":1}}],[\"此时这么修改age页面是不变化的\",{\"1\":{\"158\":1,\"161\":1}}],[\"此时这么修改name页面是不变化的\",{\"1\":{\"158\":1,\"161\":1}}],[\"此时的name\",{\"1\":{\"158\":1,\"161\":1}}],[\"此过滤器要求每个要素的属性等于\",{\"1\":{\"9\":1}}],[\"领先\",{\"1\":{\"158\":1}}],[\"均配置在setup中\",{\"1\":{\"158\":1}}],[\"监视上述的多个数据<\",{\"1\":{\"173\":1}}],[\"监视上述的多个数据\",{\"1\":{\"173\":2}}],[\"监视响应式对象中的某个属性\",{\"1\":{\"172\":2}}],[\"监视不到对象内部属性a\",{\"1\":{\"172\":1}}],[\"监视ref或reactive定义的\",{\"1\":{\"172\":1}}],[\"监视ref定义的\",{\"1\":{\"169\":1,\"170\":1}}],[\"监视reactive定义的\",{\"1\":{\"171\":1}}],[\"监视的要是对象里的属性\",{\"1\":{\"172\":1}}],[\"监视的回调\",{\"1\":{\"170\":1}}],[\"监视的是对象的地址值\",{\"1\":{\"170\":1}}],[\"监视的是对象的\",{\"1\":{\"170\":1}}],[\"监视的是其value值的改变\",{\"1\":{\"169\":1}}],[\"监视数据的变化\",{\"1\":{\"168\":1}}],[\"监视\",{\"1\":{\"158\":1,\"169\":3,\"170\":3,\"171\":3,\"172\":3,\"173\":1}}],[\"监控任务\",{\"1\":{\"131\":1}}],[\"拉开序幕的\",{\"0\":{\"157\":1}}],[\"拉伸\",{\"1\":{\"9\":1}}],[\"若\",{\"1\":{\"201\":2}}],[\"若使用to的对象写法\",{\"1\":{\"188\":1}}],[\"若是对象监视的是地址值\",{\"1\":{\"172\":1}}],[\"若该属性值是依然是\",{\"1\":{\"172\":1}}],[\"若该属性值不是\",{\"1\":{\"172\":1}}],[\"若修改整个ref定义的对象\",{\"1\":{\"170\":1}}],[\"若修改的是ref定义的对象中的属性\",{\"1\":{\"170\":1}}],[\"若想监视对象内部属性的变化\",{\"1\":{\"170\":1}}],[\"若想监视对象内部的数据\",{\"1\":{\"170\":1}}],[\"若想新增或者修改一个需求\",{\"1\":{\"155\":1}}],[\"若需要一个响应式对象\",{\"1\":{\"165\":2}}],[\"若需要一个基本类型的响应式数据\",{\"1\":{\"165\":1}}],[\"若ref接收的是对象类型\",{\"1\":{\"164\":1}}],[\"若返回一个函数\",{\"1\":{\"159\":1}}],[\"若返回一个对象\",{\"1\":{\"159\":1}}],[\"若找不到就到一直循环到父类型或祖类型\",{\"1\":{\"73\":1}}],[\"风格的\",{\"1\":{\"154\":2}}],[\"解绑事件\",{\"1\":{\"203\":1}}],[\"解析\",{\"1\":{\"152\":1}}],[\"解决方案\",{\"0\":{\"303\":1}}],[\"解决方法等\",{\"1\":{\"298\":1}}],[\"解决了这些问题\",{\"1\":{\"133\":1}}],[\"解决优先级冲突技巧\",{\"0\":{\"69\":1}}],[\"√\",{\"1\":{\"152\":9}}],[\"配置复杂度与生态支持\",{\"0\":{\"258\":1}}],[\"配置复杂度\",{\"1\":{\"256\":1}}],[\"配置路由规则\",{\"1\":{\"185\":1}}],[\"配置对象\",{\"1\":{\"170\":1,\"226\":1}}],[\"配置\",{\"0\":{\"272\":1},\"1\":{\"154\":1}}],[\"配置项目名称\",{\"1\":{\"152\":1}}],[\"配置样式\",{\"1\":{\"8\":1}}],[\"配置样式layout和pain\",{\"1\":{\"8\":1}}],[\"真正的按需编译\",{\"1\":{\"152\":1}}],[\"官网描述\",{\"1\":{\"221\":1}}],[\"官网\",{\"1\":{\"174\":1}}],[\"官网地址\",{\"1\":{\"152\":1,\"235\":1}}],[\"官方推荐基于\",{\"1\":{\"151\":1}}],[\"官方发版地址\",{\"1\":{\"145\":1}}],[\"官方测试提升20\",{\"1\":{\"142\":1}}],[\"推荐使用reactive\",{\"1\":{\"165\":1}}],[\"推荐\",{\"0\":{\"152\":1},\"1\":{\"172\":1}}],[\"启动和热更新速度会变慢\",{\"1\":{\"257\":1}}],[\"启动时需遍历整个模块依赖图\",{\"1\":{\"257\":1}}],[\"启动\",{\"1\":{\"151\":1}}],[\"执行创建命令\",{\"1\":{\"151\":1}}],[\"执行声明式部署到目标环境\",{\"1\":{\"19\":1}}],[\"安装mitt\",{\"1\":{\"203\":1}}],[\"安装官方推荐的vscode插件\",{\"1\":{\"152\":1}}],[\"安装或者升级你的\",{\"1\":{\"151\":1}}],[\"安全扫描\",{\"1\":{\"13\":1}}],[\"确保\",{\"1\":{\"151\":1}}],[\"确保原对象的任何修改都不会影响新对象的情况\",{\"1\":{\"25\":1}}],[\"目前是4版本\",{\"1\":{\"180\":1}}],[\"目前vue\",{\"1\":{\"151\":1}}],[\"目的是\",{\"1\":{\"204\":1}}],[\"目的\",{\"1\":{\"89\":1}}],[\"备注2\",{\"1\":{\"188\":1}}],[\"备注1\",{\"1\":{\"188\":1}}],[\"备注\",{\"1\":{\"151\":1,\"166\":1}}],[\"移除了$children\",{\"1\":{\"227\":1}}],[\"移除了$on\",{\"1\":{\"227\":1}}],[\"移除了过滤器\",{\"1\":{\"227\":1}}],[\"移除全部事件\",{\"1\":{\"203\":1}}],[\"移除事件\",{\"1\":{\"203\":1}}],[\"移除keycode支持作为\",{\"1\":{\"150\":1}}],[\"移出事件总线\",{\"1\":{\"200\":1}}],[\"移动端ci\",{\"1\":{\"16\":1}}],[\"移动应用\",{\"1\":{\"16\":1}}],[\"拥抱typescript\",{\"0\":{\"149\":1}}],[\"拥有较强的社区支持和丰富的文档\",{\"1\":{\"101\":1}}],[\"初始值\",{\"1\":{\"162\":1}}],[\"初始化时递归劫持所有属性\",{\"1\":{\"142\":1}}],[\"初始化效率‌\",{\"1\":{\"141\":1}}],[\"初始化父类的构造函数\",{\"1\":{\"131\":1}}],[\"初始化组件\",{\"1\":{\"82\":1}}],[\"初次渲染快`55\",{\"1\":{\"147\":1}}],[\"打豆豆\",{\"1\":{\"241\":1}}],[\"打印按钮\",{\"1\":{\"267\":1}}],[\"打印params参数\",{\"1\":{\"188\":1}}],[\"打印query参数\",{\"1\":{\"187\":1}}],[\"打印内容\",{\"1\":{\"175\":1}}],[\"打包大小减少`41\",{\"1\":{\"147\":1}}],[\"打小\",{\"1\":{\"72\":1}}],[\"截止2023年10月\",{\"1\":{\"145\":1}}],[\"经历了\",{\"1\":{\"145\":1}}],[\"按需触发\",{\"1\":{\"142\":1}}],[\"按分钟计费\",{\"1\":{\"15\":1}}],[\"惰性代理\",{\"1\":{\"142\":1}}],[\"惰性监听\",{\"1\":{\"141\":1}}],[\"需重写数组方法\",{\"1\":{\"142\":1}}],[\"需手动调用vue\",{\"1\":{\"142\":1}}],[\"需要手动处理loader和plugin\",{\"1\":{\"258\":1}}],[\"需要手动开启深度监视\",{\"1\":{\"170\":1,\"172\":1}}],[\"需要注意v\",{\"1\":{\"241\":1}}],[\"需要注意如果defineprops接受了某一个属性\",{\"1\":{\"237\":1}}],[\"需要注意的是\",{\"1\":{\"234\":1}}],[\"需要经过处理后再使用时\",{\"1\":{\"198\":1}}],[\"需要提前在规则中占位\",{\"1\":{\"188\":1}}],[\"需要写完整的路径\",{\"1\":{\"184\":1}}],[\"需要写成函数形式\",{\"1\":{\"172\":1}}],[\"需要服务端配合处理路径问题\",{\"1\":{\"182\":1}}],[\"需要的时候再去挂载\",{\"1\":{\"181\":1}}],[\"需要明确的指出要监视\",{\"1\":{\"174\":1}}],[\"需要关注对象内部\",{\"1\":{\"172\":1}}],[\"需要实现\",{\"1\":{\"131\":1}}],[\"需要以下操作\",{\"1\":{\"131\":1}}],[\"需要转换成可以解析的\",{\"1\":{\"131\":1}}],[\"需要数据源必须是geojson\",{\"1\":{\"9\":1}}],[\"需要\",{\"1\":{\"9\":1,\"131\":1}}],[\"需要匹配的属性字段\",{\"1\":{\"9\":1}}],[\"需要加载的数据源\",{\"1\":{\"8\":1}}],[\"且在组件内部不需要引入defineprops方法可以直接使用\",{\"1\":{\"231\":1}}],[\"且在seo优化方面相对较差\",{\"1\":{\"182\":1}}],[\"且该属性是\",{\"1\":{\"172\":2}}],[\"且默认是开启深度监视的\",{\"1\":{\"171\":1}}],[\"且默认开启了深度监视\",{\"1\":{\"171\":1}}],[\"且深层监视无法关闭\",{\"1\":{\"171\":1}}],[\"且依然保持响应式的能力\",{\"1\":{\"166\":2}}],[\"且层级较深\",{\"1\":{\"165\":1}}],[\"且vue3中的模板中可以没有根标签\",{\"1\":{\"153\":1}}],[\"且仅在访问嵌套对象时才触发代理\",{\"1\":{\"141\":1}}],[\"且必须大于或等于3\",{\"1\":{\"9\":1}}],[\"避免了this带来的困惑\",{\"1\":{\"250\":1}}],[\"避免了对每一个内部属性做响应式所带来的性能成本\",{\"1\":{\"216\":1}}],[\"避免了不必要的性能损耗\",{\"1\":{\"141\":1}}],[\"避免了vue2中因动态属性导致的响应式失效问题\",{\"1\":{\"141\":1}}],[\"避免过度使用通用选择器\",{\"1\":{\"55\":1}}],[\"仅编译被请求的文件\",{\"1\":{\"257\":1}}],[\"仅接收\",{\"1\":{\"176\":1}}],[\"仅代理最外层对象\",{\"1\":{\"141\":1}}],[\"仅1kb体积\",{\"1\":{\"99\":1}}],[\"尽管vue3不再要求唯一根标签\",{\"1\":{\"136\":1}}],[\"错误检查\",{\"1\":{\"136\":1}}],[\"错误写法\",{\"1\":{\"131\":1}}],[\"模板调用多次\",{\"1\":{\"167\":1}}],[\"模板调用几次\",{\"1\":{\"167\":1}}],[\"模板中留两个插槽\",{\"1\":{\"241\":1}}],[\"模板中不需要\",{\"1\":{\"162\":1}}],[\"模板中可以直接使用\",{\"1\":{\"158\":1}}],[\"模板编译\",{\"1\":{\"136\":1}}],[\"模型就是dom树\",{\"1\":{\"86\":1}}],[\"模型\",{\"1\":{\"86\":1}}],[\"编码\",{\"1\":{\"222\":1}}],[\"编程式导航\",{\"0\":{\"191\":1}}],[\"编写news的子路由\",{\"1\":{\"185\":1}}],[\"编译器会抛出相应的错误信息\",{\"1\":{\"136\":1}}],[\"编译器还会对模板中的指令\",{\"1\":{\"136\":1}}],[\"编译器的优化\",{\"1\":{\"136\":1}}],[\"编辑此页链接\",{\"1\":{\"264\":1}}],[\"编辑完文件\",{\"1\":{\"131\":1}}],[\"编辑器中\",{\"1\":{\"131\":1}}],[\"渲染优化\",{\"1\":{\"136\":1}}],[\"渲染组件\",{\"1\":{\"82\":1}}],[\"改进\",{\"1\":{\"133\":1}}],[\"改变整体是产生一个新对象\",{\"1\":{\"172\":2}}],[\"改变name和gender的值\",{\"1\":{\"166\":1}}],[\"改变this\",{\"1\":{\"89\":1}}],[\"改变定义顺序\",{\"1\":{\"69\":1}}],[\"增强开发体验\",{\"1\":{\"141\":1}}],[\"增强响应式系统的灵活性\",{\"1\":{\"141\":1}}],[\"增强组件灵活性\",{\"1\":{\"135\":1}}],[\"增强组件的灵活性\",{\"0\":{\"134\":1},\"1\":{\"133\":1}}],[\"增添拖拽功能\",{\"1\":{\"9\":1}}],[\"算法能独立处理每个根节点的更新\",{\"1\":{\"133\":1}}],[\"虚拟dom的改进\",{\"1\":{\"136\":1}}],[\"虚拟节点\",{\"1\":{\"133\":1}}],[\"虚拟元素\",{\"0\":{\"52\":1}}],[\"抽象节点‌\",{\"1\":{\"133\":1}}],[\"抽象类除外\",{\"1\":{\"131\":1}}],[\"重庆\",{\"1\":{\"221\":1,\"222\":1}}],[\"重新定向到已有路由\",{\"1\":{\"192\":1}}],[\"重新赋值\",{\"1\":{\"122\":1}}],[\"重定向\",{\"0\":{\"192\":1}}],[\"重点关注\",{\"1\":{\"159\":1}}],[\"重写虚拟`dom`的实现和`tree\",{\"1\":{\"148\":1}}],[\"重构了虚拟\",{\"1\":{\"133\":1}}],[\"标签为\",{\"1\":{\"288\":1}}],[\"标签的\",{\"0\":{\"175\":1}}],[\"标记一个对象\",{\"1\":{\"222\":1}}],[\"标题会被视为页面标题\",{\"1\":{\"287\":1}}],[\"标题和页面信息\",{\"1\":{\"267\":1}}],[\"标题\",{\"1\":{\"132\":1,\"237\":1}}],[\"标识为fragement\",{\"1\":{\"132\":1}}],[\"标准\",{\"1\":{\"131\":1}}],[\"则联系服务器<\",{\"1\":{\"174\":1}}],[\"则setup优先\",{\"1\":{\"160\":1}}],[\"则可以自定义渲染内容\",{\"1\":{\"159\":1}}],[\"则对象中的\",{\"1\":{\"159\":1}}],[\"则直接遍历children创建或更新\",{\"1\":{\"132\":1}}],[\"则采用了分离模式\",{\"1\":{\"101\":1}}],[\"把$listeners所有的东西\",{\"1\":{\"200\":1}}],[\"把\",{\"1\":{\"200\":1}}],[\"把请求回来的字符串\",{\"1\":{\"200\":1}}],[\"把返回的对象中每一组key\",{\"1\":{\"189\":1}}],[\"把收到了每一组params参数\",{\"1\":{\"189\":1}}],[\"把对象中的每一组key\",{\"1\":{\"189\":1}}],[\"把setup函数中使用的composition\",{\"1\":{\"178\":1}}],[\"把多根节点视为自己的children\",{\"1\":{\"132\":1}}],[\"把数组元素\",{\"1\":{\"131\":1}}],[\"把数组转换成字符串\",{\"1\":{\"131\":1}}],[\"时代模板结构冗余的问题\",{\"1\":{\"132\":1}}],[\"时间复杂度通常为o\",{\"1\":{\"24\":1}}],[\"时间复杂度为o\",{\"1\":{\"24\":1}}],[\"机制\",{\"1\":{\"132\":1}}],[\"碎片化\",{\"1\":{\"132\":1}}],[\"位移\",{\"1\":{\"131\":1}}],[\"删除属性\",{\"1\":{\"142\":1}}],[\"删除\",{\"1\":{\"131\":1}}],[\"删除apple\",{\"1\":{\"131\":1}}],[\"删除元素\",{\"1\":{\"131\":1}}],[\"拼接\",{\"1\":{\"131\":1}}],[\"向当前组件的子组件通信\",{\"1\":{\"205\":1}}],[\"向外部暴露数据\",{\"1\":{\"178\":2}}],[\"向\",{\"1\":{\"131\":1}}],[\"向数组添加新元素\",{\"1\":{\"131\":1}}],[\"向数组中添加\",{\"1\":{\"131\":1}}],[\"向地图添加的常用数据有六种\",{\"1\":{\"8\":1}}],[\"向地图添加的常用数据\",{\"1\":{\"8\":1}}],[\"负数时表示从最后一位开始算起\",{\"1\":{\"131\":1}}],[\"省略表示到最后一位\",{\"1\":{\"131\":1}}],[\"省略后会自动返回语句执行的结果或者表达式的结果\",{\"1\":{\"89\":1}}],[\"从value中获取最新的temp值\",{\"1\":{\"174\":1}}],[\"从数组中删除最后一个元素\",{\"1\":{\"131\":1}}],[\"从start数组元素开始选择元素\",{\"1\":{\"131\":1}}],[\"从已经存在的数组中返回选定的元素\",{\"1\":{\"131\":1}}],[\"从而避免了this指向不明确的问题‌\",{\"1\":{\"250\":1}}],[\"从而让开发者有机会在特定阶段运行自己的代码\",{\"1\":{\"177\":1}}],[\"从而显著优化了响应式数据的初始化速度和运行时性能\",{\"1\":{\"141\":1}}],[\"从而提高页面的渲染性能\",{\"1\":{\"135\":1}}],[\"从而实现数据劫持\",{\"1\":{\"79\":1}}],[\"从而实现视图的自动更新\",{\"1\":{\"78\":1}}],[\"从而监听数据的变化\",{\"1\":{\"78\":1}}],[\"给input元素绑定原生input事件\",{\"1\":{\"204\":1}}],[\"给子组件绑定自定义事件\",{\"1\":{\"202\":1}}],[\"给路由规则命名\",{\"1\":{\"184\":1}}],[\"给这个class\",{\"1\":{\"131\":1}}],[\"给地图添加点\",{\"1\":{\"8\":1}}],[\"给地图添加监听事件\",{\"1\":{\"8\":1}}],[\"装饰器就是一个方法\",{\"1\":{\"131\":1}}],[\"让父子组件多个数据同步\",{\"1\":{\"236\":1}}],[\"让应用有更好的用户体验\",{\"1\":{\"225\":1}}],[\"让路由组件更方便的收到参数\",{\"1\":{\"189\":1}}],[\"让setup中的逻辑更清楚易懂\",{\"1\":{\"178\":1}}],[\"让相关功能的代码更加有序的组织在一起\",{\"1\":{\"156\":1}}],[\"让工程师实现就可以了\",{\"1\":{\"131\":1}}],[\"让变量usename\",{\"1\":{\"89\":1}}],[\"架构师定义好接口\",{\"1\":{\"131\":1}}],[\"保护全局状态或配置不被修改\",{\"1\":{\"218\":1}}],[\"保护\",{\"1\":{\"131\":1}}],[\"保护类型\",{\"1\":{\"131\":1}}],[\"公有属性\",{\"1\":{\"131\":1}}],[\"公共类型\",{\"1\":{\"131\":1}}],[\"没发给父类传参\",{\"1\":{\"131\":1}}],[\"没有this的主要原因是因为它引入了\",{\"1\":{\"249\":1}}],[\"没有新元素将被添加\",{\"1\":{\"131\":1}}],[\"没有初始值\",{\"1\":{\"131\":1}}],[\"没有modules配置\",{\"1\":{\"101\":1}}],[\"没有任何副作用\",{\"1\":{\"89\":1}}],[\"没有输出\",{\"1\":{\"9\":1}}],[\"男\",{\"1\":{\"131\":1,\"166\":1}}],[\"继承只能继承一个类\",{\"1\":{\"131\":2}}],[\"继承之后可以使用父类的方法\",{\"1\":{\"131\":1}}],[\"继承\",{\"1\":{\"131\":1}}],[\"剩余参数\",{\"1\":{\"131\":1}}],[\"匿名函数\",{\"1\":{\"131\":1}}],[\"私有\",{\"1\":{\"131\":2}}],[\"默认支持ts\",{\"1\":{\"258\":1}}],[\"默认会给事件回调注入event事件对象\",{\"1\":{\"233\":1}}],[\"默认插槽\",{\"0\":{\"210\":1},\"1\":{\"210\":1,\"230\":2,\"241\":2}}],[\"默认值\",{\"1\":{\"190\":1}}],[\"默认到处\",{\"1\":{\"131\":1}}],[\"默认参数\",{\"1\":{\"131\":1,\"231\":1}}],[\"默认是被卸载掉的\",{\"1\":{\"181\":1}}],[\"默认是\",{\"1\":{\"131\":1}}],[\"默认初始值为\",{\"1\":{\"131\":1}}],[\"默认返回调用者的具体类型\",{\"1\":{\"74\":1}}],[\"属于数组的一种\",{\"1\":{\"131\":1}}],[\"属性值是函数\",{\"1\":{\"201\":1}}],[\"属性值是非函数\",{\"1\":{\"201\":1}}],[\"属性节点\",{\"1\":{\"86\":1}}],[\"属性是可以被修改的\",{\"1\":{\"75\":1}}],[\"属性中的类名顺序无关紧要\",{\"1\":{\"62\":1}}],[\"属性中的类名顺序决定的\",{\"1\":{\"61\":1}}],[\"属性\",{\"0\":{\"175\":1},\"1\":{\"47\":1,\"53\":1,\"62\":1,\"86\":1,\"159\":1,\"206\":1}}],[\"属性选择器\",{\"0\":{\"47\":1}}],[\"代号\",{\"1\":{\"145\":1}}],[\"代表从不会出现的类型\",{\"1\":{\"131\":1}}],[\"代表从不会出现的值\",{\"1\":{\"131\":1}}],[\"代码如下\",{\"1\":{\"159\":1,\"161\":1,\"233\":1,\"234\":1}}],[\"代码更简洁\",{\"1\":{\"141\":1}}],[\"代码编辑\",{\"1\":{\"131\":1}}],[\"代码进行编译\",{\"1\":{\"131\":1}}],[\"代码\",{\"1\":{\"131\":2}}],[\"代码可与\",{\"1\":{\"131\":1}}],[\"代码笔记\",{\"0\":{\"103\":1},\"2\":{\"104\":1}}],[\"代码在执行前\",{\"1\":{\"89\":1}}],[\"代码提交触发ci构建\",{\"1\":{\"19\":1}}],[\"包装成一个对象\",{\"1\":{\"200\":1}}],[\"包裹在响应式对象里面的ref不需要\",{\"1\":{\"162\":1}}],[\"包括属性\",{\"1\":{\"131\":1}}],[\"包括空格\",{\"1\":{\"131\":1}}],[\"包括\",{\"1\":{\"131\":2}}],[\"包含所有被ref属性标识的dom元素或组件实例\",{\"1\":{\"206\":1}}],[\"包含所有父组件传入的标签属性\",{\"1\":{\"205\":1}}],[\"包含\",{\"1\":{\"47\":1,\"237\":1}}],[\"包含其中一个\",{\"1\":{\"9\":1}}],[\"反向位移\",{\"1\":{\"131\":1}}],[\"反引号\",{\"1\":{\"131\":1}}],[\"反之亦然\",{\"1\":{\"78\":1}}],[\"来解析\",{\"1\":{\"273\":1}}],[\"来定义组件的状态和行为\",{\"1\":{\"250\":1}}],[\"来定义多行文本和内嵌表达式\",{\"1\":{\"131\":1}}],[\"来绕开深度响应\",{\"1\":{\"216\":1}}],[\"来决定\",{\"1\":{\"212\":1}}],[\"来说\",{\"1\":{\"162\":1}}],[\"来实现\",{\"1\":{\"131\":1}}],[\"来申明变量\",{\"1\":{\"131\":1}}],[\"来表示字符串类型\",{\"1\":{\"131\":1}}],[\"来操作html\",{\"1\":{\"86\":1}}],[\"声明事件\",{\"1\":{\"204\":2}}],[\"声明变量没有设置类型和初始值\",{\"1\":{\"131\":1}}],[\"声明变量并初始值\",{\"1\":{\"131\":1}}],[\"声明变量为数组\",{\"1\":{\"131\":1}}],[\"声明为字符串\",{\"1\":{\"131\":1}}],[\"声明为\",{\"1\":{\"131\":1}}],[\"声明式部署\",{\"1\":{\"13\":1,\"14\":1}}],[\"描述\",{\"1\":{\"131\":1}}],[\"运行正常\",{\"1\":{\"303\":1}}],[\"运行任务\",{\"1\":{\"131\":1}}],[\"运行时可能出错\",{\"1\":{\"112\":1}}],[\"任何尝试修改这个对象的操作都会被阻止\",{\"1\":{\"218\":1}}],[\"任务列表\",{\"0\":{\"280\":1}}],[\"任务\",{\"1\":{\"131\":1}}],[\"任意类型\",{\"0\":{\"112\":1},\"1\":{\"131\":1}}],[\"任意文本内容\",{\"1\":{\"108\":1}}],[\"任意数值\",{\"1\":{\"108\":1}}],[\"很麻烦\",{\"1\":{\"131\":1}}],[\"转换为ref对象\",{\"1\":{\"166\":1}}],[\"转换为\",{\"1\":{\"131\":1}}],[\"转换成js\",{\"1\":{\"89\":1}}],[\"转换成json对象数组\",{\"1\":{\"89\":1}}],[\"然后返回被删除\",{\"1\":{\"131\":1}}],[\"然后执行以下命令将\",{\"1\":{\"131\":1}}],[\"然后再将\",{\"1\":{\"26\":1}}],[\"作者\",{\"1\":{\"297\":1}}],[\"作者设置为\",{\"1\":{\"288\":1}}],[\"作为\",{\"1\":{\"227\":1}}],[\"作为props传给detail组件\",{\"1\":{\"189\":1}}],[\"作为typescript\",{\"1\":{\"131\":1}}],[\"作用于插槽\",{\"1\":{\"230\":2}}],[\"作用域插槽将数据回传给父组件\",{\"1\":{\"241\":1}}],[\"作用域插槽可以实现父子组件通信\",{\"1\":{\"241\":1}}],[\"作用域插槽\",{\"0\":{\"212\":1},\"1\":{\"241\":2}}],[\"作用\",{\"1\":{\"89\":1,\"162\":1,\"163\":1,\"166\":1,\"167\":1,\"168\":1,\"175\":1,\"184\":1,\"189\":4,\"190\":1,\"192\":1,\"214\":1,\"215\":1,\"218\":1,\"219\":1,\"221\":1,\"222\":1,\"223\":1}}],[\"查看详情\",{\"1\":{\"276\":1,\"277\":1,\"278\":1,\"279\":1,\"280\":1,\"281\":1,\"282\":1}}],[\"查看\",{\"1\":{\"151\":1}}],[\"查看版本号\",{\"1\":{\"131\":1}}],[\"查找所有发生变化的数据\",{\"1\":{\"80\":1}}],[\"查找并更新发生变化的数据\",{\"1\":{\"78\":1}}],[\"因此可以借助于\",{\"1\":{\"273\":1}}],[\"因此可以使用父组件内部的数据与方法\",{\"1\":{\"238\":1}}],[\"因此你也发现了\",{\"1\":{\"237\":1}}],[\"因此赋值时候需要加上\",{\"1\":{\"167\":1}}],[\"因此\",{\"1\":{\"137\":1,\"270\":1}}],[\"因此现有的\",{\"1\":{\"131\":1}}],[\"因为状态和方法都是通过显式的变量和函数来引用\",{\"1\":{\"250\":1}}],[\"因为vue3中组件内部的数据对外\",{\"1\":{\"238\":1}}],[\"因为vue3引入了fragment概念\",{\"1\":{\"132\":1}}],[\"因为citys被markraw标记了\",{\"1\":{\"221\":1,\"222\":1}}],[\"因为不需要服务器端处理路径\",{\"1\":{\"182\":1}}],[\"因为不是同一个对象了\",{\"1\":{\"170\":1}}],[\"因为对象地址值没有改变\",{\"1\":{\"171\":1}}],[\"因为它们是通过显式的变量和函数来引用的\",{\"1\":{\"250\":1}}],[\"因为它们是同一个对象\",{\"1\":{\"170\":1}}],[\"因为它使用了新的es6语法和数据处理方式\",{\"1\":{\"101\":1}}],[\"因为浏览器不需要为额外的根标签分配内存\",{\"1\":{\"135\":1}}],[\"因为开发者不再需要手动同步数据和视图\",{\"1\":{\"78\":1}}],[\"因为\",{\"1\":{\"64\":1,\"67\":1,\"75\":1}}],[\"扩展\",{\"0\":{\"273\":1,\"274\":1},\"1\":{\"161\":1,\"274\":1}}],[\"扩展属性\",{\"1\":{\"131\":1}}],[\"扩展了\",{\"1\":{\"131\":1}}],[\"扩展运算符与正常的函数参数可以结合使用\",{\"1\":{\"89\":1}}],[\"扩展运算符是三个点\",{\"1\":{\"89\":1}}],[\"等他的背影混入来来往往的人里\",{\"1\":{\"297\":1}}],[\"等待异步组件时渲染一些额外内容\",{\"1\":{\"225\":1}}],[\"等等\",{\"1\":{\"158\":1}}],[\"等支持开箱即用\",{\"1\":{\"152\":1}}],[\"等\",{\"1\":{\"131\":1}}],[\"等价\",{\"1\":{\"68\":1}}],[\"语法进行了扩展\",{\"1\":{\"274\":1}}],[\"语法扩展\",{\"1\":{\"273\":1}}],[\"语法如下\",{\"1\":{\"166\":1}}],[\"语法糖\",{\"0\":{\"161\":1}}],[\"语法\",{\"0\":{\"279\":1},\"1\":{\"131\":1,\"162\":1,\"163\":1,\"275\":1,\"290\":1}}],[\"语法和行为改变\",{\"1\":{\"89\":1}}],[\"介绍\",{\"0\":{\"131\":1,\"271\":1},\"1\":{\"271\":1,\"272\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}],[\"映射类型\",{\"0\":{\"129\":1}}],[\"条件类型\",{\"0\":{\"128\":1}}],[\"精确到具体的值\",{\"1\":{\"121\":1}}],[\"字父组件\",{\"1\":{\"230\":2}}],[\"字面量类型\",{\"0\":{\"121\":1}}],[\"字符串类型\",{\"1\":{\"131\":1}}],[\"字符串转换回对象\",{\"1\":{\"26\":1}}],[\"字符串\",{\"1\":{\"26\":1,\"108\":1,\"131\":2}}],[\"常见搭配形式\",{\"1\":{\"200\":1}}],[\"常见跨域场景\",{\"1\":{\"32\":1}}],[\"常用与\",{\"1\":{\"201\":1}}],[\"常用的钩子\",{\"1\":{\"177\":1}}],[\"常用于扩展对象\",{\"1\":{\"120\":1}}],[\"交叉类型\",{\"0\":{\"120\":1}}],[\"交互是否处于活动状态\",{\"1\":{\"9\":1}}],[\"识别为数字\",{\"1\":{\"119\":1}}],[\"为每个\",{\"1\":{\"272\":1}}],[\"为了丰富文档写作\",{\"1\":{\"274\":1}}],[\"为了防止误把mockjs变为响应式对象\",{\"1\":{\"222\":1}}],[\"为了呈现数据\",{\"1\":{\"204\":1}}],[\"为一组值命名常量\",{\"1\":{\"117\":1}}],[\"为什么推荐使用ref而不是reactive\",{\"1\":{\"262\":1}}],[\"为什么vue3没有this\",{\"0\":{\"249\":1}}],[\"为什么vue3可以多个根节点\",{\"0\":{\"132\":1}}],[\"为什么\",{\"1\":{\"72\":1}}],[\"枚举类型用于定义数值集合\",{\"1\":{\"131\":1}}],[\"枚举\",{\"0\":{\"117\":1},\"1\":{\"131\":2}}],[\"接受父组件传递过来的数据\",{\"1\":{\"241\":1}}],[\"接受默认数据\",{\"1\":{\"231\":1}}],[\"接受的数据类型\",{\"1\":{\"231\":1}}],[\"接收props\",{\"1\":{\"204\":2}}],[\"接收数据的组件中\",{\"1\":{\"203\":1}}],[\"接收参数\",{\"1\":{\"187\":1,\"188\":1}}],[\"接收\",{\"1\":{\"176\":2}}],[\"接收state作为首个参数\",{\"1\":{\"99\":1}}],[\"接入\",{\"1\":{\"131\":1}}],[\"接口中的方法都是抽象的\",{\"1\":{\"131\":1}}],[\"接口实现的注意点\",{\"1\":{\"131\":1}}],[\"接口的方法一般为空的\",{\"1\":{\"131\":1}}],[\"接口的作用\",{\"1\":{\"131\":1}}],[\"接口类似于java\",{\"1\":{\"131\":1}}],[\"接口不关心类的内部状态数据\",{\"1\":{\"131\":1}}],[\"接口定义了某些类所需要准守的规范\",{\"1\":{\"131\":1}}],[\"接口是一种规范的定义\",{\"1\":{\"131\":1}}],[\"接口\",{\"0\":{\"115\":1}}],[\"❌\",{\"1\":{\"111\":1,\"112\":1,\"113\":1,\"121\":1,\"122\":1}}],[\"元组\",{\"0\":{\"111\":1},\"1\":{\"131\":1}}],[\"元素后插入内容\",{\"1\":{\"52\":1}}],[\"元素前插入内容\",{\"1\":{\"52\":1}}],[\"元素\",{\"1\":{\"37\":1,\"53\":1,\"62\":1}}],[\"元素选择器\",{\"0\":{\"37\":1}}],[\"泛型写法\",{\"1\":{\"110\":1}}],[\"明确表示为\",{\"1\":{\"108\":2}}],[\"能实现极速的服务启动\",{\"1\":{\"152\":1}}],[\"能够更好地利用typescript的类型检查和智能提示‌\",{\"1\":{\"250\":1}}],[\"能够自动转换成浏览器可以解析的文件\",{\"1\":{\"131\":1}}],[\"能够安全表示超过\",{\"1\":{\"108\":1}}],[\"能让你如css忍者般精准定位元素\",{\"1\":{\"60\":1}}],[\"浮点数等\",{\"1\":{\"108\":1}}],[\"含整数\",{\"1\":{\"108\":1}}],[\"含actions\",{\"1\":{\"13\":1}}],[\"布尔\",{\"1\":{\"131\":1}}],[\"布尔类型\",{\"1\":{\"131\":1}}],[\"布尔值\",{\"1\":{\"108\":1}}],[\"布局包括\",{\"1\":{\"267\":1}}],[\"布局与功能禁用\",{\"0\":{\"264\":1}}],[\"布局\",{\"0\":{\"267\":1},\"1\":{\"8\":1},\"2\":{\"269\":1}}],[\"写作日期为\",{\"1\":{\"288\":1}}],[\"写入它\",{\"1\":{\"195\":1}}],[\"写函数\",{\"1\":{\"172\":4}}],[\"写法\",{\"1\":{\"108\":1}}],[\"写样式的时候谁的优先级更高\",{\"0\":{\"61\":1}}],[\"轻量快速的热重载\",{\"1\":{\"152\":1}}],[\"轻量且高性能的状态管理\",{\"1\":{\"101\":1}}],[\"轻量级需求\",{\"1\":{\"13\":1}}],[\"轻量级容器化ci\",{\"1\":{\"13\":1,\"17\":1}}],[\"综上所述\",{\"1\":{\"101\":1,\"137\":1}}],[\"易用性和语法\",{\"1\":{\"101\":1}}],[\"社区支持强的状态管理解决方案\",{\"1\":{\"101\":1}}],[\"社区支持相对较弱\",{\"1\":{\"101\":1}}],[\"社区支持和版本兼容性\",{\"1\":{\"101\":1}}],[\"由vue\",{\"1\":{\"101\":1}}],[\"由于vue使用的是数据劫持\",{\"1\":{\"78\":1,\"80\":1}}],[\"提及到ref可能会想到它可以获取元素的dom或者获取子组件实例的vc\",{\"1\":{\"238\":1}}],[\"提升性能\",{\"1\":{\"133\":1}}],[\"提供更加丰富的写作功能\",{\"1\":{\"275\":1}}],[\"提供\",{\"1\":{\"239\":1}}],[\"提供注入\",{\"1\":{\"230\":1}}],[\"提供数据\",{\"1\":{\"207\":1}}],[\"提供数据的组件\",{\"1\":{\"203\":1}}],[\"提供这些方法的类就可以满足某些需求\",{\"1\":{\"131\":1}}],[\"提供了更好的类型推导和类型检查\",{\"1\":{\"101\":1}}],[\"提供了更多的功能\",{\"1\":{\"101\":1}}],[\"提高了渲染性能和优化了内存占用\",{\"1\":{\"137\":1}}],[\"提高了渲染性能\",{\"1\":{\"136\":1}}],[\"提高了代码的可维护性\",{\"1\":{\"101\":1}}],[\"提高渲染性能\",{\"1\":{\"135\":1}}],[\"提高选择器权重\",{\"1\":{\"69\":1}}],[\"状态\",{\"1\":{\"195\":3,\"198\":1}}],[\"状态管理是分散的\",{\"1\":{\"101\":1}}],[\"状态类\",{\"0\":{\"48\":1}}],[\"采用打包器模式\",{\"1\":{\"257\":1}}],[\"采用全局单例模式\",{\"1\":{\"101\":1}}],[\"采用其后的其他三个过滤器\",{\"1\":{\"9\":1}}],[\"设计理念和使用方式\",{\"1\":{\"101\":1}}],[\"设置排除\",{\"1\":{\"9\":1}}],[\"设置成员资格过滤器\",{\"1\":{\"9\":1}}],[\"设置文字颜色\",{\"1\":{\"8\":1}}],[\"设置文字信息\",{\"1\":{\"8\":1}}],[\"设置点图层可见\",{\"1\":{\"8\":1}}],[\"性能的提升\",{\"0\":{\"147\":1}}],[\"性能表现‌\",{\"1\":{\"142\":1}}],[\"性能\",{\"1\":{\"101\":1,\"256\":1}}],[\"性能等方面存在一些区别\",{\"1\":{\"101\":1}}],[\"性能优化\",{\"0\":{\"55\":1}}],[\"访问状态与方法‌\",{\"1\":{\"100\":1}}],[\"两脚再向上缩\",{\"1\":{\"297\":1}}],[\"两个注意点\",{\"0\":{\"181\":1}}],[\"两种方式\",{\"1\":{\"100\":1}}],[\"两者不同在于\",{\"1\":{\"89\":1}}],[\"扁平化store设计\",{\"1\":{\"99\":1}}],[\"派生状态\",{\"1\":{\"99\":1}}],[\"存放的一些项目中的总结\",{\"1\":{\"298\":1}}],[\"存放的一些随笔\",{\"1\":{\"295\":1}}],[\"存放的一些网站\",{\"1\":{\"261\":1}}],[\"存储+读取数据\",{\"0\":{\"195\":1}}],[\"存储应用状态数据\",{\"1\":{\"99\":1}}],[\"存在属性line\",{\"1\":{\"9\":1}}],[\"存在\",{\"1\":{\"9\":1,\"47\":1,\"131\":1}}],[\"用法\",{\"1\":{\"214\":1,\"215\":1,\"218\":1,\"219\":1}}],[\"用name跳转\",{\"1\":{\"188\":1}}],[\"用name也可以跳转\",{\"1\":{\"187\":1}}],[\"用在组件标签上\",{\"1\":{\"175\":2}}],[\"用在普通dom标签上\",{\"1\":{\"175\":2}}],[\"用watcheffect实现\",{\"1\":{\"174\":1}}],[\"用watch实现\",{\"1\":{\"174\":1}}],[\"用extends\",{\"1\":{\"131\":1}}],[\"用逗号分开就行了\",{\"1\":{\"131\":1}}],[\"用于获取一个响应式对象的原始对象\",{\"1\":{\"221\":1}}],[\"用于创建一个对象的深只读副本\",{\"1\":{\"218\":1}}],[\"用于创建pinia\",{\"1\":{\"194\":1}}],[\"用于更新money的方法\",{\"1\":{\"207\":1}}],[\"用于注册模板引用\",{\"1\":{\"175\":1}}],[\"用于引用计算机内存地址\",{\"1\":{\"131\":1}}],[\"用于初始化变量为一个未定义的值\",{\"1\":{\"131\":1}}],[\"用于标识方法返回值的类型\",{\"1\":{\"131\":1}}],[\"用于跨组件或页面共享状态\",{\"1\":{\"98\":1}}],[\"用户无效输入\",{\"1\":{\"58\":1}}],[\"失败的回调\",{\"1\":{\"89\":1}}],[\"失败调用\",{\"1\":{\"89\":1}}],[\"成功的回调\",{\"1\":{\"89\":1}}],[\"成功调用\",{\"1\":{\"89\":1}}],[\"成本优化\",{\"1\":{\"13\":1}}],[\"箭头函数的this就是windows\",{\"1\":{\"89\":1}}],[\"箭头函数的this就是外层函数的this\",{\"1\":{\"89\":1}}],[\"箭头函数的this看外层是否与函数\",{\"1\":{\"89\":1}}],[\"箭头函数的this不是调用的时候决定的\",{\"1\":{\"89\":1}}],[\"箭头函数的特点\",{\"1\":{\"89\":1}}],[\"箭头函数没有自己的this\",{\"1\":{\"89\":1}}],[\"调用对应action\",{\"1\":{\"196\":1}}],[\"调用usexxxxxstore得到对应的store\",{\"1\":{\"195\":1}}],[\"调用特定的函数\",{\"1\":{\"177\":1}}],[\"调用装饰器\",{\"1\":{\"131\":1}}],[\"调用函数\",{\"1\":{\"131\":1}}],[\"调用action\",{\"1\":{\"100\":1}}],[\"调用\",{\"1\":{\"89\":2}}],[\"调用fun\",{\"1\":{\"89\":1}}],[\"`vue3`可以更好的支持`typescript`\",{\"1\":{\"149\":1}}],[\"`$\",{\"1\":{\"131\":1}}],[\"`\",{\"1\":{\"89\":1,\"131\":2,\"147\":4,\"188\":1}}],[\"变量值会设为\",{\"1\":{\"131\":1}}],[\"变量使用前需要申明\",{\"1\":{\"131\":1}}],[\"变量名\",{\"1\":{\"131\":1}}],[\"变量名不能以数字开头\",{\"1\":{\"131\":1}}],[\"变量名可以包含数字和字母\",{\"1\":{\"131\":1}}],[\"变量的命名规则\",{\"1\":{\"131\":1}}],[\"变量是一种使用方便的占位符\",{\"1\":{\"131\":1}}],[\"变量提升\",{\"1\":{\"89\":1}}],[\"变更检测周期中调用\",{\"1\":{\"82\":1}}],[\"变更验证\",{\"1\":{\"13\":1}}],[\"传递一个数组\",{\"1\":{\"234\":1}}],[\"传递信息\",{\"1\":{\"231\":1}}],[\"传递params参数时\",{\"1\":{\"188\":2}}],[\"传递参数\",{\"1\":{\"187\":1,\"188\":1}}],[\"传的参数不同\",{\"1\":{\"131\":1}}],[\"传参方式同call一样\",{\"1\":{\"89\":1}}],[\"传参的方式不同\",{\"1\":{\"89\":1}}],[\"传入的值放在数组里\",{\"1\":{\"89\":1}}],[\"张三\",{\"1\":{\"89\":1,\"153\":1,\"158\":1,\"161\":1,\"162\":2,\"166\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"175\":1,\"176\":1}}],[\"遍历过滤出一个新的子数组\",{\"1\":{\"89\":1}}],[\"遍历数组\",{\"1\":{\"89\":2}}],[\"禁用\",{\"2\":{\"266\":1}}],[\"禁用了如下功能\",{\"1\":{\"264\":1}}],[\"禁用状态\",{\"1\":{\"51\":1}}],[\"禁止自定义的this指向windows\",{\"1\":{\"89\":1}}],[\"申明变量的类型\",{\"1\":{\"131\":1}}],[\"申明变量\",{\"1\":{\"89\":1}}],[\"必须子组件内部拥有一个按钮点击时候获取父组件实例\",{\"1\":{\"238\":1}}],[\"必须使用name配置项\",{\"1\":{\"188\":1}}],[\"必须使用ref\",{\"1\":{\"165\":1}}],[\"必须重写才能使用\",{\"1\":{\"131\":1}}],[\"必须用var\",{\"1\":{\"89\":1}}],[\"必填项\",{\"1\":{\"51\":1}}],[\"我不知何时再能与他相见\",{\"1\":{\"297\":1}}],[\"我读到此处\",{\"1\":{\"297\":1}}],[\"我身体平安\",{\"1\":{\"297\":1}}],[\"我北来后\",{\"1\":{\"297\":1}}],[\"我便进来坐下\",{\"1\":{\"297\":1}}],[\"我望着他走出去\",{\"1\":{\"297\":1}}],[\"我走了\",{\"1\":{\"297\":1}}],[\"我赶紧去搀他\",{\"1\":{\"297\":1}}],[\"我赶紧拭干了泪\",{\"1\":{\"297\":1}}],[\"我再向外看时\",{\"1\":{\"297\":1}}],[\"我看见他戴着黑布小帽\",{\"1\":{\"297\":1}}],[\"我看那边月台的栅栏外有几个卖东西的等着顾客\",{\"1\":{\"297\":1}}],[\"我本来要去的\",{\"1\":{\"297\":1}}],[\"我买几个橘子去\",{\"1\":{\"297\":1}}],[\"我买票\",{\"1\":{\"297\":1}}],[\"我说道\",{\"1\":{\"297\":1}}],[\"我现在想想\",{\"1\":{\"297\":1}}],[\"我心里暗笑他的迂\",{\"1\":{\"297\":1}}],[\"我将他给我做的紫毛大衣铺好坐位\",{\"1\":{\"297\":1}}],[\"我将从\",{\"0\":{\"35\":1}}],[\"我那时真是聪明过分\",{\"1\":{\"297\":1}}],[\"我两三回劝他不必去\",{\"1\":{\"297\":1}}],[\"我也要回北京念书\",{\"1\":{\"297\":1}}],[\"我从北京到徐州打算跟着父亲奔丧回家\",{\"1\":{\"297\":1}}],[\"我最不能忘记的是他的背影\",{\"1\":{\"297\":1}}],[\"我与父亲不相见已二年余了\",{\"1\":{\"297\":1}}],[\"我们过了江\",{\"1\":{\"297\":1}}],[\"我们便同行\",{\"1\":{\"297\":1}}],[\"我们会发现在script标签内部\",{\"1\":{\"234\":1}}],[\"我们在vue3中使用watch的时候\",{\"1\":{\"168\":1}}],[\"我们通过下标号来引用某个元素\",{\"1\":{\"131\":1}}],[\"我们可以借助vite中的插件简化\",{\"1\":{\"161\":1}}],[\"我们可以使用\",{\"1\":{\"131\":1}}],[\"我们可以把变量看做存储数据的容器\",{\"1\":{\"131\":1}}],[\"我们平常所写的代码规范\",{\"1\":{\"89\":1}}],[\"我的眼泪又来了\",{\"1\":{\"297\":1}}],[\"我的泪很快地流下来了\",{\"1\":{\"297\":1}}],[\"我的死心塌地\",{\"1\":{\"195\":1}}],[\"我的年龄是\",{\"1\":{\"89\":2}}],[\"我的名字\",{\"1\":{\"89\":1}}],[\"该方法接收两个参数slice\",{\"1\":{\"131\":1}}],[\"该方法输出字符串\",{\"1\":{\"131\":1}}],[\"该变量可以是任意类型\",{\"1\":{\"131\":1}}],[\"该对象调用方法\",{\"1\":{\"131\":1}}],[\"该类有一个方法\",{\"1\":{\"131\":1}}],[\"该运算符主要用于函数调用\",{\"1\":{\"89\":1}}],[\"该部分只支持mapbox\",{\"1\":{\"9\":1}}],[\"赋值给对应的变量\",{\"1\":{\"89\":1}}],[\"拿到obj\",{\"1\":{\"89\":1}}],[\"网页中的每一个部分都可以成为一个节点\",{\"1\":{\"86\":1}}],[\"网络协议\",{\"0\":{\"85\":1}}],[\"节点node\",{\"1\":{\"86\":1}}],[\"将橘子一股脑儿放在我的皮大衣上\",{\"1\":{\"297\":1}}],[\"将所有资源打包成bundle\",{\"1\":{\"257\":1}}],[\"将组件逻辑拆分成更小的\",{\"1\":{\"250\":1}}],[\"将接收的value值赋给input元素的value属性\",{\"1\":{\"204\":1}}],[\"将特定的路径\",{\"1\":{\"192\":1}}],[\"将一个响应式对象中的每一个属性\",{\"1\":{\"166\":1}}],[\"将其子节点作为独立渲染单元\",{\"1\":{\"133\":1}}],[\"将基本数据类型字符串转换成对象\",{\"1\":{\"131\":1}}],[\"将网页中的每一个部分都转换成一个对象\",{\"1\":{\"86\":1}}],[\"将图标添加到地图\",{\"1\":{\"9\":1}}],[\"文章标题列表\",{\"1\":{\"267\":1}}],[\"文件夹的图片\",{\"1\":{\"289\":1}}],[\"文件放置在一起使用相对路径进行引用\",{\"1\":{\"289\":1}}],[\"文件生成页面\",{\"1\":{\"270\":1}}],[\"文件\",{\"1\":{\"131\":3}}],[\"文件浏览器本身\",{\"1\":{\"131\":1}}],[\"文件的扩展名\",{\"1\":{\"131\":1}}],[\"文档节点等\",{\"1\":{\"86\":1}}],[\"文档表示的就是整个html网页文档\",{\"1\":{\"86\":1}}],[\"文档\",{\"0\":{\"263\":1},\"1\":{\"86\":1}}],[\"文档对象模型\",{\"1\":{\"86\":1}}],[\"文本节点\",{\"1\":{\"86\":1}}],[\"文本\",{\"1\":{\"86\":1}}],[\"文本光晕颜色设置\",{\"1\":{\"8\":1}}],[\"文本大小\",{\"1\":{\"8\":1}}],[\"之间相互通信\",{\"1\":{\"204\":1}}],[\"之前调用\",{\"1\":{\"83\":1}}],[\"之后\",{\"1\":{\"64\":1}}],[\"销毁阶段\",{\"1\":{\"177\":1}}],[\"销毁\",{\"1\":{\"83\":2,\"177\":1}}],[\"函数返回值监视的是对象的地址值\",{\"1\":{\"172\":2}}],[\"函数返回一个值\",{\"1\":{\"168\":1}}],[\"函数就执行几次\",{\"1\":{\"167\":1}}],[\"函数创建一个应用实例\",{\"1\":{\"152\":1}}],[\"函数名相同\",{\"1\":{\"131\":1}}],[\"函数的重载\",{\"1\":{\"131\":1}}],[\"函数申明法\",{\"1\":{\"131\":1}}],[\"函数类型\",{\"0\":{\"114\":1}}],[\"函数等非原始类型的结构\",{\"1\":{\"109\":1}}],[\"函数\",{\"1\":{\"89\":1,\"131\":1}}],[\"函数中用到哪些属性\",{\"1\":{\"174\":1}}],[\"函数中\",{\"1\":{\"83\":1}}],[\"函数作为composition\",{\"1\":{\"83\":1}}],[\"组件\",{\"0\":{\"283\":1,\"290\":1},\"1\":{\"290\":1}}],[\"组件逻辑\",{\"1\":{\"245\":1}}],[\"组件内部遍历数组\",{\"1\":{\"241\":1}}],[\"组件组件提供数据\",{\"1\":{\"239\":1}}],[\"组件标签\",{\"1\":{\"233\":1}}],[\"组件标签上v\",{\"1\":{\"204\":1}}],[\"组件标签上使用v\",{\"1\":{\"204\":1}}],[\"组件标签上的v\",{\"1\":{\"204\":1}}],[\"组件中使用\",{\"1\":{\"223\":1}}],[\"组件中使用state中的数据\",{\"1\":{\"195\":1}}],[\"组件中读取数据\",{\"1\":{\"198\":1}}],[\"组件中调用action即可\",{\"1\":{\"196\":1}}],[\"组件中具体使用\",{\"1\":{\"178\":1}}],[\"组件中所用到的\",{\"1\":{\"158\":1}}],[\"组件名\",{\"1\":{\"152\":1}}],[\"组件不挂在时触发\",{\"1\":{\"82\":1}}],[\"组合式api的使用方式如下\",{\"1\":{\"250\":1}}],[\"组合式api的具体应用示例\",{\"1\":{\"250\":1}}],[\"组合式api的优点包括\",{\"1\":{\"250\":1}}],[\"组合式api的作用和优势\",{\"0\":{\"250\":1}}],[\"组合式api通过\",{\"1\":{\"250\":1}}],[\"组合式api\",{\"1\":{\"249\":1}}],[\"组合式api风格\",{\"1\":{\"100\":1}}],[\"组合\",{\"1\":{\"154\":1}}],[\"组合api\",{\"1\":{\"150\":1}}],[\"组合多个类型\",{\"1\":{\"120\":1}}],[\"组合选择器\",{\"1\":{\"59\":1}}],[\"组合过滤器\",{\"1\":{\"9\":2}}],[\"每一个独立的仓库都是通过definstore生成的\",{\"1\":{\"101\":1}}],[\"每个\",{\"1\":{\"290\":1}}],[\"每个阶段都有两个钩子\",{\"1\":{\"177\":1}}],[\"每个组件只能有一个根节点\",{\"1\":{\"133\":1}}],[\"每个组件都可以读取\",{\"1\":{\"195\":1}}],[\"每个组件都可以拥有自己的store实例\",{\"1\":{\"101\":1}}],[\"每个组件都有被angular管理的生命周期\",{\"1\":{\"82\":1}}],[\"每个模块负责一部分状态\",{\"1\":{\"101\":1}}],[\"每个节点的类型不一样\",{\"1\":{\"86\":1}}],[\"每次需要这么转\",{\"1\":{\"131\":1}}],[\"每次做完组件视图和子视图的变更检测之后调用\",{\"1\":{\"82\":1}}],[\"每次完成被投影组件内容的变更检测之后调用\",{\"1\":{\"82\":1}}],[\"检测变化\",{\"1\":{\"82\":1}}],[\"理解\",{\"1\":{\"82\":1,\"89\":1,\"212\":1}}],[\"创建失败\",{\"1\":{\"221\":1,\"222\":1}}],[\"创建不可变的状态快照\",{\"1\":{\"218\":1}}],[\"创建的状态只在其顶层是响应式的\",{\"1\":{\"216\":1}}],[\"创建的时候\",{\"1\":{\"131\":1}}],[\"创建一个自定义的ref\",{\"1\":{\"223\":1}}],[\"创建一个浅层响应式对象\",{\"1\":{\"215\":1}}],[\"创建一个响应式数据\",{\"1\":{\"214\":1}}],[\"创建并暴露mitt\",{\"1\":{\"203\":1}}],[\"创建emitter\",{\"1\":{\"203\":1}}],[\"创建eval作用域\",{\"1\":{\"89\":1}}],[\"创建pinia\",{\"1\":{\"194\":1}}],[\"创建阶段\",{\"1\":{\"177\":2}}],[\"创建命令\",{\"1\":{\"152\":1}}],[\"创建项目\",{\"1\":{\"151\":1}}],[\"创建项目的时候\",{\"1\":{\"131\":1}}],[\"创建\",{\"0\":{\"151\":1,\"152\":1,\"162\":1,\"163\":1,\"164\":1},\"1\":{\"177\":1}}],[\"创建唯一的键值\",{\"1\":{\"108\":1}}],[\"创建组件\",{\"1\":{\"82\":1}}],[\"创建完全独立的内存空间\",{\"1\":{\"21\":1}}],[\"生产用webpack\",{\"1\":{\"259\":1}}],[\"生态支持以及适用场景等方面\",{\"1\":{\"256\":1}}],[\"生命周期整体分为四个阶段\",{\"1\":{\"177\":1}}],[\"生命周期\",{\"0\":{\"177\":1}}],[\"生命周期钩子\",{\"1\":{\"82\":1,\"177\":2}}],[\"生成\",{\"1\":{\"131\":1}}],[\"生成容器镜像推送到制品库\",{\"1\":{\"19\":1}}],[\"原始对象\",{\"1\":{\"221\":1}}],[\"原始类型\",{\"0\":{\"108\":1},\"1\":{\"125\":1}}],[\"原始类型的基础上增加了强大的静态类型检查能力\",{\"1\":{\"107\":1}}],[\"原理如下\",{\"1\":{\"206\":1}}],[\"原生dom事件或者自定义事件\",{\"1\":{\"237\":1}}],[\"原生dom事件可以让用户与网页进行交互\",{\"1\":{\"232\":1}}],[\"原生事件\",{\"1\":{\"202\":2}}],[\"原生容器支持\",{\"1\":{\"15\":1}}],[\"原神\",{\"1\":{\"163\":1,\"164\":1}}],[\"原来写在methods中\",{\"1\":{\"158\":1}}],[\"原来写在data中\",{\"1\":{\"158\":1}}],[\"原型链+构造函数组合的继承\",{\"1\":{\"131\":1}}],[\"原型链实现继承\",{\"1\":{\"131\":1}}],[\"原型链继承\",{\"1\":{\"131\":1}}],[\"原型链上的方法\",{\"1\":{\"131\":1}}],[\"原型链上的属性\",{\"1\":{\"131\":1}}],[\"原文\",{\"1\":{\"81\":1,\"83\":1,\"94\":1}}],[\"脏值检查\",{\"1\":{\"80\":1}}],[\"使其永远不会变成响应式的\",{\"1\":{\"222\":1}}],[\"使其进行更新\",{\"1\":{\"79\":1}}],[\"使得代码更易于维护和测试\",{\"1\":{\"250\":1}}],[\"使得代码更加简洁和易于维护\",{\"1\":{\"101\":1}}],[\"使得dom结构更加简洁和高效\",{\"1\":{\"135\":1}}],[\"使开发更加高效和灵活\",{\"1\":{\"133\":1}}],[\"使用指南\",{\"1\":{\"288\":2},\"2\":{\"265\":1,\"284\":1,\"291\":1,\"292\":1,\"294\":1}}],[\"使用defineoptions\",{\"1\":{\"246\":1}}],[\"使用defineexpose将组件中的数据导出交给外部\",{\"1\":{\"175\":1}}],[\"使用两个组件标签\",{\"1\":{\"245\":1}}],[\"使用了defineemits方法\",{\"1\":{\"234\":1}}],[\"使用suspense包裹组件\",{\"1\":{\"225\":1}}],[\"使用storetorefs转换countstore\",{\"1\":{\"197\":1}}],[\"使用步骤\",{\"1\":{\"225\":1}}],[\"使用usemsgref来定义一个响应式数据且有延迟效果\",{\"1\":{\"223\":1}}],[\"使用provide提供数据\",{\"1\":{\"207\":1}}],[\"使用vue提供的默认ref定义响应式数据\",{\"1\":{\"223\":1}}],[\"使用v\",{\"1\":{\"204\":1}}],[\"使用mitt代替\",{\"1\":{\"200\":1}}],[\"使用countstore\",{\"1\":{\"196\":1}}],[\"使用children配置项\",{\"1\":{\"185\":1}}],[\"使用插件\",{\"1\":{\"194\":1,\"247\":1}}],[\"使用原则\",{\"1\":{\"165\":1}}],[\"使用`proxy`代替`defineproperty`实现响应式\",{\"1\":{\"148\":1}}],[\"使用数组泛型\",{\"1\":{\"131\":1}}],[\"使用单引号\",{\"1\":{\"131\":1}}],[\"使用方式参照官网\",{\"1\":{\"240\":1}}],[\"使用方式\",{\"1\":{\"101\":1}}],[\"使用默认参数\",{\"1\":{\"89\":1}}],[\"使用实参\",{\"1\":{\"89\":1}}],[\"使用模板字符串\",{\"1\":{\"89\":1}}],[\"使用模型来表示对象之间的关系\",{\"1\":{\"86\":1}}],[\"使用库可以简化深拷贝的实现\",{\"1\":{\"26\":1}}],[\"使用js库\",{\"1\":{\"26\":1}}],[\"使用json\",{\"1\":{\"26\":1}}],[\"使用object\",{\"1\":{\"26\":1}}],[\"使用展开运算符创建了一个新的对象newobject\",{\"1\":{\"26\":1}}],[\"使用展开运算符\",{\"1\":{\"26\":1}}],[\"使用场景不同\",{\"0\":{\"25\":1}}],[\"使用\",{\"1\":{\"13\":1,\"89\":2,\"221\":1}}],[\"指南\",{\"2\":{\"268\":1}}],[\"指定默认值\",{\"1\":{\"176\":1}}],[\"指向的javascript\",{\"1\":{\"152\":1}}],[\"指向windows\",{\"1\":{\"89\":1}}],[\"指向调用它的对象\",{\"1\":{\"89\":1}}],[\"指向\",{\"1\":{\"89\":1}}],[\"指令在组件上的使用已经被重新设计\",{\"1\":{\"227\":1}}],[\"指令详解\",{\"0\":{\"81\":1}}],[\"指令实现双向绑定\",{\"1\":{\"78\":1}}],[\"指示\",{\"1\":{\"9\":1}}],[\"它类似于props\",{\"1\":{\"237\":1}}],[\"它有三个概念\",{\"1\":{\"195\":1}}],[\"它们的value属性是响应式的\",{\"1\":{\"162\":1}}],[\"它是\",{\"1\":{\"158\":2}}],[\"它带来了诸多优势和影响\",{\"1\":{\"137\":1}}],[\"它不会对应到真实的dom节点\",{\"1\":{\"136\":1}}],[\"它只规定这批类里必须提供某些方法\",{\"1\":{\"131\":1}}],[\"它定义了行为和动作的规范\",{\"1\":{\"131\":1}}],[\"它在\",{\"1\":{\"107\":1}}],[\"它提供了更好的typescript支持\",{\"1\":{\"101\":1}}],[\"它同时支持vue\",{\"1\":{\"101\":1}}],[\"它的值是下标\",{\"1\":{\"131\":1}}],[\"它的设计主要是为了支持vue\",{\"1\":{\"101\":1}}],[\"它的状态管理是集中的\",{\"1\":{\"101\":1}}],[\"它的原理是基于脏检查机制\",{\"1\":{\"78\":1}}],[\"它的原理主要基于object\",{\"1\":{\"78\":1}}],[\"它包含了与oldobject\",{\"1\":{\"26\":1}}],[\"双向数据绑定可以大大简化前端开发的复杂性\",{\"1\":{\"78\":1}}],[\"双类选择器\",{\"1\":{\"68\":1}}],[\"双类选择器权重更高\",{\"1\":{\"66\":1}}],[\"视觉效果上\",{\"1\":{\"181\":1}}],[\"视图操作\",{\"1\":{\"82\":1}}],[\"视图的更新几乎是实时的\",{\"1\":{\"78\":1}}],[\"视频显示的位置\",{\"1\":{\"8\":1}}],[\"视频链接\",{\"1\":{\"8\":1}}],[\"视频\",{\"1\":{\"8\":1}}],[\"框架会自动处理这些操作\",{\"1\":{\"78\":1}}],[\"订阅者模式\",{\"1\":{\"78\":1,\"79\":1}}],[\"兼容性更好\",{\"1\":{\"182\":1}}],[\"兼容性\",{\"1\":{\"78\":1,\"80\":1}}],[\"灵活性\",{\"1\":{\"78\":1,\"80\":1}}],[\"其实我那年已二十岁\",{\"1\":{\"297\":1}}],[\"其实ref接收的数据可以是\",{\"1\":{\"164\":1}}],[\"其他\",{\"0\":{\"227\":1}}],[\"其他改变\",{\"1\":{\"150\":1}}],[\"其他类型\",{\"1\":{\"131\":1}}],[\"其余参数被省略\",{\"1\":{\"131\":1}}],[\"其余参数\",{\"1\":{\"131\":1}}],[\"其核心功能包括state\",{\"1\":{\"98\":1}}],[\"其效率通常比angular脏值检查更高\",{\"1\":{\"80\":1}}],[\"其效率通常比angular的脏值检查更高\",{\"1\":{\"78\":1}}],[\"其中取值有如下几种\",{\"0\":{\"9\":1}}],[\"但当我满心欢喜一顿install\",{\"1\":{\"301\":1}}],[\"但最近两年的不见\",{\"1\":{\"297\":1}}],[\"但他终于讲定了价钱\",{\"1\":{\"297\":1}}],[\"但他终于不放心\",{\"1\":{\"297\":1}}],[\"但正在快速发展\",{\"1\":{\"258\":1}}],[\"但只作用于对象的顶层属性\",{\"1\":{\"219\":1}}],[\"但只对顶层属性进行响应式处理\",{\"1\":{\"214\":1}}],[\"但嵌套对象的属性不是\",{\"1\":{\"215\":1}}],[\"但使用数据所遍历出来的结构由app组件决定\",{\"1\":{\"212\":1}}],[\"但根据数据生成的结构需要组件的使用者\",{\"1\":{\"212\":1}}],[\"但torefs可以批量转换\",{\"1\":{\"166\":1}}],[\"但模板中不需要\",{\"1\":{\"162\":1}}],[\"但在setup中不能访问到vue2的配置\",{\"1\":{\"160\":1}}],[\"但编译器仍然会进行一定的错误检查\",{\"1\":{\"136\":1}}],[\"但不包括\",{\"1\":{\"131\":1}}],[\"但不设置类型类型\",{\"1\":{\"131\":1}}],[\"但implements可以实现多个接口\",{\"1\":{\"131\":1}}],[\"但支持扩展\",{\"1\":{\"115\":1}}],[\"但也在不断发展壮大\",{\"1\":{\"101\":1}}],[\"但也可以在vue\",{\"1\":{\"101\":1}}],[\"但它们在设计理念\",{\"1\":{\"101\":1}}],[\"但它们都致力于提供高效的数据更新机制\",{\"1\":{\"78\":1,\"80\":1}}],[\"但vue的api通常为更简洁\",{\"1\":{\"80\":1}}],[\"但vue的api通常更为简洁\",{\"1\":{\"78\":1}}],[\"但是子组件内部决定不了自身结构与外观\",{\"1\":{\"241\":1}}],[\"但是核心概念没有mutation\",{\"1\":{\"240\":1}}],[\"但是需要注意\",{\"1\":{\"238\":1}}],[\"但是需要注意的是\",{\"1\":{\"74\":1}}],[\"但是在vue3中没有vue构造函数\",{\"1\":{\"235\":1}}],[\"但是如果子组件内部通过defineemits定义就变为自定义事件了\",{\"1\":{\"234\":1}}],[\"但是切记注入的事件对象务必叫做$event\",{\"1\":{\"233\":1}}],[\"但是切记props是只读的\",{\"1\":{\"231\":1}}],[\"但是可以监视到整体的变化\",{\"1\":{\"172\":1}}],[\"但是可以用接口\",{\"1\":{\"131\":1}}],[\"但是可以用接口来实现\",{\"1\":{\"131\":1}}],[\"但是监视不到整体的变化\",{\"1\":{\"172\":1}}],[\"但是不知道是什么对象\",{\"1\":{\"72\":1}}],[\"但是\",{\"1\":{\"26\":3,\"73\":1,\"78\":1,\"80\":1}}],[\"效率\",{\"1\":{\"78\":1,\"80\":1}}],[\"还不会编写\",{\"1\":{\"271\":1}}],[\"还会在控制台中发出警告\",{\"1\":{\"218\":1}}],[\"还会报错\",{\"1\":{\"75\":1}}],[\"还是因为对象地址值没有改变\",{\"1\":{\"171\":1}}],[\"还需要编写一个不写setup的script标签\",{\"1\":{\"161\":1}}],[\"还增强了组件的灵活性和多样性\",{\"1\":{\"137\":1}}],[\"还通过更智能的渲染策略提升了性能表现\",{\"1\":{\"132\":1}}],[\"还能判断爷孙关系\",{\"1\":{\"73\":1}}],[\"构建原理与性能\",{\"0\":{\"257\":1}}],[\"构建测试后自动部署到aws\",{\"1\":{\"13\":1}}],[\"构造函数\",{\"1\":{\"131\":1}}],[\"构造函数名\",{\"1\":{\"75\":2}}],[\"会使用\",{\"1\":{\"273\":1}}],[\"会失去响应式\",{\"1\":{\"165\":1}}],[\"会识别出fragment节点\",{\"1\":{\"136\":1}}],[\"会将其内部的多个顶级节点直接渲染到父节点下\",{\"1\":{\"136\":1}}],[\"会找到\",{\"1\":{\"89\":1}}],[\"会经过预处理的过程\",{\"1\":{\"89\":1}}],[\"会通知所有订阅了该数据的订阅者\",{\"1\":{\"79\":1}}],[\"会自动添加一个\",{\"1\":{\"75\":1}}],[\"会显示\",{\"1\":{\"64\":1}}],[\"有朋友约去游逛\",{\"1\":{\"297\":1}}],[\"有人修改了fullname\",{\"1\":{\"167\":1}}],[\"有两种写法\",{\"1\":{\"110\":1}}],[\"有元素节点\",{\"1\":{\"86\":1}}],[\"有时候我们创建一个对象的时候可能会重写这个方法\",{\"1\":{\"74\":1}}],[\"有一些\",{\"1\":{\"26\":1}}],[\"就不容易了\",{\"1\":{\"297\":1}}],[\"就送我上车\",{\"1\":{\"297\":1}}],[\"就需要分别修改\",{\"1\":{\"155\":1}}],[\"就可以随心所欲操作web\",{\"1\":{\"86\":1}}],[\"就目前来看\",{\"1\":{\"74\":1}}],[\"就是当前类\",{\"1\":{\"131\":1}}],[\"就是undefined\",{\"1\":{\"131\":1}}],[\"就是\",{\"1\":{\"131\":1}}],[\"就是变量提升\",{\"1\":{\"89\":1}}],[\"就是这样设计的\",{\"1\":{\"72\":1}}],[\"就是我只知道他是对象类型\",{\"1\":{\"72\":1}}],[\"完整的typescript支持\",{\"1\":{\"98\":1}}],[\"完整写法是\",{\"1\":{\"74\":1}}],[\"完整alm工具链\",{\"1\":{\"15\":1}}],[\"直到\",{\"1\":{\"131\":1}}],[\"直到查找结束\",{\"1\":{\"73\":1}}],[\"直接通过名字跳转\",{\"1\":{\"184\":1}}],[\"直接通过counter\",{\"1\":{\"100\":1}}],[\"直接写\",{\"1\":{\"172\":2}}],[\"直接写数据名\",{\"1\":{\"170\":1}}],[\"直接写数据名即可\",{\"1\":{\"169\":1}}],[\"直接修改\",{\"1\":{\"171\":1,\"196\":1}}],[\"直接修改state\",{\"1\":{\"99\":1}}],[\"直接使用即可\",{\"1\":{\"162\":1}}],[\"直接拦截原生方法\",{\"1\":{\"142\":1}}],[\"直接定义对象的形状\",{\"1\":{\"113\":1}}],[\"直接从第二个参数开始\",{\"1\":{\"89\":1}}],[\"直接集成在仓库中\",{\"1\":{\"13\":1}}],[\"主题扩展了更多\",{\"1\":{\"275\":1}}],[\"主题扩展\",{\"0\":{\"275\":1}}],[\"主题也带有以下元素\",{\"1\":{\"267\":1}}],[\"主要功能与配置演示\",{\"0\":{\"293\":1}}],[\"主要从\",{\"1\":{\"270\":1}}],[\"主要依赖于其虚拟dom和渲染器的改进\",{\"1\":{\"136\":1}}],[\"主要在父子组件传值中调用\",{\"1\":{\"82\":1}}],[\"主要就是判断一个引用实例是否属于某种类型\",{\"1\":{\"73\":1}}],[\"主域相同\",{\"1\":{\"32\":1}}],[\"所有的响应式状态和方法都定义在setup函数内\",{\"1\":{\"250\":1}}],[\"所有钩子执行的\",{\"1\":{\"158\":1}}],[\"所传递的对象====>不能\",{\"1\":{\"204\":1}}],[\"所以能监视到\",{\"1\":{\"172\":2}}],[\"所以监视不到了\",{\"1\":{\"172\":1}}],[\"所以如下代码并不会引起页面的更新\",{\"1\":{\"162\":1}}],[\"所以希望编辑完\",{\"1\":{\"131\":1}}],[\"所以不存在\",{\"1\":{\"75\":1}}],[\"所以这里需要用call方法来强制执行object方法\",{\"1\":{\"74\":1}}],[\"所以就会被当成对象来看了\",{\"1\":{\"72\":1}}],[\"所谓同源\",{\"1\":{\"32\":1}}],[\"换句话说\",{\"1\":{\"72\":1,\"74\":1}}],[\"引起set的val变化\",{\"1\":{\"167\":1}}],[\"引用数据类型\",{\"1\":{\"131\":1}}],[\"引用对象\",{\"1\":{\"72\":1}}],[\"引入mitt\",{\"1\":{\"203\":1}}],[\"引入storetorefs\",{\"1\":{\"197\":1}}],[\"引入对应的usexxxxxstore\",{\"1\":{\"195\":1}}],[\"引入definestore用于创建store\",{\"1\":{\"195\":2,\"198\":1}}],[\"引入createpinia\",{\"1\":{\"194\":1}}],[\"引入computed\",{\"1\":{\"167\":1}}],[\"引入了多个根节点的支持\",{\"1\":{\"133\":1}}],[\"引入\",{\"1\":{\"131\":1}}],[\"引入库可能会增加项目的体积和复杂性\",{\"1\":{\"26\":1}}],[\"比较麻烦\",{\"1\":{\"161\":1}}],[\"比较过滤器\",{\"1\":{\"9\":1}}],[\"比\",{\"1\":{\"122\":1}}],[\"比如在父组件内部给子组件\",{\"1\":{\"234\":1}}],[\"比如click\",{\"1\":{\"232\":1}}],[\"比如\",{\"1\":{\"72\":2,\"73\":1,\"86\":1,\"131\":1,\"237\":1,\"238\":1}}],[\"判断原理就是只要右边变量的\",{\"1\":{\"73\":1}}],[\"判断方法收集于网络查阅\",{\"1\":{\"71\":1}}],[\"判断js数据类型\",{\"0\":{\"71\":1}}],[\"判断地图是否可拖拽\",{\"1\":{\"9\":1}}],[\"而且我这样大年纪的人\",{\"1\":{\"297\":1}}],[\"而且会覆盖父类定义的变量或者函数\",{\"1\":{\"131\":1}}],[\"而v\",{\"1\":{\"236\":1}}],[\"而vue的torefs会转换store中数据\",{\"1\":{\"197\":1}}],[\"而vue2需重写数组原型方法实现响应式\",{\"1\":{\"141\":1}}],[\"而vuex则需要通过mutations来修改状态\",{\"1\":{\"101\":1}}],[\"而object\",{\"1\":{\"141\":2}}],[\"而不会创建额外的dom层级\",{\"1\":{\"136\":1}}],[\"而不是改变顺序或使用\",{\"1\":{\"69\":1}}],[\"而无需将它们包裹在一个单一的根元素内\",{\"1\":{\"136\":1}}],[\"而无需受到唯一根标签的限制\",{\"1\":{\"135\":1}}],[\"而如果你追求简单\",{\"1\":{\"101\":1}}],[\"而是采取keybab\",{\"1\":{\"202\":1}}],[\"而是作为多个并列顶级节点的容器\",{\"1\":{\"136\":1}}],[\"而是定义的时候处在的对象就是它的this\",{\"1\":{\"89\":1}}],[\"而是将当前的函数调用\",{\"1\":{\"89\":1}}],[\"而angular的脏值检查不受此限制\",{\"1\":{\"78\":1,\"80\":1}}],[\"而\",{\"1\":{\"72\":1,\"133\":1}}],[\"而二进制前三位都为0的话就会被判断成object类型\",{\"1\":{\"72\":1}}],[\"而我们一般说的跨域是狭义的\",{\"1\":{\"32\":1}}],[\"谨慎使用\",{\"1\":{\"69\":1}}],[\"方式2\",{\"1\":{\"231\":1}}],[\"方式1\",{\"1\":{\"231\":1}}],[\"方便在模板中使用\",{\"1\":{\"197\":1}}],[\"方便获取对象\",{\"1\":{\"86\":1}}],[\"方案3\",{\"1\":{\"69\":1}}],[\"方案2\",{\"1\":{\"69\":1}}],[\"方案1\",{\"1\":{\"69\":1}}],[\"方法三\",{\"0\":{\"247\":1}}],[\"方法二\",{\"0\":{\"246\":1}}],[\"方法一\",{\"0\":{\"245\":1}}],[\"方法侦听\",{\"1\":{\"199\":1}}],[\"方法function没有缓存\",{\"1\":{\"167\":1}}],[\"方法等\",{\"1\":{\"159\":1}}],[\"方法会删除首个数组元素\",{\"1\":{\"131\":1}}],[\"方法通过合并\",{\"1\":{\"131\":1}}],[\"方法将源对象的所有可枚举属性复制到目标对象\",{\"1\":{\"26\":1}}],[\"方法\",{\"1\":{\"26\":3,\"79\":1,\"98\":1,\"131\":2,\"155\":1,\"158\":2,\"160\":1,\"161\":1,\"166\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"177\":1,\"178\":1,\"201\":1,\"238\":1}}],[\"方法或者手动复制属性的方式实现\",{\"1\":{\"26\":1}}],[\"粗体\",{\"1\":{\"67\":1}}],[\"更接近传统的网站url\",{\"1\":{\"182\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"267\":1}}],[\"更新时间\",{\"1\":{\"264\":1}}],[\"更新之前\",{\"1\":{\"177\":1}}],[\"更新完毕\",{\"1\":{\"177\":2}}],[\"更新阶段\",{\"1\":{\"177\":2}}],[\"更新\",{\"1\":{\"177\":1}}],[\"更新渲染快`133\",{\"1\":{\"147\":1}}],[\"更推荐写函数\",{\"1\":{\"172\":1}}],[\"更加优雅的组织代码\",{\"1\":{\"156\":1}}],[\"更安全的顶层类型\",{\"1\":{\"122\":1}}],[\"更适合小型项目或对typescript要求高的场景\",{\"1\":{\"101\":1}}],[\"更适合组合式api开发\",{\"1\":{\"98\":1}}],[\"更复杂的权重比较\",{\"0\":{\"66\":1}}],[\"更优\",{\"1\":{\"55\":1}}],[\"定义并暴露一个store\",{\"1\":{\"195\":2,\"198\":1}}],[\"定义的\",{\"1\":{\"169\":2,\"170\":2,\"171\":2,\"172\":1}}],[\"定义的相关变量\",{\"1\":{\"89\":1}}],[\"定义响应式变量\",{\"1\":{\"162\":1}}],[\"定义应该删除多个元素\",{\"1\":{\"131\":1}}],[\"定义应删除多少元素\",{\"1\":{\"131\":1}}],[\"定义新元素应该被添加\",{\"1\":{\"131\":1}}],[\"定义要添加的新元素\",{\"1\":{\"131\":1}}],[\"定义了应添加新元素的位置\",{\"1\":{\"131\":1}}],[\"定义一个自定义类型persons\",{\"1\":{\"176\":1}}],[\"定义一个接口\",{\"1\":{\"176\":1}}],[\"定义一个响应式对象\",{\"1\":{\"163\":1}}],[\"定义一个方法\",{\"1\":{\"131\":1}}],[\"定义一个装饰器\",{\"1\":{\"131\":1}}],[\"定义构造函数\",{\"1\":{\"131\":1}}],[\"定义属性前面省略了关键字\",{\"1\":{\"131\":1}}],[\"定义方法传参\",{\"1\":{\"131\":1}}],[\"定义未赋值\",{\"1\":{\"131\":1}}],[\"定义类型的别名\",{\"1\":{\"127\":1}}],[\"定义函数的类型\",{\"1\":{\"114\":1}}],[\"定义为返回初始状态的函数\",{\"1\":{\"99\":1}}],[\"定义默认参数\",{\"1\":{\"89\":1}}],[\"定义在双类选择器之后\",{\"1\":{\"67\":1}}],[\"定义在\",{\"1\":{\"64\":1}}],[\"定义图标\",{\"1\":{\"9\":1}}],[\"蓝莓\",{\"1\":{\"195\":1}}],[\"蓝色文字\",{\"1\":{\"64\":1}}],[\"蓝绿发布\",{\"1\":{\"14\":1}}],[\"蓝绿部署\",{\"1\":{\"13\":1}}],[\"权重更高\",{\"1\":{\"67\":1}}],[\"权重\",{\"1\":{\"63\":2,\"66\":2,\"68\":3}}],[\"权重值\",{\"1\":{\"53\":1}}],[\"样式\",{\"1\":{\"241\":1}}],[\"样式表定义顺序\",{\"1\":{\"68\":1}}],[\"样式表顺序优先\",{\"1\":{\"62\":1}}],[\"样式优先级不是由\",{\"1\":{\"61\":1}}],[\"关于这些扩展\",{\"1\":{\"274\":1}}],[\"关于$event到底是什么\",{\"1\":{\"204\":1}}],[\"关闭的\",{\"1\":{\"238\":1}}],[\"关联节点\",{\"1\":{\"86\":1}}],[\"关键字\",{\"1\":{\"131\":2}}],[\"关键字创建类的对象\",{\"1\":{\"131\":1}}],[\"关键总结\",{\"0\":{\"68\":1}}],[\"关键看样式表中的定义顺序和选择器权重\",{\"1\":{\"61\":1}}],[\"关系符\",{\"1\":{\"53\":1}}],[\"关系选择器\",{\"0\":{\"41\":1}}],[\"中使用\",{\"1\":{\"290\":1}}],[\"中设置页面信息\",{\"1\":{\"288\":1}}],[\"中设置页面标题\",{\"1\":{\"287\":1}}],[\"中很重要的一个概念\",{\"1\":{\"272\":1}}],[\"中自定义它们\",{\"1\":{\"267\":1}}],[\"中可以访问到setup中的属性\",{\"1\":{\"160\":1}}],[\"中是通过\",{\"1\":{\"152\":1}}],[\"中类\",{\"1\":{\"131\":1}}],[\"中主要的数据类型及其详细说明\",{\"1\":{\"107\":1}}],[\"中的第一个\",{\"1\":{\"287\":1}}],[\"中的第一个元素\",{\"1\":{\"131\":1}}],[\"中的\",{\"1\":{\"274\":1}}],[\"中的继承\",{\"1\":{\"131\":1}}],[\"中的直接表示\",{\"1\":{\"108\":1}}],[\"中的基础原始类型在\",{\"1\":{\"108\":1}}],[\"中的生命周期钩子\",{\"0\":{\"83\":1}}],[\"中的两个类名优先级是相等的\",{\"1\":{\"61\":1}}],[\"中\",{\"0\":{\"61\":1},\"1\":{\"61\":1,\"131\":1,\"133\":1,\"134\":1}}],[\"掌握这些选择器组合\",{\"1\":{\"60\":1}}],[\"✅\",{\"1\":{\"60\":20,\"112\":1,\"119\":2,\"121\":1,\"122\":1}}],[\"浏览器的历史记录有两种写入方式\",{\"1\":{\"190\":1}}],[\"浏览器支持速查表\",{\"0\":{\"60\":1}}],[\"浏览器很容易受到非法攻击\",{\"1\":{\"32\":1}}],[\"排除特定元素\",{\"1\":{\"59\":1}}],[\"首个子元素\",{\"1\":{\"58\":1}}],[\"首选github\",{\"1\":{\"13\":1}}],[\"未包裹的ref需要\",{\"1\":{\"162\":1}}],[\"未知类型\",{\"0\":{\"122\":1}}],[\"未勾选的复选框\",{\"1\":{\"57\":1}}],[\"未访问\",{\"1\":{\"49\":1}}],[\"示例代码\",{\"1\":{\"174\":1,\"177\":1,\"178\":1}}],[\"示例值\",{\"1\":{\"108\":1}}],[\"示例说明\",{\"0\":{\"63\":1}}],[\"示例\",{\"1\":{\"53\":1,\"202\":1}}],[\"示例架构\",{\"0\":{\"19\":1}}],[\"六\",{\"0\":{\"53\":1}}],[\"🏹\",{\"1\":{\"60\":1}}],[\"🌐\",{\"0\":{\"60\":1}}],[\"🎯\",{\"0\":{\"53\":1}}],[\"🎭\",{\"0\":{\"47\":1}}],[\"段落首字母\",{\"1\":{\"52\":1}}],[\"段落首行\",{\"1\":{\"52\":1}}],[\"伪元素选择器\",{\"0\":{\"52\":1},\"1\":{\"53\":1,\"62\":1}}],[\"伪类选择器\",{\"0\":{\"48\":1},\"1\":{\"53\":1,\"62\":1}}],[\"五\",{\"0\":{\"52\":1}}],[\"🧬\",{\"0\":{\"109\":1}}],[\"🧪\",{\"0\":{\"52\":1}}],[\"🧩\",{\"0\":{\"41\":1}}],[\"表演的舞台\",{\"1\":{\"158\":1}}],[\"表示到第几位结束\",{\"1\":{\"131\":1}}],[\"表示从第几位开始\",{\"1\":{\"131\":1}}],[\"表示可以在这个类里面使用\",{\"1\":{\"131\":1}}],[\"表示方法没有任何返回类型\",{\"1\":{\"131\":1}}],[\"表示对象值缺失\",{\"1\":{\"131\":1}}],[\"表示该方法没有返回值\",{\"1\":{\"131\":1}}],[\"表示逻辑值\",{\"1\":{\"131\":1}}],[\"表示函数没有返回值\",{\"1\":{\"124\":1}}],[\"表示永远不会返回的值\",{\"1\":{\"123\":1}}],[\"表示变量可以是多种类型之一\",{\"1\":{\"119\":1}}],[\"表示已知元素数量和类型的数组\",{\"1\":{\"111\":1}}],[\"表示某种类型的数组\",{\"1\":{\"110\":1}}],[\"表示下面所有的条件都得满足\",{\"1\":{\"9\":1}}],[\"表单进阶\",{\"0\":{\"57\":1}}],[\"表单伪类\",{\"0\":{\"51\":1}}],[\"唯一子元素\",{\"1\":{\"50\":1}}],[\"奇数行\",{\"1\":{\"50\":1}}],[\"最新的公开版本为\",{\"1\":{\"145\":1}}],[\"最新的\",{\"1\":{\"131\":1}}],[\"最佳实践\",{\"1\":{\"69\":1}}],[\"最后一个子元素\",{\"1\":{\"50\":1}}],[\"最流行的开源ci\",{\"1\":{\"13\":1,\"14\":1}}],[\"结合更加自然\",{\"1\":{\"250\":1}}],[\"结合成一个字符串\",{\"1\":{\"131\":1}}],[\"结论\",{\"1\":{\"172\":1}}],[\"结果变成\",{\"1\":{\"65\":1}}],[\"结果\",{\"0\":{\"64\":1,\"67\":1},\"1\":{\"131\":8}}],[\"结构伪类\",{\"0\":{\"50\":1}}],[\"结尾\",{\"1\":{\"47\":1}}],[\"获取子组件的响应式数据以及方法\",{\"1\":{\"230\":2}}],[\"获取的是组件实例对象\",{\"1\":{\"175\":1}}],[\"获取的是dom节点\",{\"1\":{\"175\":1}}],[\"获取祖类型的\",{\"1\":{\"73\":1}}],[\"获取栅格数据链接\",{\"1\":{\"8\":1}}],[\"获得焦点\",{\"1\":{\"49\":1}}],[\"激活状态\",{\"1\":{\"49\":1}}],[\"已经处理好\",{\"1\":{\"131\":1}}],[\"已访问\",{\"1\":{\"49\":1}}],[\"已成为云原生部署的主流范式\",{\"1\":{\"13\":1}}],[\"四\",{\"0\":{\"48\":1}}],[\"z\",{\"1\":{\"89\":3}}],[\"zhuye\",{\"1\":{\"184\":1,\"185\":1}}],[\"zhang\",{\"1\":{\"153\":1,\"158\":1,\"162\":1,\"167\":1}}],[\"zhangsan\",{\"1\":{\"131\":2}}],[\"zh\",{\"1\":{\"47\":2,\"262\":1}}],[\"zoom\",{\"1\":{\"9\":2}}],[\"连续解构赋值+重命名\",{\"1\":{\"200\":1}}],[\"连接\",{\"1\":{\"131\":2}}],[\"连接时线的显示\",{\"1\":{\"8\":1}}],[\"连字符前缀匹配\",{\"1\":{\"47\":1}}],[\"开箱即用\",{\"1\":{\"258\":1}}],[\"开发用vite\",{\"1\":{\"259\":1}}],[\"开发环境下直接利用浏览器原生es\",{\"1\":{\"257\":1}}],[\"开发者在构建vue\",{\"1\":{\"137\":1}}],[\"开发者可以根据实际需求来组织组件的模板结构\",{\"1\":{\"135\":1}}],[\"开发者可以更加自由地组织组件的模板结构\",{\"1\":{\"135\":1}}],[\"开发者就需要额外添加一个包裹元素\",{\"1\":{\"134\":1}}],[\"开发者不需要手动更新视图或数据模型\",{\"1\":{\"78\":1}}],[\"开启replace模式\",{\"1\":{\"190\":1}}],[\"开启深度监视\",{\"1\":{\"172\":2}}],[\"开头\",{\"1\":{\"47\":1}}],[\"开源工具\",{\"0\":{\"14\":1}}],[\"开源版进阶功能\",{\"1\":{\"13\":1}}],[\"三个\",{\"1\":{\"234\":1}}],[\"三个包装类\",{\"1\":{\"131\":1}}],[\"三种方式\",{\"0\":{\"196\":1}}],[\"三点运算符接收传过来的参数\",{\"1\":{\"131\":1}}],[\"三\",{\"0\":{\"47\":1,\"118\":1,\"136\":1}}],[\"三者相同\",{\"1\":{\"32\":1}}],[\"实际上只执行一次\",{\"1\":{\"167\":1}}],[\"实例\",{\"1\":{\"227\":1}}],[\"实例化类的时候触发\",{\"1\":{\"131\":1}}],[\"实例化子类\",{\"1\":{\"131\":1}}],[\"实例方法\",{\"1\":{\"131\":1,\"227\":1}}],[\"实时性\",{\"1\":{\"78\":1}}],[\"实验性\",{\"0\":{\"46\":1}}],[\"实现的\",{\"1\":{\"236\":1}}],[\"实现父子组件数据同步\",{\"1\":{\"236\":1}}],[\"实现父子组件通信\",{\"1\":{\"230\":2}}],[\"实现父类\",{\"1\":{\"131\":1}}],[\"实现任意组件通信\",{\"1\":{\"230\":2}}],[\"实现防抖效果\",{\"1\":{\"223\":1}}],[\"实现祖孙组件直接通信\",{\"1\":{\"207\":1}}],[\"实现同样的功能\",{\"1\":{\"167\":1}}],[\"实现方式\",{\"0\":{\"136\":1}}],[\"实现方式不同\",{\"0\":{\"26\":1}}],[\"实现一个接口就是要实现该接口的所有的方法\",{\"1\":{\"131\":1}}],[\"实现真正的继承\",{\"1\":{\"131\":1}}],[\"实现继承\",{\"1\":{\"131\":2}}],[\"实现\",{\"1\":{\"26\":1,\"204\":1}}],[\"实现复杂度\",{\"0\":{\"24\":1}}],[\"列选择器\",{\"0\":{\"46\":1}}],[\"~\",{\"0\":{\"45\":1},\"1\":{\"45\":1,\"166\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1}}],[\"后代组件可以通过inject方法获取数据\",{\"1\":{\"239\":1}}],[\"后代选择器\",{\"0\":{\"42\":1}}],[\"后面就讲\",{\"1\":{\"184\":1}}],[\"后期项目上线\",{\"1\":{\"182\":1}}],[\"后调用\",{\"1\":{\"83\":1}}],[\"后定义的生效\",{\"1\":{\"68\":1,\"69\":1}}],[\"后定义的覆盖先定义的\",{\"1\":{\"64\":1}}],[\"后定义的样式会覆盖先定义的样式\",{\"1\":{\"62\":1}}],[\"后的所有同级\",{\"1\":{\"45\":1}}],[\"后的第一个\",{\"1\":{\"44\":1}}],[\"只是惦记着我\",{\"1\":{\"297\":1}}],[\"只是简单的解析为一条语句\",{\"1\":{\"89\":1}}],[\"只好让他去\",{\"1\":{\"297\":1}}],[\"只将对象的顶层属性设置为只读\",{\"1\":{\"219\":1}}],[\"只会使对象的最顶层属性变成响应式的\",{\"1\":{\"215\":1}}],[\"只跟踪引用值的变化\",{\"1\":{\"214\":1}}],[\"只读取\",{\"1\":{\"167\":1}}],[\"只读属性不可修改\",{\"1\":{\"113\":1}}],[\"只读属性\",{\"1\":{\"113\":1}}],[\"只定义接口需要具体实现\",{\"1\":{\"131\":1}}],[\"只要那个类不是声明为final或者那个类定义为abstract的就能继承\",{\"1\":{\"131\":1}}],[\"只要理解dom\",{\"1\":{\"86\":1}}],[\"只有一个数据导出\",{\"1\":{\"131\":1}}],[\"只能读取\",{\"1\":{\"231\":1}}],[\"只能用一次\",{\"1\":{\"131\":1}}],[\"只能继承构造函数里的方法和属性\",{\"1\":{\"131\":1}}],[\"只能直接指定值\",{\"1\":{\"89\":1}}],[\"只在当前类才可以使用\",{\"1\":{\"131\":1}}],[\"只在当前类和它的子类可以使用\",{\"1\":{\"131\":1}}],[\"只调用一次\",{\"1\":{\"82\":2}}],[\"只选择\",{\"1\":{\"43\":1}}],[\"只监听一次\",{\"1\":{\"9\":1}}],[\"子→父\",{\"1\":{\"206\":1}}],[\"子组件todo代码如下\",{\"1\":{\"241\":1}}],[\"子组件数据由父组件提供\",{\"1\":{\"241\":1}}],[\"子组件内部可以通过useattrs方法获取组件属性与事件\",{\"1\":{\"237\":1}}],[\"子组件获取到props数据就可以在模板中使用了\",{\"1\":{\"231\":1}}],[\"子组件获取父组件传递数据\",{\"1\":{\"231\":2}}],[\"子组件才能拿到使用\",{\"1\":{\"206\":1}}],[\"子组件需要将数据暴露出来\",{\"1\":{\"206\":1}}],[\"子组件中不用编写任何东西\",{\"1\":{\"207\":1}}],[\"子组件中\",{\"1\":{\"202\":1,\"210\":1,\"211\":1,\"212\":1}}],[\"子组件\",{\"1\":{\"201\":1,\"205\":1,\"212\":1}}],[\"子组件person\",{\"1\":{\"175\":1}}],[\"子传父\",{\"1\":{\"201\":1}}],[\"子\",{\"1\":{\"201\":1,\"202\":1}}],[\"子类不可以覆盖父类的方法或者变量\",{\"1\":{\"131\":1}}],[\"子类可以访问\",{\"1\":{\"131\":1}}],[\"子类\",{\"1\":{\"131\":2}}],[\"子元素选择器\",{\"0\":{\"43\":1}}],[\"子域不同\",{\"1\":{\"32\":1}}],[\"空类型\",{\"1\":{\"131\":1}}],[\"空元素\",{\"1\":{\"50\":1}}],[\"空格分隔\",{\"1\":{\"47\":1}}],[\"空格\",{\"0\":{\"42\":1}}],[\"空间占用更高\",{\"1\":{\"24\":1}}],[\"二\",{\"0\":{\"41\":1,\"109\":1,\"135\":1}}],[\"通知vue数据msg变化了\",{\"1\":{\"223\":1}}],[\"通常会遇到以下几种情况\",{\"1\":{\"168\":1}}],[\"通俗说\",{\"1\":{\"86\":1}}],[\"通配符\",{\"1\":{\"53\":1,\"62\":1}}],[\"通配符选择器\",{\"0\":{\"40\":1}}],[\"通用兄弟选择器\",{\"0\":{\"45\":1}}],[\"通过key获取存储的数值\",{\"1\":{\"239\":1}}],[\"通过使用\",{\"1\":{\"216\":1}}],[\"通过\",{\"1\":{\"199\":1,\"272\":1,\"275\":1}}],[\"通过名字\",{\"1\":{\"184\":1}}],[\"通过路径\",{\"1\":{\"184\":2}}],[\"通过点击导航\",{\"1\":{\"181\":1}}],[\"通过ref获取元素\",{\"1\":{\"175\":1}}],[\"通过id获取元素\",{\"1\":{\"175\":1}}],[\"通过toref将person对象中的gender属性取出\",{\"1\":{\"166\":1}}],[\"通过torefs将person对象中的n个属性批量取出\",{\"1\":{\"166\":1}}],[\"通过新的编译器和\",{\"1\":{\"133\":1}}],[\"通过虚拟\",{\"1\":{\"132\":1}}],[\"通过这个三个类可以将基本数据类型转换成对象\",{\"1\":{\"131\":1}}],[\"通过这个方法\",{\"1\":{\"78\":1,\"79\":1}}],[\"通过类型注解提供编译时的静态类型检查\",{\"1\":{\"131\":1}}],[\"通过一个store对象来管理所有的状态\",{\"1\":{\"101\":1}}],[\"通过counter\",{\"1\":{\"100\":1}}],[\"通过npm\",{\"1\":{\"100\":1}}],[\"通过jsonp跨域\",{\"1\":{\"32\":1}}],[\"通过yaml文件定义工作流\",{\"1\":{\"13\":1}}],[\"的主要区别包括构建原理\",{\"1\":{\"256\":1}}],[\"的库或外部系统时\",{\"1\":{\"221\":1}}],[\"的实体\",{\"1\":{\"195\":1}}],[\"的实现机制\",{\"1\":{\"133\":1}}],[\"的新旧值都是新值\",{\"1\":{\"172\":2}}],[\"的变化\",{\"1\":{\"172\":3}}],[\"的变量可以赋予任意类型的值\",{\"1\":{\"131\":1}}],[\"的配置\",{\"1\":{\"160\":1}}],[\"的关系\",{\"0\":{\"160\":1}}],[\"的返回值\",{\"0\":{\"159\":1}}],[\"的优势\",{\"0\":{\"156\":1}}],[\"的弊端\",{\"0\":{\"155\":1}}],[\"的修饰符\",{\"1\":{\"150\":1}}],[\"的结构升级\",{\"0\":{\"133\":1}}],[\"的结构升级实现了对多根节点的支持‌\",{\"1\":{\"132\":1}}],[\"的位置\",{\"1\":{\"131\":1}}],[\"的方法\",{\"1\":{\"131\":1}}],[\"的子类型\",{\"1\":{\"131\":1}}],[\"的语法\",{\"1\":{\"131\":1}}],[\"的语法比vuex更简单且易于理解\",{\"1\":{\"101\":1}}],[\"的超集\",{\"1\":{\"131\":2}}],[\"的数字\",{\"1\":{\"108\":1}}],[\"的数据类型系统是其核心特性之一\",{\"1\":{\"107\":1}}],[\"的数据类型竟然是object\",{\"1\":{\"72\":1}}],[\"的值\",{\"1\":{\"89\":2}}],[\"的所有机器码都是0\",{\"1\":{\"72\":1}}],[\"的字体为\",{\"1\":{\"67\":1}}],[\"的\",{\"1\":{\"61\":1,\"163\":1,\"172\":2,\"199\":1,\"287\":1,\"288\":1}}],[\"的直接子元素\",{\"1\":{\"43\":1}}],[\"的元素\",{\"1\":{\"38\":1,\"39\":1}}],[\"的区别\",{\"1\":{\"9\":1}}],[\"类外面无法访问\",{\"1\":{\"131\":1}}],[\"类外面都可以访问\",{\"1\":{\"131\":1}}],[\"类里面的修饰符\",{\"1\":{\"131\":1}}],[\"类似于vuex\",{\"1\":{\"240\":1}}],[\"类似于vue2\",{\"1\":{\"178\":1}}],[\"类似于对象类型\",{\"1\":{\"115\":1}}],[\"类似\",{\"1\":{\"122\":1,\"219\":1}}],[\"类似vue选项式api\",{\"1\":{\"100\":1}}],[\"类似计算属性\",{\"1\":{\"99\":1}}],[\"类名顺序不影响\",{\"1\":{\"68\":1}}],[\"类\",{\"0\":{\"116\":1},\"1\":{\"38\":1,\"46\":1,\"53\":1,\"62\":1,\"131\":1}}],[\"类选择器\",{\"0\":{\"38\":1},\"1\":{\"68\":1}}],[\"类型可以是任意类型\",{\"1\":{\"131\":1}}],[\"类型别名\",{\"0\":{\"127\":1}}],[\"类型操作\",{\"0\":{\"126\":1}}],[\"类型关系图\",{\"0\":{\"125\":1}}],[\"类型顺序错误\",{\"1\":{\"111\":1}}],[\"类型的判断往往并不是我们想要的结果\",{\"1\":{\"72\":1}}],[\"类型\",{\"0\":{\"123\":1,\"124\":1},\"1\":{\"16\":1,\"108\":1}}],[\"基本切换效果\",{\"0\":{\"180\":1}}],[\"基本类型数据\",{\"1\":{\"165\":1}}],[\"基本类型\",{\"1\":{\"164\":1,\"169\":3,\"172\":2}}],[\"基本类型不要用它\",{\"1\":{\"163\":1}}],[\"基本类型的响应式数据\",{\"0\":{\"162\":1}}],[\"基础数据类型\",{\"1\":{\"131\":1}}],[\"基础选择器\",{\"0\":{\"36\":1}}],[\"基于es\",{\"1\":{\"257\":1}}],[\"基于\",{\"0\":{\"151\":1,\"152\":1}}],[\"基于脏值检查\",{\"1\":{\"78\":1}}],[\"基于object\",{\"1\":{\"78\":1}}],[\"基于自定义资源的流水线\",{\"1\":{\"14\":1}}],[\"基于java开发\",{\"1\":{\"13\":1}}],[\"一半为了父亲赋闲\",{\"1\":{\"297\":1}}],[\"一半为了丧事\",{\"1\":{\"297\":1}}],[\"一种是原生的dom事件\",{\"1\":{\"232\":1}}],[\"一旦变化就更新\",{\"1\":{\"223\":1}}],[\"一前一后\",{\"1\":{\"177\":1}}],[\"一台\",{\"1\":{\"163\":1,\"164\":1}}],[\"一个包含上述内容的数组\",{\"1\":{\"168\":1}}],[\"一个proxy的实例对象\",{\"1\":{\"163\":1}}],[\"一个refimpl的实例对象\",{\"1\":{\"162\":1}}],[\"一个简单的效果\",{\"0\":{\"153\":1}}],[\"一个表单组件可能需要返回一个标题和多个输入框\",{\"1\":{\"134\":1}}],[\"一个类可以实现多个无关的接口\",{\"1\":{\"131\":1}}],[\"一个类通过关键字implements声明自己使用一个或者多个接口\",{\"1\":{\"131\":1}}],[\"一个字符系列\",{\"1\":{\"131\":1}}],[\"一个tsconfig\",{\"1\":{\"131\":1}}],[\"一起工作无需任何修改\",{\"1\":{\"131\":1}}],[\"一次传入\",{\"1\":{\"89\":1}}],[\"一般组件\",{\"1\":{\"181\":1}}],[\"一般组件通常存放在components文件夹\",{\"1\":{\"181\":1}}],[\"一般指向自定义的实例\",{\"1\":{\"89\":1}}],[\"一般做请求数据的时候使用\",{\"1\":{\"82\":1}}],[\"一般用它来判断基本数据类型\",{\"1\":{\"72\":1}}],[\"一\",{\"0\":{\"36\":1,\"108\":1,\"134\":1}}],[\"一组一个输入值和一个输出值\",{\"1\":{\"9\":1}}],[\"📊\",{\"0\":{\"125\":1}}],[\"🔮\",{\"0\":{\"118\":1}}],[\"🔰\",{\"0\":{\"108\":1}}],[\"📌\",{\"1\":{\"69\":1}}],[\"🚫\",{\"1\":{\"60\":2}}],[\"👻\",{\"0\":{\"48\":1}}],[\"🔍\",{\"0\":{\"36\":1}}],[\"💡\",{\"0\":{\"54\":1,\"126\":1},\"1\":{\"13\":1,\"18\":1}}],[\"涵盖基础用法与高阶应用场景\",{\"0\":{\"35\":1}}],[\"附优先级与实战技巧\",{\"0\":{\"34\":1}}],[\"9slot\",{\"0\":{\"241\":1}}],[\"90\",{\"1\":{\"170\":1}}],[\"999\",{\"1\":{\"163\":1,\"164\":1,\"196\":1}}],[\"9\",{\"0\":{\"168\":1,\"189\":1,\"209\":1},\"1\":{\"32\":1,\"89\":3,\"131\":2}}],[\"8pinia\",{\"0\":{\"240\":1}}],[\"888\",{\"1\":{\"171\":1}}],[\"88+\",{\"1\":{\"60\":4}}],[\"89898\",{\"1\":{\"131\":1}}],[\"81854535\",{\"1\":{\"94\":1}}],[\"85+\",{\"1\":{\"60\":1}}],[\"86+\",{\"1\":{\"60\":4}}],[\"80\",{\"1\":{\"89\":1,\"171\":3}}],[\"800px\",{\"1\":{\"59\":1}}],[\"8000\",{\"1\":{\"32\":1}}],[\"80px\",{\"1\":{\"39\":1}}],[\"8\",{\"0\":{\"117\":1,\"167\":1,\"186\":1,\"200\":1,\"208\":1,\"224\":1,\"225\":1,\"226\":1,\"227\":1},\"1\":{\"32\":1,\"89\":2,\"131\":2,\"230\":1}}],[\"74037439\",{\"1\":{\"262\":1}}],[\"7provide与inject\",{\"0\":{\"239\":1}}],[\"78\",{\"1\":{\"89\":1}}],[\"78+\",{\"1\":{\"60\":2}}],[\"7种匹配武器\",{\"0\":{\"47\":1}}],[\"7\",{\"0\":{\"116\":1,\"166\":1,\"185\":1,\"199\":1,\"207\":1,\"213\":1,\"217\":1,\"220\":1,\"223\":1},\"1\":{\"32\":1,\"89\":2,\"131\":3,\"230\":2}}],[\"777\",{\"1\":{\"9\":5,\"203\":1}}],[\"跨域资源共享\",{\"1\":{\"32\":1}}],[\"跨域是指一个域下的文档或者脚本试图去请求另一个域下的资源\",{\"1\":{\"32\":1}}],[\"+=\",{\"1\":{\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"166\":2,\"169\":1,\"170\":2,\"171\":2,\"172\":2,\"173\":2,\"174\":2,\"177\":1,\"178\":1,\"196\":1,\"207\":3}}],[\"+$\",{\"1\":{\"131\":1}}],[\"+age\",{\"1\":{\"131\":1}}],[\"+obj\",{\"1\":{\"89\":2}}],[\"+10\",{\"1\":{\"89\":1}}],[\"+\",{\"0\":{\"44\":1},\"1\":{\"32\":3,\"44\":1,\"53\":5,\"114\":1,\"167\":4,\"176\":4,\"279\":1,\"290\":1}}],[\"域名和域名对应相同ip\",{\"1\":{\"32\":1}}],[\"允许组件包含多个根节点\",{\"1\":{\"134\":1}}],[\"允许组件包含多个根节点的核心原因在于引入了\",{\"1\":{\"132\":1}}],[\"允许使用多个根节点的原因有以下几点\",{\"1\":{\"133\":1}}],[\"允许\",{\"1\":{\"32\":1,\"89\":1}}],[\"允许图标拖拽\",{\"1\":{\"9\":1}}],[\"协议+域名+端口\",{\"1\":{\"32\":1}}],[\"简称\",{\"1\":{\"163\":1}}],[\"简称ref对象\",{\"1\":{\"162\":1}}],[\"简称ref对象或ref\",{\"1\":{\"162\":1}}],[\"简称sop\",{\"1\":{\"32\":1}}],[\"简化配置\",{\"1\":{\"258\":1}}],[\"简化后\",{\"1\":{\"184\":1}}],[\"简化前\",{\"1\":{\"184\":1}}],[\"简化代码实现\",{\"1\":{\"141\":1}}],[\"简化模板结构\",{\"1\":{\"133\":1}}],[\"简化开发\",{\"1\":{\"78\":1}}],[\"简单来说就是判断儿子是否属于该父亲\",{\"1\":{\"73\":1}}],[\"简单部署\",{\"1\":{\"18\":1}}],[\"同步\",{\"1\":{\"99\":1}}],[\"同时每个页面包含\",{\"1\":{\"267\":1}}],[\"同时在销毁前解绑事件\",{\"1\":{\"203\":1}}],[\"同时响应式地追踪其依赖\",{\"1\":{\"174\":1}}],[\"同时还增加了更灵活的接口类型\",{\"1\":{\"131\":1}}],[\"同时执行切换到其它组件的生命钩子\",{\"1\":{\"82\":1}}],[\"同时\",{\"1\":{\"79\":1,\"101\":3}}],[\"同时有\",{\"1\":{\"38\":1}}],[\"同一域名\",{\"1\":{\"32\":3}}],[\"同源策略限制以下几种行为\",{\"1\":{\"32\":1}}],[\"同源策略\",{\"1\":{\"32\":1}}],[\"同样的\",{\"1\":{\"206\":1}}],[\"同样\",{\"1\":{\"26\":1}}],[\"是没有什么要紧的了\",{\"1\":{\"297\":1}}],[\"是不受到任何打扰的\",{\"1\":{\"207\":1}}],[\"是不能够被判断出来的\",{\"1\":{\"75\":1}}],[\"是调用emit时所提供的数据\",{\"1\":{\"202\":1}}],[\"是包含事件相关信息的对象\",{\"1\":{\"202\":1}}],[\"是旧值\",{\"1\":{\"170\":1}}],[\"是新值\",{\"1\":{\"170\":1}}],[\"是新一代前端构建工具\",{\"1\":{\"152\":1}}],[\"是分散在\",{\"1\":{\"155\":1}}],[\"是项目的入口文件\",{\"1\":{\"152\":1}}],[\"是否添加prettiert代码格式化\",{\"1\":{\"152\":1}}],[\"是否添加pinia环境\",{\"1\":{\"152\":1}}],[\"是否添加eslint语法检查\",{\"1\":{\"152\":1}}],[\"是否添加端到端测试方案\",{\"1\":{\"152\":1}}],[\"是否添加单元测试\",{\"1\":{\"152\":1}}],[\"是否添加路由环境\",{\"1\":{\"152\":1}}],[\"是否添加jsx支持\",{\"1\":{\"152\":1}}],[\"是否添加typescript支持\",{\"1\":{\"152\":1}}],[\"是否允许通信\",{\"1\":{\"32\":1}}],[\"是要看项目的实际情况\",{\"1\":{\"131\":1}}],[\"是实现多个接口\",{\"1\":{\"131\":1}}],[\"是其它类型\",{\"1\":{\"131\":1}}],[\"是类操作的步骤\",{\"1\":{\"131\":1}}],[\"是描述对象的行为和状态的集合\",{\"1\":{\"131\":1}}],[\"是\",{\"1\":{\"131\":2,\"272\":1}}],[\"是微软开发的一款开源编程语言\",{\"1\":{\"131\":1}}],[\"是需要解构的对象\",{\"1\":{\"89\":1}}],[\"是构成我们网页的最基本部分\",{\"1\":{\"86\":1}}],[\"是指\",{\"1\":{\"32\":1}}],[\"是浏览器最核心也是最基本的安全功能\",{\"1\":{\"32\":1}}],[\"是一种能够将我们的组件html结构移动到指定位置的技术\",{\"1\":{\"224\":1}}],[\"是一种约定\",{\"1\":{\"32\":1}}],[\"是一个较新的框架\",{\"1\":{\"101\":1}}],[\"是一个数组\",{\"1\":{\"9\":1}}],[\"是一个枚举类\",{\"0\":{\"9\":1}}],[\"是由浏览器同源策略限制的一种场景\",{\"1\":{\"32\":1}}],[\"库提供了深拷贝的功能\",{\"1\":{\"26\":1}}],[\"正是祸不单行的日子\",{\"1\":{\"297\":1}}],[\"正常说组件标签书写\",{\"1\":{\"234\":1}}],[\"正在工作\",{\"1\":{\"131\":1}}],[\"正确写法\",{\"1\":{\"131\":1}}],[\"正则表达式\",{\"1\":{\"26\":1}}],[\"正方形\",{\"1\":{\"8\":1}}],[\"这时我看见他的背影\",{\"1\":{\"297\":1}}],[\"这种方式使得vite的冷启动速度极快\",{\"1\":{\"257\":1}}],[\"这种方式使得模板更符合直觉和设计需求\",{\"1\":{\"134\":1}}],[\"这种方式在项目规模增大时\",{\"1\":{\"257\":1}}],[\"这种方式不再需要使用this\",{\"1\":{\"250\":1}}],[\"这种新的api设\",{\"1\":{\"249\":1}}],[\"这类原生dom事件\",{\"1\":{\"233\":1}}],[\"这减少了不必要的dom操作\",{\"1\":{\"136\":1}}],[\"这有助于提升应用的性能和响应速度\",{\"1\":{\"135\":1}}],[\"这对于大型应用或需要频繁更新dom的应用来说尤为重要\",{\"1\":{\"135\":1}}],[\"这在某些场景下会导致模板结构复杂且不直观\",{\"1\":{\"133\":1}}],[\"这是一个可以用于临时读取而不引起代理访问\",{\"1\":{\"221\":1}}],[\"这是一个抽象的节点\",{\"1\":{\"132\":1}}],[\"这是定义组件逻辑的主要方式\",{\"1\":{\"83\":1}}],[\"这一变化不仅简化了模板结构\",{\"1\":{\"137\":1}}],[\"这一改进不仅解决了\",{\"1\":{\"132\":1}}],[\"这一说\",{\"1\":{\"75\":1}}],[\"这两种实现的具体使用\",{\"1\":{\"131\":1}}],[\"这些日子\",{\"1\":{\"297\":1}}],[\"这些特定的函数统称为\",{\"1\":{\"177\":1}}],[\"这些类型用于描述对象\",{\"1\":{\"109\":1}}],[\"这些是\",{\"1\":{\"108\":1}}],[\"这使得属性的访问变得更快\",{\"1\":{\"216\":1}}],[\"这使得组件可以返回多个顶级节点\",{\"1\":{\"136\":1}}],[\"这使得它在性能上更具优势\",{\"1\":{\"101\":1}}],[\"这使得代码更加扁平化和易于维护\",{\"1\":{\"101\":1}}],[\"这意味着你可以在\",{\"1\":{\"290\":1}}],[\"这意味着可以减少不必要的dom层级\",{\"1\":{\"135\":1}}],[\"这意味着他支持所有的\",{\"1\":{\"131\":1}}],[\"这意味着在pinia中\",{\"1\":{\"101\":1}}],[\"这意味着它不支持某些旧的浏览器\",{\"1\":{\"80\":1}}],[\"这意味着它可能不支持某些旧版浏览器\",{\"1\":{\"78\":1}}],[\"这与vue的数据劫持机制有所不同\",{\"1\":{\"80\":1}}],[\"这个语法糖\",{\"1\":{\"161\":1}}],[\"这个是自动会生成的\",{\"1\":{\"75\":1}}],[\"这个方法是最好的一个方法来检测所有的数据类型\",{\"1\":{\"74\":1}}],[\"这个方法主要是用来判断一些引用数据类型\",{\"1\":{\"73\":1}}],[\"这个方法\",{\"1\":{\"73\":1}}],[\"这个方法还是比较常用的\",{\"1\":{\"72\":1}}],[\"这个方法有一些限制\",{\"1\":{\"26\":1}}],[\"这个方法将对象转换为json\",{\"1\":{\"26\":1}}],[\"这样会导致代码不够简洁\",{\"1\":{\"134\":1}}],[\"这样会大大提升代码的可阅读性\",{\"1\":{\"131\":1}}],[\"这样的好处是\",{\"1\":{\"131\":1}}],[\"这样就要用到implements\",{\"1\":{\"131\":2}}],[\"这样就可能会导致object的tostring执行不到\",{\"1\":{\"74\":1}}],[\"这样写\",{\"1\":{\"89\":1}}],[\"这样可以创建一个完全独立的副本\",{\"1\":{\"26\":1}}],[\"这里需要特别说明一下\",{\"1\":{\"72\":1}}],[\"这里跨域是广义上的\",{\"1\":{\"32\":1}}],[\"递归函数或借助第三方库\",{\"1\":{\"26\":1}}],[\"相当于给组件child传递一个props\",{\"1\":{\"236\":1}}],[\"相当于组件中的\",{\"1\":{\"195\":1}}],[\"相比vuex具有更好的性能\",{\"1\":{\"101\":1}}],[\"相信写java的童鞋并不陌生\",{\"1\":{\"73\":1}}],[\"相同权重下\",{\"1\":{\"68\":1}}],[\"相同权重的比较原则\",{\"1\":{\"62\":1}}],[\"相同的属性\",{\"1\":{\"26\":1}}],[\"相邻兄弟选择器\",{\"0\":{\"44\":1}}],[\"相等\",{\"1\":{\"9\":1}}],[\"对所有深层的对象不会做任何处理\",{\"1\":{\"216\":1}}],[\"对路由的理解\",{\"0\":{\"179\":1}}],[\"对比\",{\"0\":{\"165\":1}}],[\"对比vue2的局限性\",{\"0\":{\"142\":1}}],[\"对于\",{\"1\":{\"289\":1}}],[\"对于大型项目\",{\"1\":{\"259\":1}}],[\"对于自定义事件\",{\"1\":{\"204\":1}}],[\"对于原生事件\",{\"1\":{\"204\":1}}],[\"对于let\",{\"1\":{\"162\":1}}],[\"对于对象\",{\"1\":{\"72\":1}}],[\"对\",{\"1\":{\"152\":1,\"274\":1}}],[\"对应的\",{\"1\":{\"131\":1}}],[\"对象内部的嵌套属性仍然是可变的\",{\"1\":{\"219\":1}}],[\"对象内部的嵌套属性则不会变成响应式的\",{\"1\":{\"215\":1}}],[\"对象的所有嵌套属性都将变为只读\",{\"1\":{\"218\":1}}],[\"对象的顶层属性是响应式的\",{\"1\":{\"215\":1}}],[\"对象的解构赋值\",{\"1\":{\"89\":2}}],[\"对象地址值变化了\",{\"1\":{\"172\":1}}],[\"对象中的内容\",{\"1\":{\"158\":1}}],[\"对象冒充继承\",{\"1\":{\"131\":1}}],[\"对象继承\",{\"1\":{\"131\":1}}],[\"对象是类的实例\",{\"1\":{\"131\":1}}],[\"对象类型数据\",{\"1\":{\"165\":2}}],[\"对象类型的响应式数据\",{\"0\":{\"163\":1,\"164\":1}}],[\"对象类型\",{\"0\":{\"109\":1,\"113\":1},\"1\":{\"125\":1,\"164\":1,\"170\":3,\"171\":3,\"172\":5}}],[\"对象数组\",{\"1\":{\"89\":1}}],[\"对象不能有重名的属性\",{\"1\":{\"89\":1}}],[\"对象\",{\"1\":{\"86\":1,\"89\":2,\"131\":1}}],[\"对象克隆或需要对数据进行独立操作而不影响原始数据的场景中\",{\"1\":{\"25\":1}}],[\"对点进行鼠标监听事件\",{\"1\":{\"9\":1}}],[\"例如使用mockjs时\",{\"1\":{\"222\":1}}],[\"例如改成abc\",{\"1\":{\"204\":2}}],[\"例如它不能处理函数\",{\"1\":{\"26\":1}}],[\"例如\",{\"1\":{\"25\":2,\"26\":1,\"134\":1}}],[\"彻底消除共享依赖\",{\"1\":{\"23\":1}}],[\"‌vite‌\",{\"1\":{\"257\":1,\"258\":1,\"259\":1}}],[\"‌vue3\",{\"1\":{\"256\":1}}],[\"‌vue3使用proxy的主要原因是为了提升性能\",{\"1\":{\"141\":1}}],[\"‌vue\",{\"1\":{\"132\":1}}],[\"‌webpack‌\",{\"1\":{\"257\":1,\"258\":1}}],[\"‌类型支持‌\",{\"1\":{\"250\":1}}],[\"‌类型推断支持‌\",{\"1\":{\"141\":1}}],[\"‌逻辑清晰‌\",{\"1\":{\"250\":1}}],[\"‌模块化‌\",{\"1\":{\"250\":1}}],[\"‌嵌套对象处理\",{\"1\":{\"142\":1}}],[\"‌嵌套对象处理‌\",{\"1\":{\"141\":1}}],[\"‌数组操作‌\",{\"1\":{\"142\":1}}],[\"‌数组操作优化‌\",{\"1\":{\"141\":1}}],[\"‌动态属性监听‌\",{\"1\":{\"142\":1}}],[\"‌动态属性支持‌\",{\"1\":{\"141\":1}}],[\"‌统一拦截逻辑‌\",{\"1\":{\"141\":1}}],[\"‌代码简化与维护性‌\",{\"1\":{\"141\":1}}],[\"‌全面拦截能力‌\",{\"1\":{\"141\":1}}],[\"‌功能增强‌\",{\"1\":{\"141\":1}}],[\"‌性能提升‌\",{\"1\":{\"141\":1}}],[\"‌分层对比算法‌\",{\"1\":{\"133\":1}}],[\"‌fragment\",{\"1\":{\"133\":1}}],[\"‌虚拟\",{\"0\":{\"133\":1}}],[\"‌调用store‌\",{\"1\":{\"100\":1}}],[\"‌组件中使用\",{\"1\":{\"100\":1}}],[\"‌定义store‌\",{\"1\":{\"100\":1}}],[\"‌安装‌\",{\"1\":{\"100\":1}}],[\"‌安装与基础使用\",{\"0\":{\"100\":1}}],[\"‌主要优势‌\",{\"1\":{\"99\":1}}],[\"‌state‌\",{\"1\":{\"99\":1}}],[\"‌核心概念与优势\",{\"0\":{\"99\":1}}],[\"‌\",{\"1\":{\"98\":1,\"141\":2,\"249\":1,\"259\":1}}],[\"‌pinia是vue\",{\"1\":{\"98\":1}}],[\"‌‌‌actions‌\",{\"1\":{\"99\":1}}],[\"‌‌‌getters‌\",{\"1\":{\"99\":1}}],[\"‌‌‌‌\",{\"1\":{\"22\":1}}],[\"‌‌\",{\"1\":{\"23\":1,\"99\":3,\"133\":1,\"141\":6}}],[\"‌ci\",{\"0\":{\"12\":1}}],[\"内部其实也是调用了reactive函数\",{\"1\":{\"164\":1}}],[\"内存减少`54\",{\"1\":{\"147\":1}}],[\"内存独立性\",{\"0\":{\"22\":1}}],[\"内容001`\",{\"1\":{\"188\":1}}],[\"内容\",{\"1\":{\"132\":1,\"273\":1}}],[\"内所有\",{\"1\":{\"42\":1}}],[\"内置金丝雀分析\",{\"1\":{\"18\":1}}],[\"内置金丝雀\",{\"1\":{\"14\":1}}],[\"内置容器注册表\",{\"1\":{\"14\":1}}],[\"新闻数据在news组件中\",{\"1\":{\"212\":1}}],[\"新闻001\",{\"1\":{\"188\":1}}],[\"新建文件\",{\"1\":{\"203\":1}}],[\"新的生命周期钩子\",{\"1\":{\"150\":1}}],[\"新的内置组件\",{\"1\":{\"150\":1}}],[\"新的特性\",{\"0\":{\"150\":1}}],[\"新的\",{\"1\":{\"133\":1}}],[\"新旧对象内存完全隔离\",{\"1\":{\"22\":1}}],[\"新旧对象共享内存\",{\"1\":{\"22\":1}}],[\"新旧对象共享同一内存空间\",{\"1\":{\"21\":1}}],[\"新兴趋势工具\",{\"0\":{\"17\":1}}],[\"深青布棉袍\",{\"1\":{\"297\":1}}],[\"深层次\",{\"1\":{\"163\":1}}],[\"深拷贝可以使用json\",{\"1\":{\"26\":1}}],[\"深拷贝是更好的选择\",{\"1\":{\"25\":1}}],[\"深拷贝需要递归处理所有嵌套对象\",{\"1\":{\"24\":1}}],[\"深拷贝通过逐层复制指针指向的实际数据\",{\"1\":{\"23\":1}}],[\"深拷贝\",{\"1\":{\"22\":1,\"25\":1}}],[\"深拷贝则递归复制所有层级数据\",{\"1\":{\"21\":1}}],[\"深拷贝独立内存\",{\"1\":{\"21\":1}}],[\"深拷贝与浅拷贝的核心区别在于内存管理方式‌\",{\"1\":{\"21\":1}}],[\"深拷贝与浅拷贝\",{\"0\":{\"21\":1}}],[\"深度github集成\",{\"1\":{\"15\":1}}],[\"典型工作流\",{\"1\":{\"19\":1}}],[\"典型用途\",{\"1\":{\"13\":1}}],[\"据2023\",{\"1\":{\"18\":1}}],[\"在启动vue3项目\",{\"1\":{\"301\":1}}],[\"在晶莹的泪光中\",{\"1\":{\"297\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"264\":1}}],[\"在双标签内部书写结构传递给子组件\",{\"1\":{\"241\":1}}],[\"在子组件内部的模板中书写slot全局组件标签\",{\"1\":{\"241\":1}}],[\"在父组件内部使用的时候\",{\"1\":{\"241\":1}}],[\"在父组件内部使用一个子组件my\",{\"1\":{\"237\":1}}],[\"在父组件内部提供结构\",{\"1\":{\"241\":1}}],[\"在父组件挂载完毕获取组件实例\",{\"1\":{\"238\":1}}],[\"在父组件中\",{\"1\":{\"202\":1}}],[\"在event2子组件内部触发这个自定义事件\",{\"1\":{\"234\":1}}],[\"在同一个元素身上使用时的优先级发生了变化\",{\"1\":{\"227\":1}}],[\"在需要将响应式对象传递给非\",{\"1\":{\"221\":1}}],[\"在开发模式下\",{\"1\":{\"218\":1}}],[\"在开头\",{\"1\":{\"131\":1}}],[\"在后代组件中通过inject配置来声明接收数据\",{\"1\":{\"207\":1}}],[\"在祖先组件中通过provide配置向后代组件提供数据\",{\"1\":{\"207\":1}}],[\"在合适的时候触发事件\",{\"1\":{\"203\":1}}],[\"在此过程中vue会在合适的时机\",{\"1\":{\"177\":1}}],[\"在此分支识别为字符串\",{\"1\":{\"119\":1}}],[\"在模板中均可以直接使用\",{\"1\":{\"159\":1}}],[\"在项目最外层\",{\"1\":{\"152\":1}}],[\"在项目中是比较常用的\",{\"1\":{\"234\":1}}],[\"在项目中\",{\"1\":{\"131\":1}}],[\"在patch时\",{\"1\":{\"132\":1}}],[\"在js中为我们提供了三个包装类\",{\"1\":{\"131\":1}}],[\"在js中声明的变量在底层的表现形式都是二进制\",{\"1\":{\"72\":1}}],[\"在面向对象的编程中\",{\"1\":{\"131\":1}}],[\"在元素类型上面加\",{\"1\":{\"131\":1}}],[\"在vue2中可以根据vm与vc关系推出全局事件总线\",{\"1\":{\"235\":1}}],[\"在vue3框架click\",{\"1\":{\"233\":1}}],[\"在vue3中可以利用useattrs方法获取组件的属性与事件\",{\"1\":{\"237\":1}}],[\"在vue3中一个组件可以通过使用多个v\",{\"1\":{\"236\":1}}],[\"在vue3中我们可以通过defineprops获取父组件传递的数据\",{\"1\":{\"231\":1}}],[\"在vue3中\",{\"1\":{\"204\":1}}],[\"在vue框架中事件分为两种\",{\"1\":{\"232\":1}}],[\"在vue\",{\"1\":{\"131\":1,\"250\":1}}],[\"在vscode\",{\"1\":{\"131\":1}}],[\"在类的声明中通过关键字extends来创建一个类的子类\",{\"1\":{\"131\":1}}],[\"在类外部无法访问\",{\"1\":{\"131\":1}}],[\"在类里面可以访问\",{\"1\":{\"131\":1}}],[\"在类里面\",{\"1\":{\"131\":2}}],[\"在类型系统中实现三目运算\",{\"1\":{\"128\":1}}],[\"在类中定义属性类型\",{\"1\":{\"116\":1}}],[\"在预处理的时候\",{\"1\":{\"89\":1}}],[\"在全局或者函数的第一条语句\",{\"1\":{\"89\":1}}],[\"在组件卸载\",{\"1\":{\"83\":2}}],[\"在组件的dom被更新后调用\",{\"1\":{\"83\":1}}],[\"在组件的dom被更新之前调用\",{\"1\":{\"83\":1}}],[\"在组件的元素被挂载到dom后调用\",{\"1\":{\"83\":1}}],[\"在组件的元素被挂载到dom之前调用\",{\"1\":{\"83\":1}}],[\"在组件渲染到界面时调用\",{\"1\":{\"82\":1}}],[\"在setup\",{\"1\":{\"83\":1}}],[\"在每个\",{\"1\":{\"82\":1}}],[\"在ngoninit之前调用\",{\"1\":{\"82\":1}}],[\"在dom中被移除前销毁\",{\"1\":{\"82\":1}}],[\"在绑定的属性发生变化时检测\",{\"1\":{\"82\":1}}],[\"在其对应对象的原型下面\",{\"1\":{\"75\":1}}],[\"在这个判断过程中会一直遍历左边变量的原型链\",{\"1\":{\"73\":1}}],[\"在这个例子中\",{\"1\":{\"26\":1,\"250\":1}}],[\"在左边变量的原型链上即可\",{\"1\":{\"73\":1}}],[\"在\",{\"1\":{\"61\":1,\"133\":1,\"134\":1}}],[\"在数据持久化\",{\"1\":{\"25\":1}}],[\"在函数参数传递中\",{\"1\":{\"25\":1}}],[\"在k8s领域快速增长\",{\"1\":{\"18\":1}}],[\"在地图中\",{\"1\":{\"9\":1}}],[\"团队规模\",{\"1\":{\"18\":1}}],[\"选项卡\",{\"0\":{\"276\":1}}],[\"选项应始终被声明为一个函数\",{\"1\":{\"150\":1}}],[\"选中的文本\",{\"1\":{\"52\":1}}],[\"选择编辑语言为\",{\"1\":{\"131\":1}}],[\"选择哪个取决于你的项目需求和个人偏好\",{\"1\":{\"101\":1}}],[\"选择表格中列有\",{\"1\":{\"46\":1}}],[\"选择紧跟在\",{\"1\":{\"44\":1}}],[\"选择\",{\"1\":{\"38\":1,\"39\":1,\"42\":1,\"45\":1}}],[\"选择所有元素\",{\"1\":{\"40\":1}}],[\"选择所有\",{\"1\":{\"37\":1}}],[\"选择器权重\",{\"1\":{\"68\":1}}],[\"选择器权重决定优先级\",{\"1\":{\"62\":1}}],[\"选择器逻辑组合\",{\"0\":{\"59\":1}}],[\"选择器类型\",{\"1\":{\"53\":1}}],[\"选择器优先级计算\",{\"0\":{\"53\":1}}],[\"选择器\",{\"0\":{\"39\":1},\"1\":{\"53\":1,\"60\":1,\"68\":1}}],[\"选择器是定义样式规则的关键引擎\",{\"0\":{\"35\":1}}],[\"选择器详解\",{\"0\":{\"34\":1}}],[\"选择建议\",{\"1\":{\"13\":1}}],[\"选型参考维度\",{\"0\":{\"18\":1}}],[\"xyz=\",{\"1\":{\"204\":1}}],[\"xyz事件被触发\",{\"1\":{\"203\":1}}],[\"xyz\",{\"1\":{\"203\":2}}],[\"xiang\",{\"1\":{\"185\":1,\"187\":1,\"188\":1,\"189\":1}}],[\"xinwen\",{\"1\":{\"184\":1,\"185\":1}}],[\"x中的mixin\",{\"1\":{\"178\":1}}],[\"x=x\",{\"1\":{\"89\":1}}],[\"x=0\",{\"1\":{\"89\":1}}],[\"x+y\",{\"1\":{\"89\":1}}],[\"xxx=\",{\"1\":{\"234\":2}}],[\"xxxxx\",{\"1\":{\"131\":1}}],[\"xxx\",{\"1\":{\"74\":2,\"152\":1,\"162\":2,\"234\":3}}],[\"x\",{\"1\":{\"17\":1,\"32\":1,\"89\":6,\"116\":4,\"151\":3,\"205\":3,\"207\":1}}],[\"watch对比watcheffect\",{\"1\":{\"174\":1}}],[\"watcheffect\",{\"0\":{\"174\":1},\"1\":{\"174\":3}}],[\"watch的第三个参数是\",{\"1\":{\"170\":1}}],[\"watch的第二个参数是\",{\"1\":{\"170\":1}}],[\"watch的第一个参数是\",{\"1\":{\"170\":1}}],[\"watch\",{\"0\":{\"168\":1},\"1\":{\"169\":2,\"170\":2,\"171\":3,\"172\":5,\"173\":2,\"174\":3}}],[\"want\",{\"1\":{\"151\":1}}],[\"warning\",{\"1\":{\"38\":2}}],[\"work=function\",{\"1\":{\"131\":1}}],[\"world\",{\"1\":{\"131\":3}}],[\"woodpecker\",{\"1\":{\"17\":1}}],[\"w\",{\"1\":{\"89\":1}}],[\"while\",{\"1\":{\"73\":1}}],[\"where\",{\"1\":{\"60\":1}}],[\"wen8ujehgdqpmiqmjxf1ww\",{\"1\":{\"262\":1}}],[\"weixin\",{\"1\":{\"262\":1}}],[\"weight\",{\"1\":{\"66\":2}}],[\"webpack‌\",{\"1\":{\"259\":1}}],[\"webpack的插件生态庞大\",{\"1\":{\"258\":1}}],[\"webpack与vite的区别\",{\"0\":{\"256\":1}}],[\"webpack\",{\"0\":{\"254\":1},\"1\":{\"256\":1}}],[\"webpack打包优化方案\",{\"0\":{\"252\":1}}],[\"webpack构建\",{\"1\":{\"152\":1}}],[\"web3doc\",{\"1\":{\"240\":1}}],[\"web\",{\"1\":{\"131\":6}}],[\"websocket协议跨域\",{\"1\":{\"32\":1}}],[\"www\",{\"1\":{\"32\":11,\"235\":1,\"262\":1,\"263\":1}}],[\"windows\",{\"1\":{\"89\":1}}],[\"window\",{\"1\":{\"32\":1}}],[\"will\",{\"1\":{\"9\":2,\"287\":1}}],[\"withdefaults\",{\"1\":{\"176\":1}}],[\"with\",{\"1\":{\"9\":1,\"13\":1,\"151\":1}}],[\"width\",{\"1\":{\"8\":2,\"59\":1}}],[\"智能化cd平台\",{\"1\":{\"17\":1}}],[\"智能化的持续交付平台\",{\"1\":{\"13\":1}}],[\"无返回值\",{\"1\":{\"131\":1}}],[\"无法监视地址值\",{\"1\":{\"171\":1}}],[\"无法继承原型链上的方法\",{\"1\":{\"131\":1}}],[\"无法解析\",{\"1\":{\"131\":1}}],[\"无法读取\",{\"1\":{\"32\":1}}],[\"无需打包\",{\"1\":{\"257\":1}}],[\"无需手动调用vue\",{\"1\":{\"141\":1}}],[\"无需额外的包裹元素\",{\"1\":{\"134\":1}}],[\"无需强制合并层级\",{\"1\":{\"133\":1}}],[\"无需模块嵌套\",{\"1\":{\"99\":1}}],[\"无需mutations\",{\"1\":{\"99\":1}}],[\"无论是基本数据类型还是引用数据类型\",{\"1\":{\"74\":1}}],[\"无服务应用部署框架\",{\"1\":{\"16\":1}}],[\"无缝衔接aws服务\",{\"1\":{\"15\":1}}],[\"功能类似\",{\"1\":{\"203\":1}}],[\"功能和模块化\",{\"1\":{\"101\":1}}],[\"功能\",{\"1\":{\"101\":1}}],[\"功能亮点\",{\"1\":{\"16\":1}}],[\"功能必须等于\",{\"1\":{\"9\":1}}],[\"专用工具\",{\"0\":{\"16\":1}}],[\"专为kubernetes设计的gitops持续交付工具\",{\"1\":{\"13\":1}}],[\"高度灵活但配置复杂\",{\"1\":{\"258\":1}}],[\"高性能云托管\",{\"1\":{\"15\":1}}],[\"高级\",{\"0\":{\"126\":1}}],[\"高级技巧与实战应用\",{\"0\":{\"54\":1}}],[\"高级发布\",{\"1\":{\"18\":1}}],[\"高级安全扫描\",{\"1\":{\"15\":1}}],[\"高级部署策略\",{\"1\":{\"13\":1}}],[\"端到端devsecops平台\",{\"1\":{\"15\":1}}],[\"市场共享actions库\",{\"1\":{\"15\":1}}],[\"市场提供丰富的预置action\",{\"1\":{\"13\":1}}],[\"产品\",{\"1\":{\"15\":1}}],[\"服务商\",{\"1\":{\"15\":1}}],[\"容器化ci\",{\"1\":{\"14\":1}}],[\"单一配置文件\",{\"1\":{\"14\":1}}],[\"单一平台覆盖从代码到生产的全流程\",{\"1\":{\"13\":1}}],[\"企业级复杂部署流程\",{\"1\":{\"14\":1}}],[\"企业级安全和管理功能\",{\"1\":{\"13\":1}}],[\"工具\",{\"1\":{\"14\":1,\"16\":1}}],[\"工具列表涵盖开源和商业解决方案\",{\"1\":{\"13\":1}}],[\"||\",{\"0\":{\"46\":1},\"1\":{\"46\":1,\"174\":3,\"200\":1}}],[\"|\",{\"1\":{\"13\":1,\"119\":1,\"121\":2,\"125\":1}}],[\"$$\",{\"1\":{\"279\":2}}],[\"$index\",{\"1\":{\"241\":1}}],[\"$index=\",{\"1\":{\"241\":1}}],[\"$once\",{\"1\":{\"227\":1}}],[\"$off\",{\"1\":{\"227\":1}}],[\"$parent可以获取某一个组件的父组件实例vc\",{\"1\":{\"238\":1}}],[\"$parent用于\",{\"1\":{\"206\":1}}],[\"$parent\",{\"0\":{\"206\":1},\"1\":{\"206\":1,\"238\":1}}],[\"$patch\",{\"1\":{\"196\":1}}],[\"$row\",{\"1\":{\"241\":3}}],[\"$row=\",{\"1\":{\"241\":1}}],[\"$route和$router变成了两个hooks\",{\"1\":{\"191\":1}}],[\"$refs用于\",{\"1\":{\"206\":1}}],[\"$refs\",{\"0\":{\"206\":1},\"1\":{\"206\":1}}],[\"$attrs会自动排除props中声明的属性\",{\"1\":{\"205\":1}}],[\"$attrs是一个对象\",{\"1\":{\"205\":1}}],[\"$attrs用于实现当前组件的父组件\",{\"1\":{\"205\":1}}],[\"$attrs\",{\"0\":{\"205\":1},\"1\":{\"205\":1,\"237\":1}}],[\"$emit\",{\"1\":{\"202\":1,\"234\":3}}],[\"$event就是触发事件时\",{\"1\":{\"204\":1}}],[\"$event就是事件对象====>能\",{\"1\":{\"204\":1}}],[\"$event\",{\"1\":{\"202\":2,\"204\":5,\"233\":1}}],[\"$children被砍掉了\",{\"1\":{\"200\":1}}],[\"$subscribe\",{\"0\":{\"199\":1},\"1\":{\"199\":2}}],[\"$\",{\"1\":{\"13\":3,\"89\":2,\"131\":1}}],[\"$type\",{\"1\":{\"9\":9}}],[\"商业云服务\",{\"0\":{\"15\":1}}],[\"商业方案\",{\"1\":{\"13\":1}}],[\"商业工具​\",{\"1\":{\"13\":1}}],[\"自然要发之于外\",{\"1\":{\"297\":1}}],[\"自然情不能自已\",{\"1\":{\"297\":1}}],[\"自己慢慢爬下\",{\"1\":{\"297\":1}}],[\"自己动手编写一个app组件\",{\"1\":{\"152\":1}}],[\"自定义标签上\",{\"1\":{\"233\":1}}],[\"自定义事件可以实现子组件给父组件传递数据\",{\"1\":{\"232\":1,\"234\":1}}],[\"自定义事件常用于\",{\"1\":{\"202\":1}}],[\"自定义事件\",{\"0\":{\"202\":1},\"1\":{\"202\":2,\"230\":2}}],[\"自定义hook的优势\",{\"1\":{\"178\":1}}],[\"自定义hook\",{\"0\":{\"178\":1}}],[\"自定义能力强\",{\"1\":{\"18\":1}}],[\"自建jenkins\",{\"1\":{\"13\":1}}],[\"自动捕获新增\",{\"1\":{\"142\":1}}],[\"自动形成可解析文件\",{\"1\":{\"131\":1}}],[\"自动性\",{\"1\":{\"78\":1}}],[\"自动生成\",{\"1\":{\"75\":1}}],[\"自动验证+监控回滚\",{\"1\":{\"19\":1}}],[\"自动验证\",{\"1\":{\"17\":1}}],[\"自动同步集群状态\",{\"1\":{\"14\":1}}],[\"自动同步git仓库与k8s集群状态\",{\"1\":{\"13\":1}}],[\"自动回滚\",{\"1\":{\"13\":1}}],[\"自动部署到kubernetes\",{\"1\":{\"13\":1}}],[\"大约大去之期不远矣\",{\"1\":{\"297\":1}}],[\"大约只有1kb\",{\"1\":{\"101\":1}}],[\"大众\",{\"1\":{\"172\":1,\"173\":1}}],[\"大帅老猿\",{\"1\":{\"156\":1}}],[\"大数据量下性能较低\",{\"1\":{\"142\":1}}],[\"大类选择器详细解析\",{\"0\":{\"35\":1}}],[\"大型企业\",{\"1\":{\"18\":1}}],[\"大企业\",{\"1\":{\"13\":1}}],[\"大于或等于\",{\"1\":{\"9\":1}}],[\"大于\",{\"1\":{\"9\":1}}],[\"小猪佩奇\",{\"1\":{\"176\":1}}],[\"小号\",{\"1\":{\"26\":4}}],[\"小团队\",{\"1\":{\"13\":1,\"18\":1}}],[\"小于或等于\",{\"1\":{\"9\":1}}],[\"小于\",{\"1\":{\"9\":1}}],[\"多个无关的类可以实现同一个接口\",{\"1\":{\"131\":1}}],[\"多类选择\",{\"1\":{\"38\":1}}],[\"多云部署\",{\"1\":{\"18\":1}}],[\"多云环境\",{\"1\":{\"13\":1}}],[\"多语言支持\",{\"1\":{\"15\":1}}],[\"多集群管理\",{\"1\":{\"15\":1}}],[\"多边形\",{\"1\":{\"9\":7}}],[\"优点\",{\"1\":{\"182\":2}}],[\"优化内存占用\",{\"1\":{\"135\":1}}],[\"优先使用更具体的选择器\",{\"1\":{\"69\":1}}],[\"优先级规则\",{\"0\":{\"62\":1}}],[\"优先考虑argo\",{\"1\":{\"13\":1}}],[\"优势与影响\",{\"0\":{\"135\":1}}],[\"优势\",{\"1\":{\"13\":1}}],[\"现有数组来创建一个新数组\",{\"1\":{\"131\":1}}],[\"现有过滤器\",{\"1\":{\"9\":1}}],[\"现代伪类应用\",{\"0\":{\"58\":1}}],[\"现代cd工具链组合\",{\"0\":{\"19\":1}}],[\"现逐渐被取代\",{\"1\":{\"13\":1}}],[\"早期流行的saas\",{\"1\":{\"13\":1}}],[\"适合需要深度定制或兼容性要求高的项目\",{\"1\":{\"259\":1}}],[\"适合深度定制化项目‌\",{\"1\":{\"258\":1}}],[\"适合频繁开发的迭代‌\",{\"1\":{\"257\":1}}],[\"适合大型项目和需要复杂状态管理的场景\",{\"1\":{\"101\":1}}],[\"适合简单项目\",{\"1\":{\"13\":1}}],[\"适用于只需保护对象顶层属性的场景\",{\"1\":{\"219\":1}}],[\"适用于需要创建一个完全独立的副本\",{\"1\":{\"25\":1}}],[\"适用于需要快速创建一个新对象或数组\",{\"1\":{\"25\":1}}],[\"适用\",{\"1\":{\"13\":1}}],[\"适用场景\",{\"0\":{\"259\":1},\"1\":{\"13\":1,\"14\":1}}],[\"混合环境\",{\"1\":{\"13\":1}}],[\"微软提供的全套应用生命周期管理\",{\"1\":{\"13\":1}}],[\"场景\",{\"1\":{\"13\":1}}],[\"低代码部署\",{\"1\":{\"13\":1}}],[\"核心组成\",{\"1\":{\"99\":1}}],[\"核心功能\",{\"1\":{\"13\":1}}],[\"核心优势分析‌\",{\"1\":{\"141\":1}}],[\"核心优势\",{\"1\":{\"13\":1,\"15\":1}}],[\"强制最高优先级\",{\"1\":{\"69\":1}}],[\"强大插件生态\",{\"1\":{\"14\":1}}],[\"强大的部署策略\",{\"1\":{\"13\":1}}],[\"强调ai驱动\",{\"1\":{\"13\":1}}],[\"丰富的orbs共享配置库\",{\"1\":{\"13\":1}}],[\"快速并行构建\",{\"1\":{\"13\":1}}],[\"云原生\",{\"1\":{\"18\":1}}],[\"云原生项目\",{\"1\":{\"13\":1}}],[\"云原生应用和容器化部署\",{\"1\":{\"13\":1}}],[\"云托管ci\",{\"1\":{\"13\":1}}],[\"云服务器等\",{\"1\":{\"13\":1}}],[\"与绑定一个自定义事件update\",{\"1\":{\"236\":1}}],[\"与自定义事件\",{\"1\":{\"236\":1}}],[\"与消息订阅与发布\",{\"1\":{\"203\":1}}],[\"与extends的不同\",{\"1\":{\"131\":1}}],[\"与vue\",{\"1\":{\"101\":1}}],[\"与vuex相比\",{\"1\":{\"98\":1}}],[\"与\",{\"0\":{\"154\":1,\"160\":1,\"166\":1,\"213\":1,\"217\":1,\"220\":1},\"1\":{\"68\":1,\"152\":1,\"219\":1,\"225\":1,\"250\":1}}],[\"与codecommit\",{\"1\":{\"15\":1}}],[\"与gitlab仓库深度集成\",{\"1\":{\"14\":1}}],[\"与gitlab仓库无缝集成\",{\"1\":{\"13\":1}}],[\"与argo\",{\"1\":{\"13\":1}}],[\"与第三方部署工具无缝衔接\",{\"1\":{\"13\":1}}],[\"集中式状态管理容器\",{\"1\":{\"230\":2}}],[\"集中定义拦截行为\",{\"1\":{\"141\":1}}],[\"集成到vue应用‌\",{\"1\":{\"100\":1}}],[\"集成需求\",{\"1\":{\"18\":1}}],[\"集成codepipeline\",{\"1\":{\"13\":1}}],[\"集成生态\",{\"1\":{\"13\":1}}],[\"集合包含\",{\"1\":{\"9\":1}}],[\"亮点\",{\"1\":{\"13\":1}}],[\"kiwi\",{\"1\":{\"131\":5}}],[\"k\",{\"1\":{\"131\":2}}],[\"kebo\",{\"1\":{\"89\":1}}],[\"keycode\",{\"1\":{\"202\":1,\"227\":1}}],[\"key=\",{\"1\":{\"163\":1,\"164\":1,\"176\":1,\"178\":1,\"185\":1,\"195\":1,\"210\":1,\"211\":1,\"212\":1,\"241\":1}}],[\"keys\",{\"1\":{\"151\":1}}],[\"keyof\",{\"1\":{\"129\":2}}],[\"key\",{\"1\":{\"9\":19,\"13\":4,\"108\":1,\"111\":2}}],[\"kubernetes原生的jenkins演进版\",{\"1\":{\"17\":1}}],[\"kubernetes原生ci\",{\"1\":{\"14\":1}}],[\"kubernetes原生gitops工具\",{\"1\":{\"14\":1}}],[\"kubernetes环境持续交付\",{\"1\":{\"14\":1}}],[\"kubernetes\",{\"1\":{\"13\":1,\"18\":1}}],[\"kubernetes等\",{\"1\":{\"13\":1}}],[\"k8s专属\",{\"1\":{\"16\":1}}],[\"k8s\",{\"1\":{\"13\":1}}],[\"部署策略复杂度\",{\"1\":{\"18\":1}}],[\"部署流程示例\",{\"1\":{\"13\":1}}],[\"部署能力\",{\"1\":{\"13\":2}}],[\"部署示例\",{\"1\":{\"13\":1}}],[\"金丝雀\",{\"1\":{\"13\":1}}],[\"n个参数即为传递给父组件的数据\",{\"1\":{\"234\":1}}],[\"npmjs\",{\"1\":{\"235\":1}}],[\"npm\",{\"1\":{\"151\":2,\"152\":1,\"161\":1,\"194\":1,\"203\":1}}],[\"ngondestroy\",{\"1\":{\"82\":1}}],[\"ngonchanges\",{\"1\":{\"82\":1}}],[\"ngafterviewchecked\",{\"1\":{\"82\":1}}],[\"ngafterviewinit\",{\"1\":{\"82\":1}}],[\"ngaftercontentchecked\",{\"1\":{\"82\":1}}],[\"ngaftercontentinit\",{\"1\":{\"82\":1}}],[\"ngdocheck\",{\"1\":{\"82\":1}}],[\"ngngoninit\",{\"1\":{\"82\":1}}],[\"ngmodel\",{\"1\":{\"78\":1}}],[\"nginx代理跨域\",{\"1\":{\"32\":1}}],[\"numb\",{\"1\":{\"131\":1}}],[\"number=20\",{\"1\":{\"131\":1}}],[\"number=1\",{\"1\":{\"131\":1}}],[\"number=\",{\"1\":{\"89\":1}}],[\"number\",{\"1\":{\"72\":1,\"89\":1,\"108\":2,\"110\":1,\"111\":1,\"113\":2,\"114\":3,\"115\":1,\"116\":4,\"119\":1,\"125\":2,\"127\":2,\"131\":17,\"176\":1,\"196\":2,\"198\":1,\"207\":2,\"223\":2,\"231\":1}}],[\"num\",{\"1\":{\"131\":3}}],[\"nums\",{\"1\":{\"110\":1}}],[\"null\",{\"1\":{\"72\":3,\"73\":1,\"75\":2,\"108\":5,\"131\":7}}],[\"nanoid\",{\"1\":{\"200\":3}}],[\"nav>\",{\"1\":{\"185\":1}}],[\"navigate\",{\"1\":{\"180\":1}}],[\"nav\",{\"1\":{\"53\":1}}],[\"name变化了\",{\"1\":{\"172\":1}}],[\"name和age是一个refimpl的实例对象\",{\"1\":{\"162\":1}}],[\"name不是响应式的\",{\"1\":{\"162\":2}}],[\"name+age\",{\"1\":{\"131\":1}}],[\"name=name\",{\"1\":{\"131\":2}}],[\"name=n\",{\"1\":{\"131\":1}}],[\"name=\",{\"1\":{\"131\":2,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":3,\"176\":2,\"177\":1,\"180\":1,\"195\":2,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"211\":2,\"212\":1,\"223\":1,\"241\":2}}],[\"names\",{\"1\":{\"110\":1}}],[\"name也会收到影像\",{\"1\":{\"26\":1}}],[\"name\",{\"1\":{\"13\":3,\"26\":5,\"32\":1,\"108\":1,\"113\":2,\"120\":1,\"131\":28,\"152\":2,\"153\":4,\"158\":6,\"161\":4,\"162\":8,\"163\":5,\"164\":5,\"166\":4,\"170\":4,\"171\":6,\"172\":4,\"173\":4,\"175\":3,\"176\":6,\"178\":1,\"184\":4,\"185\":5,\"187\":1,\"188\":1,\"189\":1,\"210\":1,\"211\":1,\"212\":5,\"221\":5,\"222\":4,\"245\":1,\"246\":1}}],[\"nth\",{\"1\":{\"50\":2}}],[\"node\",{\"1\":{\"303\":3}}],[\"nodejs主流框架\",{\"0\":{\"96\":1}}],[\"nodejs中间件代理跨域\",{\"1\":{\"32\":1}}],[\"no\",{\"1\":{\"152\":6}}],[\"normal\",{\"1\":{\"66\":1}}],[\"not\",{\"1\":{\"57\":1,\"59\":2,\"304\":1}}],[\"none\",{\"1\":{\"8\":2,\"9\":3}}],[\"ner\",{\"1\":{\"131\":1}}],[\"ner=document\",{\"1\":{\"131\":1}}],[\"newslist\",{\"1\":{\"185\":1}}],[\"news\",{\"1\":{\"180\":3,\"184\":3,\"185\":11,\"187\":6,\"188\":6}}],[\"newheight\",{\"1\":{\"174\":2}}],[\"newtemp\",{\"1\":{\"174\":2}}],[\"newvalue是新值\",{\"1\":{\"172\":1}}],[\"newvalue和oldvalue值相同\",{\"1\":{\"171\":1}}],[\"newvalue\",{\"1\":{\"169\":3,\"170\":4,\"171\":4,\"172\":8,\"173\":2}}],[\"new\",{\"1\":{\"123\":1,\"131\":1}}],[\"newobject\",{\"1\":{\"26\":1}}],[\"newoldobject\",{\"1\":{\"26\":1}}],[\"newoldobject=json\",{\"1\":{\"26\":1}}],[\"newoldobject=object\",{\"1\":{\"26\":1}}],[\"newoldobject=\",{\"1\":{\"26\":2}}],[\"never\",{\"0\":{\"123\":1},\"1\":{\"123\":1,\"125\":1,\"131\":3}}],[\"net\",{\"1\":{\"81\":1,\"83\":1,\"94\":1,\"262\":1}}],[\"netflix开源的持续部署平台\",{\"1\":{\"14\":1}}],[\"netflix开源的多云持续交付平台\",{\"1\":{\"13\":1}}],[\"n\",{\"1\":{\"24\":1,\"108\":1,\"131\":1,\"145\":1,\"196\":1}}],[\"支持为图片设置颜色模式和大小\",{\"1\":{\"281\":1}}],[\"支持现代工具链如typescript\",{\"1\":{\"258\":1}}],[\"支持动态属性监听\",{\"1\":{\"141\":1}}],[\"支持片段使得vue\",{\"1\":{\"135\":1}}],[\"支持插件扩展\",{\"1\":{\"99\":1}}],[\"支持vue\",{\"1\":{\"99\":1}}],[\"支持\",{\"1\":{\"60\":1,\"131\":1}}],[\"支持多云部署\",{\"1\":{\"14\":1,\"15\":1}}],[\"支持多环境管理\",{\"1\":{\"13\":1}}],[\"支持azure云服务\",{\"1\":{\"13\":1}}],[\"支持auto\",{\"1\":{\"13\":1}}],[\"支持大规模团队协作\",{\"1\":{\"13\":1}}],[\"支持云原生应用\",{\"1\":{\"13\":1}}],[\"支持pipeline即代码\",{\"1\":{\"13\":1,\"14\":1}}],[\"可是他穿过铁道\",{\"1\":{\"297\":1}}],[\"可重用的函数\",{\"1\":{\"250\":1}}],[\"可提升性能\",{\"1\":{\"216\":1}}],[\"可直接编\",{\"1\":{\"172\":1}}],[\"可直接在模板中使用\",{\"1\":{\"158\":1}}],[\"可接受两个参数\",{\"1\":{\"131\":1}}],[\"可索引和类等\",{\"1\":{\"131\":1}}],[\"可使用run\",{\"1\":{\"131\":1}}],[\"可选参数\",{\"1\":{\"131\":1}}],[\"可选属性\",{\"1\":{\"113\":1}}],[\"可处理已有的\",{\"1\":{\"131\":1}}],[\"可通过检查\",{\"1\":{\"112\":1}}],[\"可通过jenkinsfile配置流程\",{\"1\":{\"13\":1}}],[\"可用于绕过类型检查\",{\"1\":{\"112\":1}}],[\"可能需要额外的适配工作\",{\"1\":{\"101\":1}}],[\"可能会导致最后的结果不正确\",{\"1\":{\"75\":1}}],[\"可能大家还会比较奇怪\",{\"1\":{\"72\":1}}],[\"可能引发指针悬挂问题\",{\"1\":{\"23\":1}}],[\"可视化工作流\",{\"1\":{\"15\":1}}],[\"可视化流水线编辑器\",{\"1\":{\"13\":1}}],[\"可视化应用状态\",{\"1\":{\"13\":1}}],[\"可以根据文件结构将它们转换为不同的页面\",{\"1\":{\"270\":1}}],[\"可以混合使用\",{\"1\":{\"259\":1}}],[\"可以理解为\",{\"1\":{\"241\":1}}],[\"可以用\",{\"1\":{\"241\":2}}],[\"可以用函数的方式\",{\"1\":{\"156\":1}}],[\"可以替换为\",{\"1\":{\"241\":1}}],[\"可以接受父组件传递过来的属性与属性值\",{\"1\":{\"237\":1}}],[\"可以确保它们收到的是普通对象\",{\"1\":{\"221\":1}}],[\"可以认为声明过的\",{\"1\":{\"205\":1}}],[\"可以实现隔辈组件传递参数\",{\"1\":{\"239\":1}}],[\"可以实现任意组件通信\",{\"1\":{\"230\":2}}],[\"可以实现任意组件间通信\",{\"1\":{\"203\":1}}],[\"可以实现子父组件通信\",{\"1\":{\"230\":2}}],[\"可以实现父子组件\",{\"1\":{\"230\":2}}],[\"可以实现父类\",{\"1\":{\"131\":1}}],[\"可以是任意类型\",{\"1\":{\"202\":1}}],[\"可以是圆形\",{\"1\":{\"8\":1}}],[\"可以将路由参数作为props传给组件\",{\"1\":{\"189\":1}}],[\"可以简化路由跳转及传参\",{\"1\":{\"184\":1}}],[\"可以直接写\",{\"1\":{\"172\":1}}],[\"可以监视到对象内部属性a\",{\"1\":{\"172\":1}}],[\"可以让我们把setup独立出去\",{\"1\":{\"161\":1}}],[\"可以使组件更加灵活\",{\"1\":{\"134\":1}}],[\"可以使用插件mitt实现\",{\"1\":{\"235\":1}}],[\"可以使用\",{\"1\":{\"222\":1}}],[\"可以使用getters配置\",{\"1\":{\"198\":1}}],[\"可以使用object\",{\"1\":{\"165\":1}}],[\"可以使用volar插件自动添加\",{\"1\":{\"165\":1}}],[\"可以使用一系列的生命周期钩子函数\",{\"1\":{\"83\":1}}],[\"可以使用浅拷贝来避免对原始对象的意外修改\",{\"1\":{\"25\":1}}],[\"可以导出多个\",{\"1\":{\"131\":1}}],[\"可以包含数字\",{\"1\":{\"131\":1}}],[\"可以省略\",{\"1\":{\"89\":1}}],[\"可以省略括号\",{\"1\":{\"89\":1}}],[\"可以一直监听某个事件\",{\"1\":{\"9\":1}}],[\"可以有很多种写法\",{\"1\":{\"9\":1}}],[\"特别适合新项目或现代框架\",{\"1\":{\"259\":1}}],[\"特别是在需要返回多个平级元素的场景下\",{\"1\":{\"134\":1}}],[\"特殊类型\",{\"0\":{\"118\":1},\"1\":{\"125\":1}}],[\"特殊场景工具​\",{\"1\":{\"13\":1}}],[\"特色\",{\"1\":{\"13\":1}}],[\"特性\",{\"1\":{\"13\":1,\"142\":1}}],[\"特点如下\",{\"1\":{\"158\":1}}],[\"特点\",{\"1\":{\"13\":4,\"14\":1,\"168\":1,\"214\":1,\"215\":1,\"218\":1,\"219\":1}}],[\"特征\",{\"1\":{\"9\":1}}],[\"​趋势提示​\",{\"1\":{\"13\":1}}],[\"​团队规模​\",{\"1\":{\"13\":1}}],[\"​技术栈​\",{\"1\":{\"13\":1}}],[\"​项目需求​\",{\"1\":{\"13\":1}}],[\"​travis\",{\"1\":{\"13\":1}}],[\"​drone​\",{\"1\":{\"13\":1}}],[\"​flux​\",{\"1\":{\"13\":1}}],[\"​azure\",{\"1\":{\"13\":1}}],[\"​aws\",{\"1\":{\"13\":1}}],[\"​argo\",{\"1\":{\"13\":1}}],[\"​harness​\",{\"1\":{\"13\":1}}],[\"​circleci​\",{\"1\":{\"13\":1}}],[\"​​\",{\"1\":{\"13\":2}}],[\"​1\",{\"1\":{\"13\":1}}],[\"​spinnaker​\",{\"1\":{\"13\":1}}],[\"​github\",{\"1\":{\"13\":2}}],[\"​gitlab\",{\"1\":{\"13\":1}}],[\"​jenkins​\",{\"1\":{\"13\":1}}],[\"​开源工具​\",{\"1\":{\"13\":1}}],[\"以便\",{\"1\":{\"270\":1}}],[\"以及绑定两个自定义事件update\",{\"1\":{\"236\":1}}],[\"以及组合式api写法没有this\",{\"1\":{\"235\":1}}],[\"以上四张动图原创作者\",{\"1\":{\"156\":1}}],[\"以上实例定义了一个类\",{\"1\":{\"131\":1}}],[\"以确保模板结构的合理性和一致性\",{\"1\":{\"136\":1}}],[\"以确保它们在运行时能够正确执行\",{\"1\":{\"136\":1}}],[\"以前为变量赋值\",{\"1\":{\"89\":1}}],[\"以下是对vue\",{\"1\":{\"136\":1}}],[\"以下是\",{\"1\":{\"107\":1}}],[\"以下是双向数据绑定的几个关键点\",{\"1\":{\"78\":1}}],[\"以下按类别整理主流工具\",{\"1\":{\"13\":1}}],[\"以\",{\"1\":{\"47\":2}}],[\"以线为例\",{\"1\":{\"9\":1}}],[\"返回顶部按钮\",{\"1\":{\"264\":1,\"267\":1}}],[\"返回的对象不再是响应式的\",{\"1\":{\"221\":1}}],[\"返回值\",{\"1\":{\"162\":1,\"163\":1}}],[\"返回两者\",{\"1\":{\"131\":1}}],[\"返回类型不对\",{\"1\":{\"131\":1}}],[\"返回新的数组为\",{\"1\":{\"89\":1}}],[\"返回条件为true\",{\"1\":{\"89\":1}}],[\"返回加工后的值\",{\"1\":{\"89\":1}}],[\"返回格式为\",{\"1\":{\"74\":1}}],[\"返回\",{\"1\":{\"9\":1}}],[\"返回一个对象\",{\"1\":{\"158\":1}}],[\"返回一个新的数组\",{\"1\":{\"89\":1}}],[\"返回一个lnglat表示与指定的像素坐标相对应的地理坐标\",{\"1\":{\"9\":1}}],[\"返回一个boolean值\",{\"1\":{\"9\":2}}],[\"像素坐标\",{\"1\":{\"9\":1}}],[\"才知道这竟然是\",{\"1\":{\"72\":1}}],[\"才能生效\",{\"1\":{\"9\":1}}],[\"才可\",{\"1\":{\"9\":1}}],[\"才可以\",{\"1\":{\"9\":2}}],[\"渐变属性\",{\"1\":{\"9\":1}}],[\"满足其中一个条件即可\",{\"1\":{\"9\":1}}],[\"并通过返回对象的形式暴露出去\",{\"1\":{\"250\":1}}],[\"并配置好default\",{\"1\":{\"225\":1}}],[\"并对其依赖项跟踪和更新触发进行逻辑控制\",{\"1\":{\"223\":1}}],[\"并在依赖更改时重新执行该函数\",{\"1\":{\"174\":1}}],[\"并在此之上对\",{\"1\":{\"131\":1}}],[\"并解决vue2中object\",{\"1\":{\"141\":1}}],[\"并将其转换为相应的虚拟dom结构\",{\"1\":{\"136\":1}}],[\"并\",{\"1\":{\"131\":1}}],[\"并把所有其他元素\",{\"1\":{\"131\":1}}],[\"并只对其中的\",{\"1\":{\"131\":1}}],[\"并取消了mutations概念\",{\"1\":{\"98\":1}}],[\"并更新相应的视图\",{\"1\":{\"80\":1}}],[\"并返回目标对象\",{\"1\":{\"26\":1}}],[\"并要求所有过滤器都为真才能包含功能\",{\"1\":{\"9\":1}}],[\"并且新值是新值\",{\"1\":{\"172\":2}}],[\"并且改变解构的值\",{\"1\":{\"166\":1}}],[\"并且每个钩子按照顺序在相应的时间内调用\",{\"1\":{\"82\":1}}],[\"并且当视图发生变化时\",{\"1\":{\"78\":1}}],[\"并且通常提供了更好的性能和更多的功能\",{\"1\":{\"26\":1}}],[\"并且对嵌套的对象或数组的修改不影响原始数据的情况\",{\"1\":{\"25\":1}}],[\"并且其类型不能为多边形\",{\"1\":{\"9\":1}}],[\"并且适用于该属性\",{\"1\":{\"9\":1}}],[\"并且实时显示坐标\",{\"1\":{\"9\":1}}],[\"或是写入而不触发更改的特殊方法\",{\"1\":{\"221\":1}}],[\"或水位达到50\",{\"1\":{\"174\":1}}],[\"或水位达到20cm\",{\"1\":{\"174\":3}}],[\"或替换数组中的元素\",{\"1\":{\"131\":1}}],[\"或从数组删除\",{\"1\":{\"131\":1}}],[\"或者可以被修改扩展性好\",{\"1\":{\"131\":1}}],[\"或者\",{\"1\":{\"131\":1}}],[\"或者当性能是主要考虑因素而不需要完全独立的副本时\",{\"1\":{\"25\":1}}],[\"或双引号\",{\"1\":{\"131\":1}}],[\"或\",{\"1\":{\"9\":1,\"108\":1,\"172\":1,\"181\":1,\"185\":1}}],[\"也怕别人看见\",{\"1\":{\"297\":1}}],[\"也就没有vue\",{\"1\":{\"235\":1}}],[\"也能写函数\",{\"1\":{\"172\":1}}],[\"也能自动更新数据\",{\"1\":{\"78\":1}}],[\"也可写成函数\",{\"1\":{\"172\":1}}],[\"也可以更换value\",{\"1\":{\"204\":2}}],[\"也可以监视到整体的变化\",{\"1\":{\"172\":1}}],[\"也可以调用父类初始化\",{\"1\":{\"131\":1}}],[\"也可以重写父类的方法\",{\"1\":{\"131\":1}}],[\"也可以在这个类外面使用\",{\"1\":{\"131\":1}}],[\"也可以集成\",{\"1\":{\"131\":1}}],[\"也会影响到person里面的值\",{\"1\":{\"166\":1}}],[\"也会影响到原响应式对象的值\",{\"1\":{\"166\":1}}],[\"也会被父类取代掉\",{\"1\":{\"131\":1}}],[\"也不行\",{\"1\":{\"171\":1}}],[\"也不关心这些类的方法实现细节\",{\"1\":{\"131\":1}}],[\"也不是\",{\"1\":{\"9\":1}}],[\"也适用于一些简单的数据结构\",{\"1\":{\"25\":1}}],[\"也有自托管方案\",{\"1\":{\"13\":1}}],[\"也叫\",{\"1\":{\"9\":1}}],[\"¬\",{\"1\":{\"9\":1}}],[\"∨\",{\"1\":{\"9\":2}}],[\"逻辑nor\",{\"1\":{\"9\":1}}],[\"逻辑or\",{\"1\":{\"9\":1}}],[\"逻辑and\",{\"1\":{\"9\":1}}],[\"全名\",{\"1\":{\"167\":2}}],[\"全名称\",{\"1\":{\"86\":1}}],[\"全局事件总线可以实现任意组件通信\",{\"1\":{\"235\":1}}],[\"全局事件总线$bus\",{\"1\":{\"230\":1}}],[\"全局api转移到应用对象\",{\"0\":{\"226\":1}}],[\"全局安装\",{\"1\":{\"131\":1}}],[\"全局定义json对象\",{\"1\":{\"9\":1}}],[\"全部为真\",{\"1\":{\"9\":1}}],[\"∧¬\",{\"1\":{\"9\":1}}],[\"∧\",{\"1\":{\"9\":3}}],[\"∉\",{\"1\":{\"9\":1}}],[\"∈\",{\"1\":{\"9\":1}}],[\"≤\",{\"1\":{\"9\":1}}],[\"键\",{\"1\":{\"9\":1}}],[\"<todo\",{\"1\":{\"241\":1}}],[\"<todo>\",{\"1\":{\"241\":2}}],[\"<teleport\",{\"1\":{\"224\":1}}],[\"<template\",{\"1\":{\"211\":2,\"225\":2,\"241\":3}}],[\"<template>\",{\"1\":{\"134\":1,\"152\":1,\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":2,\"176\":2,\"177\":1,\"178\":1,\"180\":1,\"185\":1,\"195\":2,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"210\":1,\"211\":1,\"212\":1,\"223\":1,\"225\":2,\"234\":1,\"238\":1,\"241\":5}}],[\"<my\",{\"1\":{\"237\":1}}],[\"<event2\",{\"1\":{\"234\":2}}],[\"<game\",{\"1\":{\"212\":3}}],[\"<grandchild\",{\"1\":{\"205\":1}}],[\"<category\",{\"1\":{\"210\":1,\"211\":1}}],[\"<child\",{\"1\":{\"201\":1,\"202\":1,\"205\":1,\"207\":1,\"225\":2,\"231\":1,\"236\":2}}],[\"<a\",{\"1\":{\"211\":1}}],[\"<atguiguinput\",{\"1\":{\"204\":5}}],[\"<axioserror>error\",{\"1\":{\"178\":1}}],[\"<nav\",{\"1\":{\"185\":1}}],[\"<demo\",{\"1\":{\"181\":1}}],[\"<div>填入组件b部分的结构<\",{\"1\":{\"241\":1}}],[\"<div>填入组件a部分的结构<\",{\"1\":{\"241\":1}}],[\"<div>\",{\"1\":{\"234\":1,\"238\":1,\"241\":5}}],[\"<div\",{\"1\":{\"61\":1,\"152\":1,\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"177\":1,\"180\":3,\"185\":2,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"210\":1,\"211\":1,\"212\":1,\"223\":1,\"224\":1,\"225\":2,\"233\":1}}],[\"<routerview\",{\"1\":{\"185\":1}}],[\"<routerview><\",{\"1\":{\"180\":1}}],[\"<router\",{\"1\":{\"183\":2,\"184\":3,\"185\":2,\"187\":1}}],[\"<routerlink\",{\"1\":{\"180\":3,\"185\":1,\"187\":1,\"188\":2,\"190\":1}}],[\"<img\",{\"1\":{\"178\":1}}],[\"<input\",{\"1\":{\"134\":2,\"167\":2,\"175\":1,\"204\":4,\"223\":1}}],[\"<pre\",{\"1\":{\"233\":1}}],[\"<person\",{\"1\":{\"175\":1,\"176\":1}}],[\"<p>我是弹窗中的一些内容<\",{\"1\":{\"224\":1}}],[\"<p>\",{\"1\":{\"37\":1,\"42\":1,\"44\":1,\"45\":1}}],[\"<br><br>\",{\"1\":{\"175\":1}}],[\"<br>\",{\"1\":{\"167\":4}}],[\"<button\",{\"1\":{\"153\":3,\"158\":3,\"161\":3,\"162\":3,\"163\":3,\"164\":3,\"166\":3,\"167\":1,\"169\":1,\"170\":3,\"171\":4,\"172\":5,\"173\":5,\"174\":2,\"175\":2,\"177\":1,\"178\":3,\"201\":1,\"202\":1,\"205\":1,\"207\":3,\"224\":1,\"234\":1,\"238\":1}}],[\"<li\",{\"1\":{\"163\":1,\"164\":1,\"176\":1,\"195\":1,\"210\":1,\"211\":1,\"212\":1,\"241\":1}}],[\"<li>\",{\"1\":{\"43\":1}}],[\"<ul>\",{\"1\":{\"163\":1,\"164\":1,\"176\":1,\"195\":1,\"210\":1,\"211\":1,\"212\":1,\"241\":1}}],[\"<htmlinputelement>$event\",{\"1\":{\"204\":2}}],[\"<htmlelement>t1\",{\"1\":{\"175\":1}}],[\"<h4>汽车\",{\"1\":{\"207\":2}}],[\"<h4>资产\",{\"1\":{\"207\":2}}],[\"<h4>y\",{\"1\":{\"205\":1}}],[\"<h4>x\",{\"1\":{\"205\":1}}],[\"<h4>d\",{\"1\":{\"205\":1}}],[\"<h4>c\",{\"1\":{\"205\":1}}],[\"<h4>b\",{\"1\":{\"205\":1}}],[\"<h4>a\",{\"1\":{\"205\":1}}],[\"<h4>父给我的车\",{\"1\":{\"201\":1}}],[\"<h4>我的玩具\",{\"1\":{\"201\":1}}],[\"<h4>我的车\",{\"1\":{\"201\":1}}],[\"<h4>儿子给的玩具\",{\"1\":{\"201\":1}}],[\"<h3>加载中\",{\"1\":{\"225\":1}}],[\"<h3>我是app组件<\",{\"1\":{\"225\":1}}],[\"<h3>我是孙组件<\",{\"1\":{\"207\":1}}],[\"<h3>当前求和为\",{\"1\":{\"225\":1}}],[\"<h3>\",{\"1\":{\"210\":1,\"211\":1}}],[\"<h3>孙组件<\",{\"1\":{\"205\":1}}],[\"<h3>子组件<\",{\"1\":{\"201\":1,\"205\":1}}],[\"<h3>父组件<\",{\"1\":{\"205\":1,\"207\":1}}],[\"<h3>父组件\",{\"1\":{\"201\":1}}],[\"<h3\",{\"1\":{\"175\":1}}],[\"<h1\",{\"1\":{\"175\":1}}],[\"<h1>slot<\",{\"1\":{\"241\":2}}],[\"<h1>todo<\",{\"1\":{\"241\":2}}],[\"<h1>我是默认插槽填充的结构<\",{\"1\":{\"241\":1}}],[\"<h1>我是子组件2<\",{\"1\":{\"234\":1}}],[\"<h1>ref与$parent<\",{\"1\":{\"238\":1}}],[\"<h1>需求\",{\"1\":{\"174\":1}}],[\"<h1>情况五\",{\"1\":{\"173\":1}}],[\"<h1>情况四\",{\"1\":{\"172\":1}}],[\"<h1>情况三\",{\"1\":{\"171\":1}}],[\"<h1>情况二\",{\"1\":{\"170\":1}}],[\"<h1>情况一\",{\"1\":{\"169\":1}}],[\"<h1>你好啊\",{\"1\":{\"152\":1}}],[\"<h1>标题<\",{\"1\":{\"134\":1}}],[\"<h2\",{\"1\":{\"174\":1,\"175\":1,\"180\":1}}],[\"<h2>我是child组件<\",{\"1\":{\"225\":1}}],[\"<h2>我是一个弹窗<\",{\"1\":{\"224\":1}}],[\"<h2>\",{\"1\":{\"223\":1}}],[\"<h2>今日游戏榜单<\",{\"1\":{\"212\":1}}],[\"<h2>水位\",{\"1\":{\"174\":1}}],[\"<h2>汽车\",{\"1\":{\"172\":1,\"173\":1}}],[\"<h2>汽车信息\",{\"1\":{\"163\":1,\"164\":1}}],[\"<h2>当前求和为\",{\"1\":{\"169\":1,\"177\":1,\"178\":1,\"195\":1,\"197\":1}}],[\"<h2>性别\",{\"1\":{\"166\":1}}],[\"<h2>测试\",{\"1\":{\"163\":1,\"164\":1,\"171\":1}}],[\"<h2>游戏列表\",{\"1\":{\"163\":1,\"164\":1}}],[\"<h2>年龄\",{\"1\":{\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"166\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1}}],[\"<h2>姓名\",{\"1\":{\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"166\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1}}],[\"<hr>\",{\"1\":{\"171\":1,\"178\":1}}],[\"<son\",{\"1\":{\"238\":1}}],[\"<style\",{\"1\":{\"234\":1,\"241\":5}}],[\"<style>\",{\"1\":{\"152\":1}}],[\"<suspense>\",{\"1\":{\"225\":1}}],[\"<slot\",{\"1\":{\"211\":2,\"212\":1,\"241\":3}}],[\"<slot><\",{\"1\":{\"210\":1,\"241\":1}}],[\"<span\",{\"1\":{\"178\":1,\"241\":1}}],[\"<span>\",{\"1\":{\"167\":2}}],[\"<script>\",{\"1\":{\"246\":1}}],[\"<script\",{\"1\":{\"89\":1,\"152\":2,\"153\":1,\"158\":1,\"161\":3,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":3,\"176\":2,\"177\":1,\"178\":2,\"180\":1,\"195\":2,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"212\":1,\"223\":1,\"225\":1,\"234\":1,\"237\":1,\"238\":2,\"239\":2,\"241\":5,\"245\":2}}],[\"<=\",{\"1\":{\"9\":1}}],[\"<\",{\"1\":{\"9\":2,\"89\":1,\"134\":1,\"152\":5,\"153\":5,\"158\":5,\"161\":7,\"162\":5,\"163\":7,\"164\":7,\"166\":6,\"167\":5,\"169\":4,\"170\":5,\"171\":6,\"172\":6,\"173\":6,\"174\":5,\"175\":8,\"176\":7,\"177\":5,\"178\":5,\"180\":7,\"183\":2,\"184\":5,\"185\":6,\"187\":4,\"188\":4,\"195\":7,\"196\":1,\"197\":4,\"201\":11,\"202\":2,\"204\":14,\"205\":15,\"207\":10,\"210\":7,\"211\":8,\"212\":8,\"223\":4,\"224\":2,\"225\":10,\"233\":1,\"234\":4,\"237\":1,\"238\":4,\"239\":2,\"241\":32,\"245\":2,\"246\":1}}],[\"≥\",{\"1\":{\"9\":1}}],[\">点击我获取父组件实例<\",{\"1\":{\"238\":1}}],[\">点击我触发xxx自定义事件<\",{\"1\":{\"234\":1}}],[\">点我<\",{\"1\":{\"207\":1}}],[\">点我更新a<\",{\"1\":{\"205\":1}}],[\">点我\",{\"1\":{\"178\":1}}],[\">点我+1<\",{\"1\":{\"178\":1}}],[\">点我打印内容<\",{\"1\":{\"175\":1}}],[\">点我sum+1<\",{\"1\":{\"169\":1,\"177\":1}}],[\">点我查看联系方式<\",{\"1\":{\"153\":1,\"158\":1,\"161\":1,\"162\":1}}],[\">我要传递多个参数<\",{\"1\":{\"233\":1}}],[\">是一个包含了异步请求的子组件\",{\"1\":{\"225\":1}}],[\">关闭弹窗<\",{\"1\":{\"224\":1}}],[\">关于<\",{\"1\":{\"180\":1}}],[\">更多<\",{\"1\":{\"211\":1}}],[\">汽车价格+1<\",{\"1\":{\"207\":1}}],[\">资产+1<\",{\"1\":{\"207\":1}}],[\">玩具给父亲<\",{\"1\":{\"201\":1}}],[\">news<\",{\"1\":{\"190\":1}}],[\">xxxx<\",{\"1\":{\"185\":2}}],[\">跳转<\",{\"1\":{\"184\":3}}],[\">home<\",{\"1\":{\"183\":1}}],[\">主页<\",{\"1\":{\"183\":1}}],[\">新闻<\",{\"1\":{\"180\":1}}],[\">首页<\",{\"1\":{\"180\":1}}],[\">vue路由测试<\",{\"1\":{\"180\":1}}],[\">vue<\",{\"1\":{\"175\":1}}],[\">再来一只狗<\",{\"1\":{\"178\":1}}],[\">加载中\",{\"1\":{\"178\":1}}],[\">前端<\",{\"1\":{\"175\":1}}],[\">尚硅谷<\",{\"1\":{\"175\":1}}],[\">水位+10<\",{\"1\":{\"174\":1}}],[\">水温+1<\",{\"1\":{\"174\":1}}],[\">水温\",{\"1\":{\"174\":1}}],[\">全名改为\",{\"1\":{\"167\":1}}],[\">测试<\",{\"1\":{\"163\":1,\"164\":1,\"175\":1,\"202\":1}}],[\">修改整个车<\",{\"1\":{\"172\":1,\"173\":1}}],[\">修改整个人<\",{\"1\":{\"170\":1,\"171\":1}}],[\">修改第二台车<\",{\"1\":{\"172\":1,\"173\":1}}],[\">修改第一台车<\",{\"1\":{\"172\":1,\"173\":1}}],[\">修改第一游戏<\",{\"1\":{\"163\":1,\"164\":1}}],[\">修改obj\",{\"1\":{\"171\":1}}],[\">修改性别<\",{\"1\":{\"166\":1}}],[\">修改年龄<\",{\"1\":{\"166\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1}}],[\">修改汽车价格<\",{\"1\":{\"163\":1,\"164\":1}}],[\">修改名字<\",{\"1\":{\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"166\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1}}],[\">年龄+1<\",{\"1\":{\"153\":1,\"158\":1,\"161\":1,\"162\":1}}],[\">|交叉|\",{\"1\":{\"125\":1}}],[\">|联合|\",{\"1\":{\"125\":1}}],[\">3\",{\"1\":{\"89\":1}}],[\"><\",{\"1\":{\"61\":1,\"211\":2,\"212\":1,\"231\":1,\"234\":2,\"236\":2,\"237\":1,\"238\":1,\"241\":3}}],[\">=\",{\"1\":{\"9\":4,\"169\":1,\"174\":4}}],[\">\",{\"0\":{\"43\":1},\"1\":{\"9\":2,\"43\":1,\"53\":1,\"62\":5,\"89\":1,\"125\":4,\"131\":1,\"134\":2,\"151\":1,\"152\":3,\"153\":2,\"158\":2,\"161\":5,\"162\":2,\"163\":3,\"164\":3,\"166\":2,\"167\":4,\"169\":2,\"170\":2,\"171\":2,\"172\":2,\"173\":2,\"174\":2,\"175\":8,\"176\":7,\"177\":3,\"178\":4,\"180\":6,\"181\":1,\"183\":2,\"184\":5,\"185\":6,\"187\":4,\"188\":4,\"195\":3,\"196\":1,\"197\":2,\"201\":5,\"202\":3,\"204\":21,\"205\":8,\"207\":5,\"210\":4,\"211\":3,\"212\":8,\"223\":3,\"224\":2,\"225\":4,\"233\":1,\"234\":1,\"237\":1,\"238\":2,\"239\":2,\"241\":12,\"245\":1}}],[\"值是一个函数\",{\"1\":{\"158\":1}}],[\"值为对象\",{\"1\":{\"206\":2}}],[\"值为\",{\"1\":{\"108\":1}}],[\"值在范围内\",{\"1\":{\"51\":1}}],[\"值\",{\"1\":{\"9\":4}}],[\"≠\",{\"1\":{\"9\":1}}],[\"不要走动\",{\"1\":{\"297\":1}}],[\"不要受凉\",{\"1\":{\"297\":1}}],[\"不要紧\",{\"1\":{\"297\":1}}],[\"不必难过\",{\"1\":{\"297\":1}}],[\"不禁簌簌地流下眼泪\",{\"1\":{\"297\":1}}],[\"不管是在标签\",{\"1\":{\"233\":1}}],[\"不建议保存对原始对象的持久引用\",{\"1\":{\"221\":1}}],[\"不会触发视图更新\",{\"1\":{\"221\":1}}],[\"不会立即调用当前的函数\",{\"1\":{\"89\":1}}],[\"不关心值内部的属性变化\",{\"1\":{\"214\":1}}],[\"不太美观\",{\"1\":{\"182\":1}}],[\"不带有\",{\"1\":{\"182\":1}}],[\"不用\",{\"1\":{\"174\":1}}],[\"不用明确指出监视的数据\",{\"1\":{\"174\":1}}],[\"不用考虑能否编辑\",{\"1\":{\"131\":1}}],[\"不过对象内部属性a\",{\"1\":{\"172\":2}}],[\"不开启深度监视\",{\"1\":{\"172\":2}}],[\"不行\",{\"1\":{\"171\":1}}],[\"不修改\",{\"1\":{\"167\":1}}],[\"不便于维护和复用\",{\"1\":{\"155\":1}}],[\"不再等待整个应用编译完成\",{\"1\":{\"152\":1}}],[\"不包含end位\",{\"1\":{\"131\":1}}],[\"不可以修改implements\",{\"1\":{\"131\":1}}],[\"不写类型\",{\"1\":{\"131\":1}}],[\"不在字面量集合中\",{\"1\":{\"121\":1}}],[\"不需要引入直接使用\",{\"1\":{\"234\":1}}],[\"不需要花括号\",{\"1\":{\"131\":1}}],[\"不需要\",{\"0\":{\"105\":1}}],[\"不能修改\",{\"1\":{\"231\":1}}],[\"不能用path\",{\"1\":{\"188\":1}}],[\"不能包含其它特殊字符\",{\"1\":{\"131\":1}}],[\"不能直接赋值给其他类型\",{\"1\":{\"122\":1}}],[\"不能省略括号\",{\"1\":{\"89\":2}}],[\"不能使用\",{\"1\":{\"9\":1}}],[\"不规范之处\",{\"1\":{\"89\":1}}],[\"不仅仅是能判断父子关系\",{\"1\":{\"73\":1}}],[\"不推荐\",{\"1\":{\"69\":1}}],[\"不支持\",{\"1\":{\"60\":1}}],[\"不佳\",{\"1\":{\"55\":1}}],[\"不允许\",{\"1\":{\"32\":5}}],[\"不同的是监听数据变化的方式不同\",{\"1\":{\"174\":1}}],[\"不同域名\",{\"1\":{\"32\":1}}],[\"不同协议\",{\"1\":{\"32\":1}}],[\"不同端口\",{\"1\":{\"32\":1}}],[\"不同文件或路径\",{\"1\":{\"32\":1}}],[\"不同级别显示不同的颜色\",{\"1\":{\"8\":1}}],[\"不是响应式的\",{\"1\":{\"162\":1}}],[\"不是\",{\"1\":{\"9\":6}}],[\"不等式\",{\"1\":{\"9\":1}}],[\"不存在\",{\"1\":{\"9\":1}}],[\"即send\",{\"1\":{\"202\":1}}],[\"即\",{\"1\":{\"172\":1}}],[\"即使子类定义与父类相同的变量或者函数\",{\"1\":{\"131\":1}}],[\"即使\",{\"1\":{\"67\":1}}],[\"即不是\",{\"1\":{\"9\":1}}],[\"即不是函数或表达式\",{\"1\":{\"9\":1}}],[\"即当前正在使用\",{\"1\":{\"9\":1}}],[\"根据原始对象citys去创建响应式对象citys2\",{\"1\":{\"221\":1,\"222\":1}}],[\"根据已有数据计算出新数据\",{\"1\":{\"167\":1}}],[\"根据属性动态改变样式\",{\"1\":{\"56\":1}}],[\"根据输入和输出值定义功能\",{\"1\":{\"9\":1}}],[\"根据不同zoom改变图层颜色\",{\"1\":{\"8\":1}}],[\"停止输出值必须是文字值\",{\"1\":{\"9\":1}}],[\"停止\",{\"1\":{\"9\":2}}],[\"拖动到平移\",{\"1\":{\"9\":1}}],[\"利用dragpan属性\",{\"1\":{\"9\":1}}],[\"输出\",{\"1\":{\"9\":1}}],[\"当然父组件的数据与方法需要通过defineexpose方法对外暴露\",{\"1\":{\"238\":1}}],[\"当然点击事件想注入多个参数可以按照下图操作\",{\"1\":{\"233\":1}}],[\"当点击按钮的时候\",{\"1\":{\"234\":1}}],[\"当前代码级给pre标签绑定原生dom事件点击事件\",{\"1\":{\"233\":1}}],[\"当前组件的父组件实例对象\",{\"1\":{\"206\":1}}],[\"当state中的数据\",{\"1\":{\"198\":1}}],[\"当检测到多根节点时自动创建\",{\"1\":{\"133\":1}}],[\"当赋予两个参数时\",{\"1\":{\"131\":1}}],[\"当没有传入参数的时候\",{\"1\":{\"89\":1}}],[\"当没有参数时\",{\"1\":{\"89\":1}}],[\"当传入参数时\",{\"1\":{\"89\":1}}],[\"当只有一条语句的时候\",{\"1\":{\"89\":1}}],[\"当有两个参数时\",{\"1\":{\"89\":1}}],[\"当有一个参数时\",{\"1\":{\"89\":1}}],[\"当有样式冲突时\",{\"1\":{\"69\":1}}],[\"当捕获一个来自子孙组件的错误时调用\",{\"1\":{\"83\":1}}],[\"当把内容投影进组件之后调用\",{\"1\":{\"82\":1}}],[\"当绑定的属性值发生变化时调用\",{\"1\":{\"82\":1}}],[\"当应用中的某个数据模型发生改变时\",{\"1\":{\"80\":1}}],[\"当数据模型发生变化时\",{\"1\":{\"78\":2}}],[\"当数据模型中的数据发生变化时\",{\"1\":{\"78\":1}}],[\"当数据发生变化时\",{\"1\":{\"78\":1,\"79\":1}}],[\"当我们写一个构造函数的时候\",{\"1\":{\"75\":1}}],[\"当对象包含指针或引用类型时\",{\"1\":{\"23\":1}}],[\"当每次鼠标放开开始\",{\"1\":{\"9\":1}}],[\"当每次鼠标时\",{\"1\":{\"9\":1}}],[\"当每次鼠标进入是控制台都可以输出\",{\"1\":{\"9\":1}}],[\"当地图加载完成\",{\"1\":{\"9\":1}}],[\"和vue2中的watch作用一致\",{\"1\":{\"168\":1}}],[\"和vue2中的computed作用一致\",{\"1\":{\"167\":1}}],[\"和美元符号$以外\",{\"1\":{\"131\":1}}],[\"和actions\",{\"1\":{\"98\":1}}],[\"和angular的对比\",{\"0\":{\"78\":1}}],[\"和\",{\"1\":{\"9\":1,\"32\":2,\"38\":1,\"75\":2,\"131\":3,\"170\":1,\"195\":1,\"216\":1,\"227\":2,\"256\":1,\"271\":1,\"288\":1}}],[\"鼠标悬停\",{\"1\":{\"49\":1}}],[\"鼠标放开事件\",{\"1\":{\"9\":1}}],[\"鼠标按下事件\",{\"1\":{\"9\":1}}],[\"鼠标移动事件\",{\"1\":{\"9\":1}}],[\"鼠标移入事件\",{\"1\":{\"9\":1}}],[\"鼠标离开事件\",{\"1\":{\"9\":1}}],[\"第三种修改方式\",{\"1\":{\"196\":1}}],[\"第三种写法\",{\"1\":{\"176\":1}}],[\"第三步\",{\"1\":{\"161\":1,\"203\":1}}],[\"第二日上午便须渡江到浦口\",{\"1\":{\"297\":1}}],[\"第二种修改方式\",{\"1\":{\"196\":1}}],[\"第二种\",{\"1\":{\"183\":1}}],[\"第二种写法\",{\"1\":{\"167\":1,\"176\":1}}],[\"第二步\",{\"1\":{\"161\":1,\"194\":1,\"207\":1}}],[\"第二个\",{\"1\":{\"234\":1}}],[\"第二个参数\",{\"1\":{\"131\":2}}],[\"第二个参数是需要监听的图层\",{\"1\":{\"9\":1}}],[\"第二个数组必须是数组\",{\"1\":{\"89\":1}}],[\"第二张图片描绘了angular的双向绑定机制\",{\"1\":{\"78\":1}}],[\"第一种修改方式\",{\"1\":{\"196\":1}}],[\"第一种\",{\"1\":{\"183\":1}}],[\"第一种写法\",{\"1\":{\"176\":1}}],[\"第一步\",{\"1\":{\"161\":1,\"194\":1,\"207\":1}}],[\"第一张图片展示了vue的双向绑定机制\",{\"1\":{\"78\":1}}],[\"第一个参数为触发事件类型\",{\"1\":{\"234\":1}}],[\"第一个参数\",{\"1\":{\"131\":2}}],[\"第一个参数是监听的事件\",{\"1\":{\"9\":1}}],[\"第一个子元素\",{\"1\":{\"50\":1}}],[\"第3个子元素\",{\"1\":{\"50\":1}}],[\"坐标\",{\"1\":{\"9\":1}}],[\"j\",{\"1\":{\"131\":4}}],[\"js中操作ref对象时候需要\",{\"1\":{\"162\":2}}],[\"js中通过dom\",{\"1\":{\"86\":1}}],[\"jsx\",{\"1\":{\"152\":2}}],[\"js发布版3\",{\"1\":{\"145\":1}}],[\"js官方出品\",{\"1\":{\"101\":1}}],[\"js应用的状态管理库\",{\"1\":{\"101\":1}}],[\"js\",{\"1\":{\"32\":14,\"78\":1,\"89\":1,\"131\":2,\"151\":1}}],[\"js对象无法获得\",{\"1\":{\"32\":1}}],[\"json\",{\"1\":{\"9\":2,\"26\":4,\"89\":4,\"131\":1,\"199\":1,\"200\":1}}],[\"json=\",{\"1\":{\"9\":1}}],[\"java中不支持多重继承\",{\"1\":{\"131\":2}}],[\"javascript\",{\"1\":{\"26\":1,\"89\":1,\"107\":1,\"108\":1,\"131\":8}}],[\"java项目\",{\"1\":{\"13\":1}}],[\"jetbrains开发者调查\",{\"1\":{\"18\":1}}],[\"jenkins\",{\"1\":{\"14\":1,\"17\":1,\"18\":2}}],[\"jenkins传统优势\",{\"1\":{\"13\":1}}],[\"jobs\",{\"1\":{\"13\":1}}],[\"join\",{\"1\":{\"8\":1,\"131\":2}}],[\"element\",{\"1\":{\"262\":1}}],[\"else\",{\"1\":{\"119\":1,\"131\":1}}],[\"event2>\",{\"1\":{\"234\":2}}],[\"event2\",{\"1\":{\"234\":1}}],[\"err\",{\"1\":{\"178\":2}}],[\"error\",{\"1\":{\"89\":2,\"123\":1,\"178\":1}}],[\"e98219e14\",{\"1\":{\"176\":1}}],[\"e98219e13\",{\"1\":{\"176\":1}}],[\"e98219e12\",{\"1\":{\"176\":1}}],[\"esbuild\",{\"1\":{\"303\":2}}],[\"eslint\",{\"1\":{\"152\":1}}],[\"es6笔记\",{\"2\":{\"91\":1}}],[\"es6\",{\"1\":{\"89\":1,\"262\":2}}],[\"es6数组解构赋值\",{\"0\":{\"89\":1}}],[\"emit\",{\"1\":{\"203\":3,\"204\":4}}],[\"emitter\",{\"1\":{\"203\":15}}],[\"emil\",{\"1\":{\"131\":1}}],[\"empty\",{\"1\":{\"50\":1}}],[\"e\",{\"1\":{\"125\":1,\"131\":1}}],[\"edge\",{\"1\":{\"60\":1}}],[\"exe文件\",{\"1\":{\"302\":1}}],[\"export\",{\"1\":{\"131\":2,\"152\":1,\"153\":1,\"158\":1,\"161\":2,\"176\":2,\"178\":3,\"180\":1,\"185\":1,\"195\":2,\"196\":1,\"198\":1,\"200\":1,\"203\":1,\"223\":1,\"245\":1,\"250\":1}}],[\"extend\",{\"1\":{\"161\":2,\"247\":1}}],[\"extends是继承父类\",{\"1\":{\"131\":1}}],[\"extends是继承某个类\",{\"1\":{\"131\":1}}],[\"extends\",{\"1\":{\"115\":1,\"128\":1,\"131\":5}}],[\"extruded\",{\"1\":{\"9\":1}}],[\"extrusion\",{\"1\":{\"9\":2}}],[\"example\",{\"1\":{\"47\":2}}],[\"eee\",{\"1\":{\"43\":1}}],[\"east\",{\"1\":{\"13\":1}}],[\"eable\",{\"1\":{\"9\":1}}],[\"ecmascript\",{\"1\":{\"131\":1}}],[\"ecs等aws资源部署\",{\"1\":{\"13\":1}}],[\"ec2\",{\"1\":{\"13\":1}}],[\"enter\",{\"1\":{\"227\":2}}],[\"enterprise\",{\"1\":{\"13\":1}}],[\"end为可选\",{\"1\":{\"131\":1}}],[\"end\",{\"1\":{\"131\":2,\"152\":2}}],[\"endindex\",{\"1\":{\"131\":1}}],[\"enum\",{\"0\":{\"117\":1},\"1\":{\"117\":1,\"131\":2}}],[\"enabledragging\",{\"1\":{\"9\":1}}],[\"ui\",{\"1\":{\"262\":1}}],[\"utils\",{\"1\":{\"203\":3}}],[\"uomg\",{\"1\":{\"200\":1,\"225\":1}}],[\"ul>\",{\"1\":{\"163\":1,\"164\":1,\"176\":1,\"195\":1,\"210\":1,\"211\":1,\"212\":1,\"241\":1}}],[\"ultimate\",{\"1\":{\"13\":2}}],[\"updatemoney\",{\"1\":{\"207\":5}}],[\"updatea\",{\"1\":{\"205\":4}}],[\"updatea=\",{\"1\":{\"205\":1}}],[\"update\",{\"1\":{\"204\":8,\"236\":1}}],[\"updated\",{\"1\":{\"177\":1}}],[\"upperschool\",{\"1\":{\"198\":2}}],[\"up\",{\"1\":{\"117\":3}}],[\"u\",{\"1\":{\"108\":1,\"178\":2}}],[\"u013675821\",{\"1\":{\"81\":1}}],[\"useattrs\",{\"1\":{\"237\":2}}],[\"useattrs方法返回的对象身上就没有相应属性与属性值\",{\"1\":{\"237\":1}}],[\"usemsgref\",{\"1\":{\"223\":3}}],[\"usetalkstore\",{\"1\":{\"195\":3,\"200\":1}}],[\"usecountstore\",{\"1\":{\"195\":1,\"196\":2,\"197\":2,\"198\":1}}],[\"usecounterstore\",{\"1\":{\"100\":2}}],[\"usedog\",{\"1\":{\"178\":4}}],[\"use\",{\"1\":{\"89\":2,\"100\":1,\"151\":1,\"180\":1,\"194\":1,\"226\":1}}],[\"usename+\",{\"1\":{\"89\":1}}],[\"usename\",{\"1\":{\"89\":4}}],[\"userouter\",{\"1\":{\"191\":2}}],[\"useroute\",{\"1\":{\"187\":2,\"188\":2,\"191\":2}}],[\"username\",{\"1\":{\"89\":1,\"204\":14}}],[\"user\",{\"1\":{\"58\":1,\"113\":4,\"120\":1,\"125\":1}}],[\"usesumref\",{\"1\":{\"223\":1}}],[\"usesumstore\",{\"1\":{\"195\":2}}],[\"usesum\",{\"1\":{\"178\":4}}],[\"uses\",{\"1\":{\"13\":2}}],[\"us\",{\"1\":{\"13\":1}}],[\"ubuntu\",{\"1\":{\"13\":1}}],[\"unmount\",{\"1\":{\"226\":1}}],[\"unit\",{\"1\":{\"152\":1}}],[\"union\",{\"0\":{\"119\":1}}],[\"unionmarker\",{\"1\":{\"9\":1}}],[\"unshift\",{\"1\":{\"131\":2,\"200\":1}}],[\"unsure\",{\"1\":{\"122\":3}}],[\"undefiend\",{\"1\":{\"131\":1}}],[\"undefined\",{\"1\":{\"72\":1,\"75\":2,\"89\":1,\"108\":5,\"131\":8,\"161\":1}}],[\"unknown\",{\"0\":{\"122\":1},\"1\":{\"122\":1,\"125\":1,\"128\":2}}],[\"unproject\",{\"1\":{\"9\":1}}],[\"url带有\",{\"1\":{\"182\":1}}],[\"url更加美观\",{\"1\":{\"182\":1}}],[\"urllist\",{\"1\":{\"178\":1}}],[\"url\",{\"1\":{\"8\":4,\"32\":1,\"56\":1}}],[\"矢量点拖拽功能\",{\"1\":{\"9\":1}}],[\"矢量点\",{\"1\":{\"9\":1}}],[\"矢量数据\",{\"1\":{\"8\":1}}],[\"都能监听响应式数据的变化\",{\"1\":{\"174\":1}}],[\"都是原生dom事件\",{\"1\":{\"233\":1}}],[\"都是新值\",{\"1\":{\"170\":1,\"171\":1}}],[\"都是无效的对象\",{\"1\":{\"75\":1}}],[\"都是可用的表达\",{\"1\":{\"9\":1}}],[\"都不满足\",{\"1\":{\"9\":1}}],[\"都可以显示颜色\",{\"1\":{\"9\":1}}],[\"y^\",{\"1\":{\"279\":2}}],[\"yuysada03\",{\"1\":{\"195\":1}}],[\"yuysada02\",{\"1\":{\"195\":1}}],[\"yuysada01\",{\"1\":{\"195\":1}}],[\"yes\",{\"1\":{\"152\":2}}],[\"yellow\",{\"1\":{\"9\":1,\"38\":1,\"52\":1}}],[\"yarn\",{\"1\":{\"100\":1}}],[\"y=y\",{\"1\":{\"89\":1}}],[\"y=0\",{\"1\":{\"89\":1}}],[\"y\",{\"1\":{\"89\":6,\"116\":4,\"205\":3,\"279\":2}}],[\"yml\",{\"1\":{\"14\":1}}],[\"yml配置文件\",{\"1\":{\"13\":1}}],[\"you\",{\"1\":{\"8\":1,\"151\":1}}],[\"0以上\",{\"1\":{\"151\":1}}],[\"0版本\",{\"1\":{\"145\":1}}],[\"06fcfc\",{\"1\":{\"9\":1}}],[\"001\",{\"1\":{\"188\":1}}],[\"0000\",{\"1\":{\"89\":1}}],[\"0000ff\",{\"1\":{\"9\":1}}],[\"0085f0\",{\"1\":{\"9\":1}}],[\"0\",{\"1\":{\"9\":2,\"32\":2,\"44\":1,\"53\":1,\"57\":1,\"63\":6,\"66\":6,\"68\":9,\"100\":2,\"131\":4,\"145\":2,\"152\":2,\"163\":1,\"164\":1,\"167\":1,\"169\":1,\"174\":2,\"177\":1,\"178\":1,\"207\":1,\"225\":1,\"231\":1,\"250\":1,\"302\":1,\"303\":1}}],[\"山体阴影可视化\",{\"1\":{\"9\":1}}],[\"圆\",{\"1\":{\"9\":1}}],[\"href=\",{\"1\":{\"211\":1}}],[\"href^=\",{\"1\":{\"56\":1}}],[\"h4>\",{\"1\":{\"201\":4,\"205\":6,\"207\":4}}],[\"history模式\",{\"1\":{\"182\":2}}],[\"history\",{\"1\":{\"180\":1,\"182\":4,\"185\":1}}],[\"hillshading\",{\"1\":{\"9\":1}}],[\"hillshade\",{\"1\":{\"9\":2}}],[\"hmr\",{\"1\":{\"152\":1}}],[\"h1>\",{\"1\":{\"134\":1,\"152\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"234\":1,\"238\":1,\"241\":5}}],[\"h1\",{\"1\":{\"132\":1,\"287\":2}}],[\"h\",{\"1\":{\"125\":2}}],[\"huge\",{\"1\":{\"121\":1}}],[\"huh\",{\"1\":{\"89\":1}}],[\"htmlelement\",{\"1\":{\"175\":1}}],[\"html后\",{\"1\":{\"152\":1}}],[\"html\",{\"1\":{\"61\":1,\"62\":1,\"152\":1,\"262\":3,\"263\":1}}],[\"http三次握手\",{\"0\":{\"87\":1}}],[\"https\",{\"1\":{\"32\":1,\"56\":1,\"81\":1,\"83\":1,\"94\":1,\"152\":1,\"178\":1,\"200\":1,\"225\":1,\"235\":1,\"240\":1,\"262\":6,\"263\":1}}],[\"http\",{\"1\":{\"32\":13}}],[\"hope\",{\"1\":{\"288\":1}}],[\"home\",{\"1\":{\"180\":5,\"183\":2,\"184\":2,\"185\":2}}],[\"hooks\",{\"1\":{\"178\":2}}],[\"hover\",{\"1\":{\"49\":1,\"53\":1}}],[\"hobbies也会收到影响\",{\"1\":{\"26\":1}}],[\"hobbies\",{\"1\":{\"26\":5}}],[\"h3>\",{\"1\":{\"175\":1,\"201\":2,\"205\":3,\"207\":2,\"210\":1,\"211\":1,\"225\":3}}],[\"h3\",{\"1\":{\"45\":2}}],[\"h2o\",{\"1\":{\"282\":1}}],[\"h2>\",{\"1\":{\"153\":2,\"158\":2,\"161\":2,\"162\":2,\"163\":3,\"164\":3,\"166\":3,\"169\":1,\"170\":2,\"171\":3,\"172\":3,\"173\":3,\"174\":2,\"175\":1,\"177\":1,\"178\":1,\"180\":1,\"195\":1,\"197\":1,\"212\":1,\"223\":1,\"224\":1,\"225\":1}}],[\"h2\",{\"1\":{\"44\":2}}],[\"hello\",{\"1\":{\"111\":1,\"122\":1,\"131\":3}}],[\"help\",{\"1\":{\"47\":2}}],[\"height值\",{\"1\":{\"174\":1}}],[\"height\",{\"1\":{\"39\":1,\"42\":1,\"174\":7}}],[\"head\",{\"1\":{\"89\":2}}],[\"header\",{\"1\":{\"39\":2,\"53\":2,\"69\":1}}],[\"heatmap\",{\"1\":{\"9\":3}}],[\"handler3\",{\"1\":{\"234\":2}}],[\"handler1\",{\"1\":{\"233\":1}}],[\"handler\",{\"1\":{\"141\":1,\"233\":1,\"234\":3,\"237\":1,\"238\":3}}],[\"harness\",{\"1\":{\"13\":2,\"17\":1,\"18\":1}}],[\"hash模式\",{\"1\":{\"182\":2}}],[\"hash\",{\"1\":{\"32\":1}}],[\"has\",{\"1\":{\"9\":2,\"60\":1}}],[\"halo\",{\"1\":{\"8\":3}}],[\"hsla\",{\"1\":{\"9\":1}}],[\"hsl\",{\"1\":{\"9\":1}}],[\"dbclick\",{\"1\":{\"232\":1,\"233\":1}}],[\"d=\",{\"1\":{\"205\":1}}],[\"ddd\",{\"1\":{\"152\":1}}],[\"d\",{\"1\":{\"89\":1,\"125\":2,\"131\":1,\"161\":1,\"163\":3,\"164\":3,\"205\":4,\"247\":1,\"303\":1}}],[\"diff\",{\"1\":{\"133\":1}}],[\"directive\",{\"1\":{\"226\":1}}],[\"direction\",{\"1\":{\"117\":3}}],[\"dir\",{\"1\":{\"117\":1}}],[\"div>\",{\"1\":{\"61\":1,\"152\":1,\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"177\":1,\"180\":3,\"185\":2,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"210\":1,\"211\":1,\"212\":1,\"223\":1,\"224\":1,\"225\":2,\"233\":1,\"234\":1,\"238\":1,\"241\":7}}],[\"div\",{\"1\":{\"50\":1,\"55\":1,\"69\":2}}],[\"distribution\",{\"1\":{\"13\":1}}],[\"dist\",{\"1\":{\"13\":1}}],[\"disabled\",{\"1\":{\"51\":1,\"59\":2}}],[\"disabledragging\",{\"1\":{\"9\":1}}],[\"disable\",{\"1\":{\"9\":1}}],[\"done\",{\"1\":{\"241\":4}}],[\"dog\",{\"1\":{\"178\":1}}],[\"doglist\",{\"1\":{\"178\":6}}],[\"down\",{\"1\":{\"117\":2}}],[\"dosomething\",{\"1\":{\"112\":1}}],[\"double\",{\"1\":{\"100\":3}}],[\"document\",{\"1\":{\"32\":1,\"86\":1,\"131\":1,\"174\":1,\"175\":1}}],[\"dom简介\",{\"0\":{\"86\":1}}],[\"dom节点操作\",{\"1\":{\"82\":1}}],[\"domain\",{\"1\":{\"32\":1}}],[\"dom\",{\"0\":{\"133\":1},\"1\":{\"32\":1,\"86\":1,\"132\":1,\"133\":2}}],[\"drone的开源分支\",{\"1\":{\"17\":1}}],[\"drone\",{\"1\":{\"17\":1}}],[\"dragpan\",{\"1\":{\"9\":4}}],[\"delay\",{\"1\":{\"223\":2}}],[\"deleteproperty等\",{\"1\":{\"141\":1}}],[\"delete\",{\"1\":{\"141\":1}}],[\"detail\",{\"1\":{\"184\":1,\"185\":7,\"187\":2,\"188\":1,\"189\":2}}],[\"details\",{\"1\":{\"81\":1,\"83\":1,\"94\":1,\"262\":1}}],[\"decrement\",{\"1\":{\"178\":4,\"196\":1,\"198\":1}}],[\"destroyed\",{\"1\":{\"177\":1}}],[\"deep\",{\"1\":{\"170\":2,\"172\":2,\"173\":1}}],[\"dev操作启动之后\",{\"1\":{\"301\":1}}],[\"development\",{\"1\":{\"152\":1}}],[\"devops\",{\"1\":{\"15\":1}}],[\"devops​\",{\"1\":{\"13\":1}}],[\"devops功能\",{\"1\":{\"13\":1}}],[\"default>\",{\"1\":{\"225\":1}}],[\"default=\",{\"1\":{\"212\":2}}],[\"default\",{\"1\":{\"131\":1,\"152\":1,\"153\":1,\"158\":1,\"161\":2,\"178\":3,\"180\":1,\"185\":1,\"203\":1,\"223\":1,\"231\":2,\"245\":1,\"250\":1}}],[\"defineoptions\",{\"1\":{\"246\":1}}],[\"defineasynccomponent\",{\"1\":{\"225\":2}}],[\"defineemits方法执行\",{\"1\":{\"234\":1}}],[\"defineemits\",{\"1\":{\"204\":2,\"234\":2}}],[\"defineexpose\",{\"1\":{\"175\":2,\"206\":1,\"238\":1}}],[\"definecomponent\",{\"1\":{\"178\":2}}],[\"defineconfig\",{\"1\":{\"161\":2}}],[\"defineprops<\",{\"1\":{\"176\":2}}],[\"defineprops\",{\"1\":{\"176\":2,\"201\":1,\"204\":2,\"205\":1,\"231\":2,\"241\":1}}],[\"defineproperty需为每个属性单独定义描述符\",{\"1\":{\"141\":1}}],[\"defineproperty仅能拦截属性读写\",{\"1\":{\"141\":1}}],[\"defineproperty那样递归遍历对象所有属性进行劫持\",{\"1\":{\"141\":1}}],[\"defineproperty的局限性‌\",{\"1\":{\"141\":1}}],[\"defineproperty的数据劫持以及发布者\",{\"1\":{\"78\":1}}],[\"defineproperty\",{\"1\":{\"78\":2,\"79\":1,\"80\":1,\"142\":1}}],[\"definestore\",{\"1\":{\"100\":2,\"195\":4,\"196\":2,\"198\":2,\"200\":2}}],[\"deploy\",{\"1\":{\"13\":2}}],[\"deployment\",{\"1\":{\"13\":1}}],[\"demo2\",{\"1\":{\"32\":1}}],[\"demo1\",{\"1\":{\"32\":1}}],[\"demo\",{\"1\":{\"32\":11,\"131\":2,\"174\":2,\"181\":2}}],[\"dem\",{\"1\":{\"8\":2,\"9\":1}}],[\"danger\",{\"1\":{\"112\":1}}],[\"date\",{\"1\":{\"73\":1}}],[\"data\",{\"1\":{\"8\":4,\"9\":2,\"52\":1,\"89\":3,\"150\":1,\"153\":1,\"155\":2,\"160\":2,\"178\":2,\"195\":1,\"200\":1,\"225\":1}}],[\"dasharray\",{\"1\":{\"9\":2}}],[\"5useattrs\",{\"0\":{\"237\":1}}],[\"56\",{\"1\":{\"89\":3}}],[\"5种连接符\",{\"0\":{\"41\":1}}],[\"512\",{\"1\":{\"9\":1}}],[\"555\",{\"1\":{\"89\":1}}],[\"55\",{\"1\":{\"9\":1}}],[\"50\",{\"1\":{\"9\":4,\"174\":3}}],[\"5\",{\"0\":{\"26\":1,\"46\":1,\"59\":1,\"114\":1,\"123\":1,\"164\":1,\"183\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":2,\"198\":1,\"199\":1,\"200\":1,\"205\":1},\"1\":{\"8\":1,\"9\":2,\"13\":2,\"32\":1,\"57\":1,\"89\":4,\"101\":1,\"131\":3,\"151\":1,\"230\":2,\"262\":1}}],[\"i+1\",{\"1\":{\"279\":1}}],[\"i++\",{\"1\":{\"131\":1}}],[\"i=1\",{\"1\":{\"279\":1}}],[\"i=0\",{\"1\":{\"131\":1}}],[\"it\",{\"1\":{\"273\":2}}],[\"item是每项值\",{\"1\":{\"89\":1}}],[\"item\",{\"1\":{\"53\":1,\"89\":6,\"176\":4,\"210\":1,\"211\":1,\"241\":3}}],[\"i<result\",{\"1\":{\"131\":1}}],[\"i\",{\"1\":{\"125\":1,\"131\":1,\"161\":1,\"203\":1,\"247\":1,\"279\":1,\"290\":1}}],[\"io\",{\"1\":{\"83\":1}}],[\"if\",{\"1\":{\"73\":2,\"89\":1,\"119\":1,\"131\":1,\"169\":1,\"174\":3,\"196\":2,\"227\":1}}],[\"iframe\",{\"1\":{\"32\":1}}],[\"iframe跨域\",{\"1\":{\"32\":2}}],[\"introduction\",{\"1\":{\"262\":1}}],[\"intersection\",{\"0\":{\"120\":1}}],[\"interface\",{\"0\":{\"115\":1},\"1\":{\"115\":2,\"131\":1,\"176\":1}}],[\"interface和type的区别\",{\"0\":{\"94\":1}}],[\"info\",{\"1\":{\"231\":2}}],[\"info=\",{\"1\":{\"231\":1}}],[\"inject\",{\"0\":{\"207\":1},\"1\":{\"207\":3,\"230\":1,\"239\":3}}],[\"inpt\",{\"1\":{\"175\":1}}],[\"input=\",{\"1\":{\"204\":4}}],[\"input2\",{\"1\":{\"134\":1}}],[\"input1\",{\"1\":{\"134\":1}}],[\"input\",{\"1\":{\"49\":1,\"51\":4,\"57\":1,\"58\":1}}],[\"innertext\",{\"1\":{\"174\":1,\"175\":3}}],[\"innerhtml=frusts\",{\"1\":{\"131\":1}}],[\"innerhtml=fruits\",{\"1\":{\"131\":1}}],[\"initvalue\",{\"1\":{\"223\":3}}],[\"initialvalue\",{\"1\":{\"214\":1}}],[\"init\",{\"1\":{\"131\":1}}],[\"incrementodd\",{\"1\":{\"196\":1}}],[\"increment\",{\"1\":{\"100\":4,\"178\":5,\"196\":1,\"198\":1,\"250\":2}}],[\"install\",{\"1\":{\"100\":1,\"131\":1,\"151\":1,\"194\":1,\"262\":1,\"303\":1}}],[\"instanceof\",{\"0\":{\"73\":1},\"1\":{\"73\":3}}],[\"index是下标\",{\"1\":{\"89\":1}}],[\"index\",{\"1\":{\"89\":4,\"152\":1,\"178\":2,\"180\":1,\"241\":2}}],[\"indexof\",{\"1\":{\"89\":1}}],[\"indexdb\",{\"1\":{\"32\":1}}],[\"invalid\",{\"1\":{\"58\":1}}],[\"invalidation\",{\"1\":{\"13\":1}}],[\"in\",{\"1\":{\"9\":6,\"51\":1,\"129\":2,\"163\":1,\"164\":1,\"176\":1,\"178\":1,\"185\":1,\"195\":1,\"210\":1,\"211\":1,\"212\":1,\"241\":1,\"287\":1}}],[\"isshow\",{\"1\":{\"224\":2}}],[\"isreactive\",{\"1\":{\"221\":5}}],[\"isloading\",{\"1\":{\"178\":1}}],[\"isdone\",{\"1\":{\"108\":1}}],[\"is\",{\"1\":{\"9\":2,\"60\":1}}],[\"isactive\",{\"1\":{\"9\":1}}],[\"isenabled\",{\"1\":{\"9\":1}}],[\"img\",{\"1\":{\"210\":1}}],[\"immediate\",{\"1\":{\"170\":1}}],[\"immediate等等\",{\"1\":{\"170\":1}}],[\"implements\",{\"1\":{\"131\":3}}],[\"implementation\",{\"1\":{\"9\":1}}],[\"implments\",{\"1\":{\"131\":1}}],[\"import\",{\"1\":{\"100\":2,\"131\":2,\"161\":2,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":4,\"176\":5,\"177\":1,\"178\":6,\"180\":6,\"187\":1,\"188\":1,\"191\":1,\"194\":3,\"195\":5,\"196\":1,\"197\":2,\"198\":1,\"200\":4,\"201\":3,\"203\":4,\"205\":3,\"207\":3,\"212\":1,\"221\":1,\"223\":3,\"225\":3,\"237\":1,\"238\":3,\"239\":2,\"241\":3,\"250\":1}}],[\"important\",{\"1\":{\"62\":1,\"69\":3}}],[\"images\",{\"1\":{\"178\":1}}],[\"imagery\",{\"1\":{\"9\":1}}],[\"image\",{\"1\":{\"8\":2}}],[\"icon\",{\"1\":{\"9\":1,\"47\":2,\"56\":1}}],[\"id选择器\",{\"1\":{\"62\":1}}],[\"id=\",{\"1\":{\"39\":1,\"174\":1}}],[\"id\",{\"0\":{\"39\":2},\"1\":{\"8\":4,\"9\":1,\"13\":3,\"53\":1,\"68\":2,\"113\":3,\"119\":6,\"120\":1,\"163\":4,\"164\":4,\"176\":6,\"185\":1,\"187\":2,\"188\":2,\"189\":1,\"195\":4,\"200\":1,\"210\":1,\"211\":1,\"212\":5,\"221\":4,\"222\":4,\"241\":4}}],[\"图上可以看出来\",{\"1\":{\"75\":1}}],[\"图标不可拖拽\",{\"1\":{\"9\":1}}],[\"图标位置\",{\"1\":{\"9\":1}}],[\"图标\",{\"1\":{\"9\":1}}],[\"图标或者文本标签\",{\"1\":{\"9\":1}}],[\"图片引入\",{\"1\":{\"289\":1}}],[\"图片增强\",{\"0\":{\"281\":1}}],[\"图片地址\",{\"1\":{\"8\":1}}],[\"图片\",{\"1\":{\"8\":1}}],[\"图层存在属性\",{\"1\":{\"9\":18}}],[\"图层\",{\"0\":{\"9\":1}}],[\"图层最小缩放级别\",{\"1\":{\"8\":1}}],[\"图层最大缩放级别\",{\"1\":{\"8\":1}}],[\"图层显示与否\",{\"1\":{\"8\":1}}],[\"404\",{\"1\":{\"304\":1}}],[\"40+个rfc\",{\"1\":{\"145\":1}}],[\"4v\",{\"0\":{\"236\":1}}],[\"4800+次提交\",{\"1\":{\"145\":1}}],[\"42\",{\"1\":{\"108\":1,\"111\":1,\"112\":1,\"122\":1}}],[\"4+\",{\"1\":{\"60\":1}}],[\"4级权重\",{\"0\":{\"53\":1}}],[\"4种核心武器\",{\"0\":{\"36\":1}}],[\"4dea21\",{\"1\":{\"9\":1}}],[\"456\",{\"1\":{\"9\":1}}],[\"4\",{\"0\":{\"25\":1,\"40\":1,\"45\":1,\"58\":1,\"75\":1,\"113\":1,\"122\":1,\"163\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":2,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"196\":1,\"204\":1,\"223\":1,\"227\":1},\"1\":{\"8\":1,\"13\":2,\"32\":1,\"89\":5,\"101\":1,\"131\":4,\"135\":1,\"145\":1,\"205\":1,\"230\":2,\"262\":1}}],[\"3下没有esbuild\",{\"1\":{\"302\":1}}],[\"3中\",{\"1\":{\"250\":1}}],[\"3全局事件总线\",{\"0\":{\"235\":1}}],[\"3应用时可以更加高效地利用这些特性来构建更加复杂和高效的应用\",{\"1\":{\"137\":1}}],[\"3不再需要唯一根标签是框架设计上的一大进步\",{\"1\":{\"137\":1}}],[\"3不再需要唯一根标签后\",{\"1\":{\"135\":1}}],[\"3内部实现这一特性的详细解释\",{\"1\":{\"136\":1}}],[\"3内部实现不再需要唯一根标签的机制\",{\"1\":{\"136\":1}}],[\"3的编译器在编译模板时\",{\"1\":{\"136\":1}}],[\"3的渲染器在处理fragment节点时\",{\"1\":{\"136\":1}}],[\"3的虚拟dom引入了fragment节点\",{\"1\":{\"136\":1}}],[\"3的组件设计更加灵活和多样化\",{\"1\":{\"135\":1}}],[\"3的响应式系统和composition\",{\"1\":{\"101\":1}}],[\"3的专属状态管理库\",{\"1\":{\"98\":1}}],[\"3和typescript\",{\"1\":{\"99\":1}}],[\"33\",{\"1\":{\"89\":2}}],[\"333\",{\"1\":{\"37\":1,\"89\":2}}],[\"38\",{\"1\":{\"89\":1}}],[\"3引入了setup\",{\"1\":{\"83\":1}}],[\"3000\",{\"1\":{\"203\":1}}],[\"300+贡献者\",{\"1\":{\"145\":1}}],[\"30\",{\"1\":{\"26\":4,\"131\":1,\"142\":1}}],[\"3d\",{\"1\":{\"9\":2}}],[\"3\",{\"0\":{\"24\":1,\"39\":1,\"44\":1,\"51\":1,\"57\":1,\"74\":1,\"83\":1,\"112\":1,\"121\":1,\"129\":1,\"150\":1,\"153\":1,\"154\":1,\"157\":1,\"162\":2,\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"174\":1,\"175\":1,\"176\":1,\"177\":1,\"178\":1,\"181\":1,\"195\":1,\"203\":1,\"212\":1,\"220\":1,\"226\":1},\"1\":{\"8\":1,\"9\":6,\"13\":3,\"32\":2,\"50\":1,\"89\":12,\"99\":1,\"100\":2,\"101\":3,\"110\":1,\"131\":10,\"132\":1,\"133\":4,\"134\":1,\"135\":1,\"141\":1,\"145\":2,\"151\":1,\"189\":1,\"205\":1,\"230\":2,\"233\":1,\"241\":1,\"249\":1,\"250\":1,\"259\":1,\"262\":1,\"303\":1}}],[\"2自定义事件\",{\"0\":{\"232\":1,\"234\":1}}],[\"2^53\",{\"1\":{\"108\":1}}],[\"2和vue\",{\"1\":{\"101\":1}}],[\"2项目中使用\",{\"1\":{\"101\":1}}],[\"2301\",{\"1\":{\"94\":1}}],[\"200\",{\"1\":{\"205\":1}}],[\"2000\",{\"1\":{\"89\":1,\"223\":1}}],[\"20\",{\"1\":{\"174\":2,\"176\":1}}],[\"20px\",{\"1\":{\"152\":1}}],[\"2020\",{\"1\":{\"288\":1}}],[\"2020年9月18日\",{\"1\":{\"145\":1}}],[\"2023年趋势\",{\"1\":{\"18\":1}}],[\"2em\",{\"1\":{\"52\":1}}],[\"222\",{\"1\":{\"89\":1}}],[\"22\",{\"1\":{\"9\":1}}],[\"2px\",{\"1\":{\"9\":1}}],[\"255\",{\"1\":{\"9\":4}}],[\"2\",{\"0\":{\"23\":1,\"38\":1,\"43\":1,\"50\":1,\"56\":1,\"73\":1,\"111\":1,\"120\":1,\"128\":1,\"149\":1,\"151\":1,\"152\":2,\"153\":1,\"157\":1,\"180\":1,\"194\":1,\"202\":1,\"211\":1,\"217\":1,\"225\":1,\"233\":1,\"234\":1},\"1\":{\"8\":1,\"9\":6,\"13\":3,\"22\":1,\"23\":1,\"24\":1,\"26\":1,\"32\":3,\"68\":1,\"89\":17,\"99\":3,\"100\":4,\"101\":1,\"110\":1,\"113\":1,\"119\":1,\"120\":1,\"131\":17,\"132\":1,\"133\":3,\"135\":1,\"136\":1,\"141\":1,\"151\":1,\"152\":1,\"189\":1,\"205\":1,\"230\":2,\"233\":1,\"241\":1,\"250\":1,\"262\":1,\"280\":1}}],[\"plus\",{\"1\":{\"262\":1}}],[\"plugins\",{\"1\":{\"161\":1}}],[\"plugin\",{\"1\":{\"161\":2,\"247\":1}}],[\"p>\",{\"1\":{\"224\":1}}],[\"pembroke\",{\"1\":{\"178\":1}}],[\"persons\",{\"1\":{\"176\":6}}],[\"personinter\",{\"1\":{\"176\":2}}],[\"person变化了\",{\"1\":{\"170\":1,\"171\":1}}],[\"person\",{\"1\":{\"131\":4,\"153\":1,\"158\":2,\"161\":3,\"162\":2,\"163\":2,\"164\":2,\"166\":8,\"167\":1,\"169\":2,\"170\":9,\"171\":11,\"172\":18,\"173\":14,\"174\":2,\"175\":5,\"176\":5,\"177\":2,\"221\":3}}],[\"permissions\",{\"1\":{\"120\":2}}],[\"piece\",{\"1\":{\"145\":2}}],[\"pinia也是集中式管理状态容器\",{\"1\":{\"240\":1}}],[\"pinia官网\",{\"1\":{\"240\":1}}],[\"pinia提供的storetorefs只会将数据做转换\",{\"1\":{\"197\":1}}],[\"pinia可能是更好的选择\",{\"1\":{\"101\":1}}],[\"pinia允许直接修改状态\",{\"1\":{\"101\":1}}],[\"pinia的体积也更小\",{\"1\":{\"101\":1}}],[\"pinia的使用\",{\"0\":{\"98\":1}}],[\"pinia对typescript提供了原生支持\",{\"1\":{\"101\":1}}],[\"pinia与vuex区别\",{\"0\":{\"101\":1}}],[\"pinia\",{\"0\":{\"194\":1,\"208\":1},\"1\":{\"100\":2,\"101\":5,\"152\":1,\"194\":4,\"195\":2,\"196\":1,\"197\":1,\"198\":1,\"200\":1,\"230\":1,\"240\":1}}],[\"pinia具有更简单的api设计\",{\"1\":{\"98\":1}}],[\"pnpm\",{\"1\":{\"100\":1,\"247\":1,\"303\":1}}],[\"pnpm安装\",{\"1\":{\"100\":1}}],[\"pubsub\",{\"1\":{\"203\":1,\"230\":2}}],[\"public\",{\"1\":{\"131\":4,\"289\":1}}],[\"purple\",{\"1\":{\"69\":1}}],[\"push是追加历史记录\",{\"1\":{\"190\":1}}],[\"push\",{\"1\":{\"13\":1,\"178\":1,\"191\":1}}],[\"pdf\",{\"1\":{\"47\":2}}],[\"pre>\",{\"1\":{\"233\":1}}],[\"prettier\",{\"1\":{\"152\":1}}],[\"price\",{\"1\":{\"163\":3,\"164\":3,\"165\":1,\"207\":2}}],[\"private\",{\"1\":{\"131\":2}}],[\"printid\",{\"1\":{\"119\":1}}],[\"primitive\",{\"0\":{\"108\":1}}],[\"primary\",{\"1\":{\"38\":2}}],[\"propert\",{\"1\":{\"227\":1}}],[\"props可以实现父子组件通信\",{\"1\":{\"231\":1}}],[\"props是使用频率最高的一种通信方式\",{\"1\":{\"201\":1}}],[\"props的函数写法\",{\"1\":{\"189\":1}}],[\"props的布尔值写法\",{\"1\":{\"189\":1}}],[\"props的对象写法\",{\"1\":{\"189\":1}}],[\"props\",{\"0\":{\"176\":1,\"201\":1},\"1\":{\"176\":3,\"189\":3,\"205\":1,\"230\":2,\"231\":2}}],[\"provide方法用于提供数据\",{\"1\":{\"239\":1}}],[\"provide\",{\"0\":{\"207\":1},\"1\":{\"207\":3,\"230\":1,\"239\":3}}],[\"project\",{\"1\":{\"151\":1,\"152\":1,\"303\":1}}],[\"proxy\",{\"1\":{\"142\":1}}],[\"proxy的强类型特性有助于提升typescript的类型推断准确性\",{\"1\":{\"141\":1}}],[\"proxy通过一个处理器对象\",{\"1\":{\"141\":1}}],[\"proxy通过递归代理实现深度监听\",{\"1\":{\"141\":1}}],[\"proxy支持13种操作拦截\",{\"1\":{\"141\":1}}],[\"proxy可直接拦截数组的push\",{\"1\":{\"141\":1}}],[\"proxy自动捕获新增或删除的属性\",{\"1\":{\"141\":1}}],[\"proxy无需像object\",{\"1\":{\"141\":1}}],[\"proxy能够直接代理整个对象\",{\"1\":{\"141\":1}}],[\"protected\",{\"1\":{\"131\":2}}],[\"proto\",{\"1\":{\"73\":3}}],[\"prototype=run\",{\"1\":{\"131\":1}}],[\"prototype=new\",{\"1\":{\"131\":1}}],[\"prototype\",{\"0\":{\"74\":1},\"1\":{\"73\":2,\"74\":1,\"75\":2,\"131\":4,\"235\":1}}],[\"promise\",{\"1\":{\"89\":1}}],[\"promise=new\",{\"1\":{\"89\":1}}],[\"production\",{\"1\":{\"13\":1}}],[\"p\",{\"1\":{\"37\":1,\"42\":1,\"44\":1,\"45\":1,\"50\":1,\"52\":2,\"53\":1,\"129\":4,\"132\":1}}],[\"package\",{\"1\":{\"235\":1}}],[\"password\",{\"1\":{\"204\":1}}],[\"padding\",{\"1\":{\"152\":1}}],[\"pageno=\",{\"1\":{\"236\":1}}],[\"pageno与update\",{\"1\":{\"236\":1}}],[\"pagey\",{\"1\":{\"202\":1}}],[\"pagex\",{\"1\":{\"202\":1}}],[\"pagesize=\",{\"1\":{\"236\":1}}],[\"pagesize实现父子数据同步\",{\"1\":{\"236\":1}}],[\"pages\",{\"1\":{\"180\":3}}],[\"page\",{\"1\":{\"152\":1,\"287\":1}}],[\"partial\",{\"1\":{\"279\":1}}],[\"partial^r\",{\"1\":{\"279\":1}}],[\"parmas\",{\"1\":{\"191\":1}}],[\"params参数\",{\"0\":{\"188\":1}}],[\"params\",{\"1\":{\"131\":4,\"188\":2,\"212\":4}}],[\"parent\",{\"1\":{\"131\":1}}],[\"parse\",{\"1\":{\"26\":3,\"89\":1,\"200\":1}}],[\"path\",{\"1\":{\"180\":2,\"181\":1,\"183\":1,\"184\":4,\"185\":6,\"187\":1,\"189\":1,\"192\":1}}],[\"paths\",{\"1\":{\"13\":1}}],[\"pattern中不能使用\",{\"1\":{\"9\":1}}],[\"pattern\",{\"1\":{\"9\":2}}],[\"pain\",{\"1\":{\"8\":3}}],[\"pop等方法\",{\"1\":{\"141\":1}}],[\"pop\",{\"1\":{\"131\":2}}],[\"postmessage跨域\",{\"1\":{\"32\":1}}],[\"policy\",{\"1\":{\"32\":1}}],[\"polygon\",{\"1\":{\"9\":5}}],[\"poin\",{\"1\":{\"9\":8}}],[\"point2=new\",{\"1\":{\"89\":1}}],[\"point1=new\",{\"1\":{\"89\":1}}],[\"pointlike\",{\"1\":{\"9\":1}}],[\"point\",{\"1\":{\"8\":1,\"9\":10,\"89\":3,\"116\":1}}],[\"数字类型\",{\"1\":{\"131\":1}}],[\"数字\",{\"1\":{\"108\":1,\"131\":1}}],[\"数组元素即为将来组件需要触发的自定义事件类型\",{\"1\":{\"234\":1}}],[\"数组操作拦截以及嵌套对象的惰性处理\",{\"1\":{\"141\":1}}],[\"数组方法\",{\"1\":{\"131\":1}}],[\"数组用于在单一变量中存储多个值\",{\"1\":{\"131\":1}}],[\"数组是一个特殊的变量\",{\"1\":{\"131\":1}}],[\"数组\",{\"0\":{\"110\":1},\"1\":{\"89\":2,\"131\":1}}],[\"数组的解构赋值\",{\"1\":{\"89\":2}}],[\"数组类型\",{\"1\":{\"8\":1,\"131\":1}}],[\"数据双向绑定\",{\"1\":{\"236\":1}}],[\"数据一变\",{\"1\":{\"223\":1}}],[\"数据在组件的自身\",{\"1\":{\"212\":1}}],[\"数据到页面\",{\"1\":{\"204\":2}}],[\"数据中的某个属性<\",{\"1\":{\"172\":1}}],[\"数据中的某个属性\",{\"1\":{\"172\":1}}],[\"数据<\",{\"1\":{\"169\":1,\"170\":1,\"171\":1}}],[\"数据存储\",{\"1\":{\"98\":1}}],[\"数据影响机制\",{\"0\":{\"23\":1}}],[\"数据库变更管理\",{\"1\":{\"16\":1}}],[\"数据库\",{\"1\":{\"16\":1}}],[\"数据源必须是geojson\",{\"1\":{\"9\":1}}],[\"数据\",{\"1\":{\"8\":1,\"155\":1,\"158\":2,\"161\":1,\"163\":1,\"164\":1,\"166\":1,\"169\":3,\"170\":3,\"171\":3,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"177\":1,\"201\":1,\"207\":1,\"238\":1}}],[\"数据类型\",{\"1\":{\"8\":1,\"131\":2}}],[\"注入\",{\"1\":{\"239\":1}}],[\"注入数据\",{\"1\":{\"207\":1}}],[\"注册全局指令\",{\"1\":{\"226\":1}}],[\"注册全局组件\",{\"1\":{\"226\":1}}],[\"注意开发项目的时候默认插槽一般只有一个\",{\"1\":{\"241\":1}}],[\"注意这个重要的内置关系\",{\"1\":{\"203\":1}}],[\"注意区分原生事件与自定义事件中的$event\",{\"1\":{\"202\":1}}],[\"注意区分好\",{\"1\":{\"202\":1}}],[\"注意点如下\",{\"1\":{\"172\":1}}],[\"注意点\",{\"1\":{\"162\":1,\"163\":1,\"172\":1}}],[\"注意\",{\"1\":{\"131\":1,\"158\":3,\"161\":3,\"162\":1,\"170\":1,\"197\":1,\"205\":1,\"207\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"286\":1}}],[\"注释\",{\"1\":{\"21\":1,\"82\":1,\"86\":1}}],[\"注\",{\"1\":{\"8\":1,\"9\":1,\"131\":1}}],[\"栅格\",{\"1\":{\"9\":1}}],[\"栅格数据高程\",{\"1\":{\"8\":1}}],[\"栅格数据\",{\"1\":{\"8\":1}}],[\"栅格图层大小\",{\"1\":{\"8\":1}}],[\"栅格瓦片与矢量切换\",{\"1\":{\"8\":1}}],[\"ruanyifeng\",{\"1\":{\"262\":1}}],[\"runoob\",{\"1\":{\"262\":1,\"263\":1}}],[\"run=function\",{\"1\":{\"131\":1}}],[\"rundob\",{\"1\":{\"131\":2}}],[\"run\",{\"1\":{\"13\":1,\"131\":12,\"151\":1}}],[\"runs\",{\"1\":{\"13\":1}}],[\"route\",{\"1\":{\"181\":1,\"187\":2,\"188\":2,\"189\":2,\"191\":3}}],[\"routes\",{\"1\":{\"180\":1,\"184\":1,\"185\":1}}],[\"routerview\",{\"1\":{\"180\":1}}],[\"routerview>\",{\"1\":{\"180\":1}}],[\"routerlink\",{\"1\":{\"180\":1}}],[\"routerlink>\",{\"1\":{\"180\":3,\"185\":1,\"187\":1,\"188\":2,\"190\":1}}],[\"router的最新版本\",{\"1\":{\"180\":1}}],[\"router\",{\"1\":{\"152\":1,\"180\":7,\"182\":2,\"183\":2,\"184\":3,\"185\":4,\"187\":2,\"188\":1,\"191\":4}}],[\"risky\",{\"1\":{\"112\":3}}],[\"rightval\",{\"1\":{\"73\":2}}],[\"right\",{\"1\":{\"73\":2,\"279\":3}}],[\"r\",{\"1\":{\"89\":1,\"279\":3}}],[\"rawperson\",{\"1\":{\"221\":2}}],[\"rand\",{\"1\":{\"200\":1,\"225\":1}}],[\"random\",{\"1\":{\"178\":1}}],[\"range\",{\"1\":{\"51\":1}}],[\"radius\",{\"1\":{\"9\":3,\"115\":2,\"152\":1}}],[\"raster\",{\"1\":{\"8\":5,\"9\":3}}],[\"rgba\",{\"1\":{\"9\":1}}],[\"rgb\",{\"1\":{\"9\":3}}],[\"regarded\",{\"1\":{\"287\":1}}],[\"region\",{\"1\":{\"13\":1}}],[\"reveal随笔\",{\"0\":{\"295\":1},\"2\":{\"296\":1}}],[\"reveal\",{\"1\":{\"261\":1,\"295\":1,\"298\":1}}],[\"replace\",{\"1\":{\"190\":1,\"191\":1}}],[\"replace是替换当前记录\",{\"1\":{\"190\":1}}],[\"replace属性\",{\"0\":{\"190\":1}}],[\"ren\",{\"1\":{\"175\":4}}],[\"release\",{\"1\":{\"145\":1}}],[\"reactive<string\",{\"1\":{\"178\":1}}],[\"reactive<persons>\",{\"1\":{\"176\":1}}],[\"reactive包裹修改\",{\"1\":{\"171\":1}}],[\"reactive定义的数据\",{\"1\":{\"168\":1}}],[\"reactive定义的响应式数据是\",{\"1\":{\"163\":1}}],[\"reactive都可以\",{\"1\":{\"165\":1}}],[\"reactive重新分配一个新对象\",{\"1\":{\"165\":1}}],[\"reactive用来定义\",{\"1\":{\"165\":1}}],[\"reactive\",{\"0\":{\"163\":1,\"165\":1},\"1\":{\"163\":5,\"166\":2,\"171\":6,\"172\":3,\"173\":2,\"176\":1,\"178\":1,\"200\":2,\"207\":2,\"212\":2,\"218\":1,\"219\":1,\"221\":3,\"222\":1}}],[\"react\",{\"1\":{\"131\":1,\"182\":1,\"259\":1}}],[\"readonlycopy\",{\"1\":{\"218\":1}}],[\"readonly<t>\",{\"1\":{\"129\":1}}],[\"readonly\",{\"0\":{\"217\":1},\"1\":{\"113\":1,\"129\":1,\"218\":1,\"219\":1}}],[\"reading\",{\"1\":{\"26\":4}}],[\"ref=\",{\"1\":{\"175\":5,\"238\":1}}],[\"ref定义的数据\",{\"1\":{\"168\":1}}],[\"ref创建的变量必须使用\",{\"1\":{\"165\":1}}],[\"ref用来定义\",{\"1\":{\"165\":1}}],[\"ref对象的value属性是响应式的\",{\"1\":{\"162\":1}}],[\"ref与reactive\",{\"1\":{\"150\":1}}],[\"ref需要\",{\"0\":{\"105\":1}}],[\"ref\",{\"0\":{\"162\":1,\"164\":1,\"165\":1,\"175\":1},\"1\":{\"100\":1,\"162\":6,\"164\":4,\"165\":1,\"166\":1,\"167\":3,\"169\":4,\"170\":4,\"172\":1,\"174\":3,\"175\":9,\"177\":2,\"178\":2,\"201\":5,\"205\":5,\"207\":2,\"223\":2,\"225\":2,\"230\":2,\"238\":5,\"241\":2,\"250\":2}}],[\"reject\",{\"1\":{\"89\":2}}],[\"result\",{\"1\":{\"131\":1}}],[\"resolve\",{\"1\":{\"89\":2}}],[\"rester\",{\"1\":{\"8\":1}}],[\"return\",{\"1\":{\"73\":2,\"89\":3,\"100\":1,\"131\":10,\"153\":1,\"158\":1,\"159\":1,\"167\":2,\"178\":2,\"189\":1,\"195\":2,\"198\":2,\"200\":1,\"223\":3,\"250\":1}}],[\"required\",{\"1\":{\"51\":1}}],[\"redirect\",{\"1\":{\"192\":1}}],[\"red\",{\"1\":{\"8\":1,\"58\":1,\"63\":1,\"65\":1,\"69\":2,\"131\":2,\"241\":1}}],[\"光晕向外逐渐消失的距离\",{\"1\":{\"8\":1}}],[\"光晕到字体轮廓的距离\",{\"1\":{\"8\":1}}],[\"guide\",{\"1\":{\"262\":1}}],[\"guanyu\",{\"1\":{\"184\":2,\"185\":1}}],[\"game>\",{\"1\":{\"212\":1}}],[\"games=\",{\"1\":{\"212\":1}}],[\"games\",{\"1\":{\"163\":3,\"164\":3,\"210\":1,\"211\":1,\"212\":3}}],[\"g\",{\"1\":{\"125\":2,\"131\":1,\"151\":1,\"163\":3,\"164\":3,\"210\":3,\"211\":3,\"212\":3}}],[\"google\",{\"1\":{\"15\":1}}],[\"gcp原生集成\",{\"1\":{\"15\":1}}],[\"gcp\",{\"1\":{\"13\":1}}],[\"gitops自动同步器\",{\"1\":{\"16\":1}}],[\"gitops模式\",{\"1\":{\"13\":1,\"18\":1}}],[\"gitops风格k8s部署\",{\"1\":{\"13\":1}}],[\"github用户\",{\"1\":{\"18\":1}}],[\"github生态\",{\"1\":{\"13\":1}}],[\"github\",{\"1\":{\"13\":3,\"15\":2,\"18\":3}}],[\"github原生提供的自动化工具\",{\"1\":{\"13\":1}}],[\"gitlab用户\",{\"1\":{\"18\":1}}],[\"gitlab用户的完整解决方案\",{\"1\":{\"14\":1}}],[\"gitlab\",{\"1\":{\"13\":4,\"14\":2,\"15\":2,\"18\":2}}],[\"gitlab内置的ci\",{\"1\":{\"13\":1}}],[\"grand\",{\"1\":{\"205\":1,\"207\":1}}],[\"grandchild\",{\"1\":{\"205\":3,\"207\":1}}],[\"graph\",{\"1\":{\"125\":1}}],[\"gradient\",{\"1\":{\"9\":1}}],[\"green\",{\"1\":{\"8\":1,\"131\":1,\"241\":1}}],[\"gender\",{\"1\":{\"166\":4}}],[\"get何时调用\",{\"1\":{\"223\":1}}],[\"gettoy\",{\"1\":{\"201\":4}}],[\"gettoy=\",{\"1\":{\"201\":1}}],[\"getter\",{\"1\":{\"195\":1}}],[\"getter函数\",{\"1\":{\"168\":1}}],[\"getters\",{\"0\":{\"198\":1},\"1\":{\"98\":1,\"100\":1,\"195\":2,\"198\":1}}],[\"getatalk\",{\"1\":{\"200\":2}}],[\"getatalk函数相当于action\",{\"1\":{\"200\":1}}],[\"getitem\",{\"1\":{\"200\":1}}],[\"getinfo=function\",{\"1\":{\"131\":2}}],[\"getinfo\",{\"1\":{\"131\":3}}],[\"getdog\",{\"1\":{\"178\":5}}],[\"getdata\",{\"1\":{\"131\":1}}],[\"getelementbyid\",{\"1\":{\"131\":2,\"174\":1,\"175\":1}}],[\"getname\",{\"1\":{\"131\":1}}],[\"get\",{\"1\":{\"9\":1,\"131\":3,\"167\":1,\"178\":1,\"200\":1,\"223\":1,\"225\":1}}],[\"geojson\",{\"1\":{\"8\":5,\"9\":1}}],[\"geojson=\",{\"1\":{\"8\":1}}],[\"geometry\",{\"1\":{\"8\":1,\"9\":1}}],[\"1原生dom事件\",{\"0\":{\"233\":1}}],[\"1props\",{\"0\":{\"231\":1}}],[\"1px\",{\"1\":{\"9\":1,\"43\":1}}],[\"1<\",{\"1\":{\"178\":1}}],[\"19th\",{\"1\":{\"282\":1}}],[\"19\",{\"1\":{\"176\":1}}],[\"18\",{\"1\":{\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"166\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"175\":1,\"176\":2,\"221\":1}}],[\"1vue3的优势\",{\"0\":{\"146\":1}}],[\"1表示最后一位\",{\"1\":{\"131\":1}}],[\"13888888888\",{\"1\":{\"153\":1,\"158\":1,\"161\":1,\"162\":1}}],[\"13\",{\"0\":{\"177\":1},\"1\":{\"131\":1}}],[\"146538639\",{\"1\":{\"262\":1}}],[\"14\",{\"0\":{\"178\":1}}],[\"147693187\",{\"1\":{\"94\":1}}],[\"147934777\",{\"1\":{\"83\":1}}],[\"144092206\",{\"1\":{\"81\":1}}],[\"14+\",{\"1\":{\"60\":3}}],[\"15\",{\"1\":{\"60\":1}}],[\"12\",{\"0\":{\"176\":1,\"192\":1},\"1\":{\"131\":1}}],[\"1234\",{\"1\":{\"131\":1}}],[\"123\",{\"1\":{\"83\":1,\"131\":1}}],[\"123io\",{\"1\":{\"83\":1}}],[\"121+\",{\"1\":{\"60\":1}}],[\"120\",{\"1\":{\"53\":1}}],[\"127\",{\"1\":{\"32\":1}}],[\"1\",{\"0\":{\"22\":1,\"37\":1,\"42\":1,\"49\":1,\"55\":1,\"72\":1,\"110\":1,\"119\":1,\"127\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"151\":1,\"154\":1,\"179\":1,\"193\":1,\"201\":1,\"210\":1,\"213\":1,\"224\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":1,\"241\":1,\"250\":1},\"1\":{\"8\":1,\"9\":8,\"13\":3,\"22\":1,\"23\":1,\"24\":2,\"26\":1,\"32\":4,\"42\":1,\"53\":2,\"63\":2,\"66\":2,\"68\":2,\"89\":19,\"99\":2,\"100\":2,\"101\":1,\"110\":1,\"111\":2,\"113\":1,\"131\":18,\"133\":2,\"135\":1,\"136\":1,\"141\":1,\"152\":1,\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"165\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"177\":1,\"178\":2,\"189\":1,\"196\":1,\"198\":1,\"205\":1,\"207\":2,\"230\":2,\"233\":1,\"241\":1,\"250\":1,\"262\":1,\"263\":1,\"277\":1,\"279\":1,\"280\":1,\"288\":2,\"290\":2}}],[\"1111\",{\"1\":{\"131\":1}}],[\"111\",{\"1\":{\"53\":1,\"131\":1}}],[\"11\",{\"0\":{\"35\":1,\"175\":1,\"191\":1},\"1\":{\"8\":1,\"89\":1,\"131\":2,\"302\":1,\"303\":1}}],[\"10px\",{\"1\":{\"152\":2}}],[\"105+\",{\"1\":{\"60\":2}}],[\"100n\",{\"1\":{\"108\":1}}],[\"1000\",{\"1\":{\"53\":1,\"203\":1,\"238\":1}}],[\"100\",{\"1\":{\"9\":2,\"53\":3,\"163\":1,\"164\":1,\"174\":1,\"205\":1,\"207\":2}}],[\"10\",{\"0\":{\"174\":1,\"190\":1},\"1\":{\"8\":1,\"9\":2,\"53\":4,\"115\":1,\"131\":2,\"163\":1,\"164\":1,\"169\":1,\"174\":1,\"196\":1,\"198\":1}}],[\"b替换\",{\"1\":{\"241\":1}}],[\"b>\",{\"1\":{\"241\":1}}],[\"b=\",{\"1\":{\"205\":1}}],[\"b=2\",{\"1\":{\"89\":1,\"187\":1}}],[\"browserrouter\",{\"1\":{\"182\":1}}],[\"breed\",{\"1\":{\"178\":1}}],[\"brand\",{\"1\":{\"163\":2,\"164\":2,\"165\":1,\"207\":1}}],[\"branches\",{\"1\":{\"13\":1}}],[\"bmw\",{\"1\":{\"131\":1}}],[\"bigsum\",{\"1\":{\"198\":2}}],[\"big\",{\"1\":{\"108\":1}}],[\"bigint\",{\"1\":{\"108\":3}}],[\"bind=\",{\"1\":{\"205\":2}}],[\"bind\",{\"1\":{\"89\":3,\"227\":1}}],[\"bitrise\",{\"1\":{\"16\":1}}],[\"blog\",{\"1\":{\"81\":1,\"83\":1,\"94\":1,\"262\":1}}],[\"blockquote\",{\"1\":{\"52\":1}}],[\"blur\",{\"1\":{\"8\":1}}],[\"blue\",{\"1\":{\"8\":1,\"38\":1,\"63\":1,\"65\":1,\"69\":1,\"115\":1,\"131\":1}}],[\"body\",{\"1\":{\"224\":1}}],[\"book\",{\"1\":{\"206\":1}}],[\"boolean=true\",{\"1\":{\"131\":1}}],[\"boolean\",{\"1\":{\"72\":1,\"108\":2,\"131\":4}}],[\"bob\",{\"1\":{\"110\":1,\"120\":1}}],[\"bold\",{\"1\":{\"66\":1}}],[\"bottom\",{\"1\":{\"43\":1}}],[\"box\",{\"1\":{\"40\":2,\"152\":1,\"204\":2}}],[\"border\",{\"1\":{\"9\":1,\"40\":1,\"43\":1,\"58\":1,\"152\":1}}],[\"btn\",{\"1\":{\"38\":2}}],[\"b\",{\"1\":{\"32\":6,\"89\":2,\"114\":3,\"125\":2,\"131\":3,\"163\":3,\"164\":3,\"171\":4,\"172\":5,\"189\":1,\"205\":4,\"241\":1}}],[\"build\",{\"1\":{\"15\":1}}],[\"bucket\",{\"1\":{\"13\":1}}],[\"button>\",{\"1\":{\"153\":3,\"158\":3,\"161\":3,\"162\":3,\"163\":3,\"164\":3,\"166\":3,\"167\":1,\"169\":1,\"170\":3,\"171\":4,\"172\":5,\"173\":5,\"174\":2,\"175\":2,\"177\":1,\"178\":3,\"201\":1,\"202\":1,\"205\":1,\"207\":3,\"224\":1,\"234\":1,\"237\":1,\"238\":1}}],[\"buttonsize\",{\"1\":{\"121\":4}}],[\"button\",{\"1\":{\"59\":2,\"237\":2}}],[\"butt\",{\"1\":{\"8\":1}}],[\"b12c2c\",{\"1\":{\"9\":1}}],[\"beforedestroy\",{\"1\":{\"177\":1}}],[\"beforeupdate\",{\"1\":{\"177\":1}}],[\"beforemount\",{\"1\":{\"177\":1}}],[\"beforecreate\",{\"1\":{\"177\":1}}],[\"before\",{\"1\":{\"52\":1}}],[\"be\",{\"1\":{\"9\":2,\"287\":1}}],[\"banana\",{\"1\":{\"131\":13}}],[\"bar\",{\"1\":{\"89\":2}}],[\"based\",{\"1\":{\"9\":1}}],[\"background\",{\"1\":{\"9\":3,\"38\":2,\"46\":1,\"52\":1,\"152\":1}}],[\"6ref与$parent\",{\"0\":{\"238\":1}}],[\"600+次pr\",{\"1\":{\"145\":1}}],[\"67\",{\"1\":{\"89\":1}}],[\"68+\",{\"1\":{\"60\":1}}],[\"666\",{\"1\":{\"45\":1,\"163\":1,\"164\":1,\"171\":1,\"196\":1,\"203\":1,\"205\":1}}],[\"6\",{\"0\":{\"115\":1,\"124\":1,\"165\":1,\"184\":1,\"198\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":2,\"207\":1,\"208\":1,\"209\":1},\"1\":{\"8\":2,\"13\":1,\"32\":1,\"42\":1,\"131\":4,\"195\":1,\"207\":1,\"230\":2,\"262\":1}}],[\"如vue\",{\"1\":{\"259\":1}}],[\"如get\",{\"1\":{\"141\":1}}],[\"如模块化\",{\"1\":{\"101\":1}}],[\"如持久化存储插件\",{\"1\":{\"99\":1}}],[\"如何实现\",{\"1\":{\"78\":1}}],[\"如果你是一个新手\",{\"1\":{\"271\":1}}],[\"如果你需要一个功能丰富\",{\"1\":{\"101\":1}}],[\"如果想让父组件获取子组件的数据或者方法需要通过defineexpose对外暴露\",{\"1\":{\"238\":1}}],[\"如果想在vue3中使用全局事件总线功能\",{\"1\":{\"235\":1}}],[\"如果value可以更换\",{\"1\":{\"204\":1}}],[\"如果与vue2冲突\",{\"1\":{\"160\":1}}],[\"如果模板中存在无法识别的结构或语法错误\",{\"1\":{\"136\":1}}],[\"如果只能有一个根节点\",{\"1\":{\"134\":1}}],[\"如果只需要读取对象的属性而不修改它们\",{\"1\":{\"25\":1}}],[\"如果发现这是一个fragment节点\",{\"1\":{\"132\":1}}],[\"如果发现组件是多根的会自动创建一个fragment节点\",{\"1\":{\"132\":1}}],[\"如果age\",{\"1\":{\"131\":1}}],[\"如果angular创建了组件\",{\"1\":{\"82\":1}}],[\"如果标识符没有赋值\",{\"1\":{\"131\":1}}],[\"如果没有\",{\"1\":{\"89\":1}}],[\"如果有\",{\"1\":{\"89\":1}}],[\"如果浏览器不支持\",{\"1\":{\"89\":1}}],[\"如果失败就返回false\",{\"1\":{\"73\":1}}],[\"如果调换顺序\",{\"0\":{\"65\":1}}],[\"如果缺少同源策略\",{\"1\":{\"32\":1}}],[\"如果修改oldobject\",{\"1\":{\"26\":1}}],[\"如果修改\",{\"1\":{\"26\":1}}],[\"如argo\",{\"1\":{\"13\":1}}],[\"如下为一个组件所拥有的全部生命周期钩子\",{\"1\":{\"82\":1}}],[\"如下\",{\"1\":{\"9\":1}}],[\"如\",{\"1\":{\"8\":1,\"9\":1,\"26\":1,\"69\":1,\"89\":1,\"131\":4}}],[\"ms\",{\"1\":{\"288\":1}}],[\"msg1\",{\"1\":{\"236\":1}}],[\"msg被修改时候\",{\"1\":{\"223\":1}}],[\"msg被读取时候\",{\"1\":{\"223\":1}}],[\"msg\",{\"1\":{\"123\":2,\"223\":6,\"236\":2}}],[\"md\",{\"1\":{\"263\":1}}],[\"mp\",{\"1\":{\"262\":1}}],[\"mpoint\",{\"1\":{\"9\":1}}],[\"m0\",{\"1\":{\"262\":1}}],[\"mitt\",{\"0\":{\"203\":1},\"1\":{\"203\":4,\"235\":2}}],[\"minor\",{\"1\":{\"9\":2}}],[\"minzoom\",{\"1\":{\"8\":1}}],[\"mutate\",{\"1\":{\"199\":2}}],[\"methos\",{\"1\":{\"160\":2}}],[\"methods\",{\"1\":{\"153\":1,\"155\":2,\"195\":1}}],[\"message\",{\"1\":{\"124\":2,\"131\":2,\"178\":2}}],[\"medium\",{\"1\":{\"121\":2}}],[\"menu\",{\"1\":{\"43\":2}}],[\"more\",{\"1\":{\"286\":1}}],[\"money=\",{\"1\":{\"231\":1}}],[\"moneycontext\",{\"1\":{\"207\":2}}],[\"money\",{\"1\":{\"207\":8,\"231\":3,\"238\":2}}],[\"moldevalue\",{\"1\":{\"204\":1}}],[\"mosueenter等等\",{\"1\":{\"202\":1}}],[\"mount\",{\"1\":{\"180\":1,\"194\":1,\"226\":1}}],[\"mounted\",{\"1\":{\"177\":1}}],[\"mouseup\",{\"1\":{\"9\":2}}],[\"mousedown\",{\"1\":{\"9\":1}}],[\"mousemove\",{\"1\":{\"9\":1}}],[\"mouseleave\",{\"1\":{\"9\":1,\"232\":1}}],[\"mouseenter\",{\"1\":{\"9\":3,\"232\":1}}],[\"modal\",{\"1\":{\"224\":1}}],[\"mode\",{\"1\":{\"182\":1}}],[\"model实指利用props\",{\"1\":{\"236\":1}}],[\"modelvalue\",{\"1\":{\"204\":2,\"236\":4}}],[\"modelvalue=\",{\"1\":{\"204\":2}}],[\"modelvalue事件\",{\"1\":{\"204\":1}}],[\"model指令可是收集表单数据\",{\"1\":{\"236\":1}}],[\"model指令\",{\"1\":{\"204\":2}}],[\"model指令实现双向绑定\",{\"1\":{\"78\":1}}],[\"model的本质是下面这行代码\",{\"1\":{\"204\":1}}],[\"model的本质\",{\"1\":{\"204\":3}}],[\"model里面了\",{\"1\":{\"200\":1}}],[\"model=\",{\"1\":{\"134\":2,\"167\":2,\"204\":2,\"223\":1,\"236\":1}}],[\"model\",{\"0\":{\"204\":1,\"236\":1},\"1\":{\"86\":1,\"204\":9,\"227\":1,\"236\":3}}],[\"module加载模块\",{\"1\":{\"257\":1}}],[\"modules等‌\",{\"1\":{\"258\":1}}],[\"modules原生支持\",{\"1\":{\"257\":1}}],[\"modules\",{\"1\":{\"240\":1,\"303\":2}}],[\"module\",{\"1\":{\"131\":1,\"152\":1}}],[\"mycomponnet\",{\"1\":{\"245\":1,\"246\":1}}],[\"mychildren\",{\"1\":{\"131\":1}}],[\"myobj\",{\"1\":{\"215\":1}}],[\"myvar\",{\"1\":{\"214\":1}}],[\"myboys\",{\"1\":{\"131\":3}}],[\"mygirls\",{\"1\":{\"131\":3}}],[\"my\",{\"1\":{\"13\":1,\"237\":1}}],[\"mango\",{\"1\":{\"131\":14}}],[\"management\",{\"1\":{\"152\":1}}],[\"manage\",{\"1\":{\"120\":1}}],[\"max\",{\"1\":{\"59\":1}}],[\"maxzoom\",{\"1\":{\"8\":1}}],[\"markdown\",{\"0\":{\"263\":1,\"270\":1,\"271\":1,\"272\":1,\"273\":1},\"1\":{\"263\":1,\"270\":2,\"271\":3,\"272\":1,\"273\":3,\"274\":2,\"275\":1,\"287\":3,\"288\":1,\"289\":2,\"290\":2},\"2\":{\"285\":1}}],[\"markraw\",{\"0\":{\"220\":1},\"1\":{\"221\":3,\"222\":3}}],[\"marker\",{\"1\":{\"9\":3,\"60\":1}}],[\"marker=smartmapx\",{\"1\":{\"9\":1}}],[\"margin\",{\"1\":{\"44\":1}}],[\"main\",{\"1\":{\"13\":1,\"180\":2,\"194\":1}}],[\"major\",{\"1\":{\"9\":2}}],[\"match\",{\"1\":{\"9\":1}}],[\"mapped\",{\"0\":{\"129\":1}}],[\"mapzen\",{\"1\":{\"9\":2}}],[\"mapid\",{\"1\":{\"8\":12}}],[\"map\",{\"1\":{\"8\":15,\"9\":21,\"89\":1}}],[\"mapbox\",{\"0\":{\"7\":1},\"1\":{\"9\":1},\"2\":{\"10\":1,\"11\":1}}],[\"s2\",{\"1\":{\"211\":1}}],[\"s2>\",{\"1\":{\"211\":1}}],[\"s1\",{\"1\":{\"211\":1}}],[\"s1>\",{\"1\":{\"211\":1}}],[\"slot=\",{\"1\":{\"212\":1,\"241\":1}}],[\"slot>\",{\"1\":{\"210\":1,\"211\":2,\"212\":1,\"241\":4}}],[\"slot\",{\"0\":{\"209\":1},\"1\":{\"211\":1,\"212\":1,\"225\":2,\"230\":2,\"241\":3}}],[\"slice\",{\"1\":{\"131\":4}}],[\"scoped>\",{\"1\":{\"234\":1,\"241\":5}}],[\"school\",{\"1\":{\"196\":1,\"198\":3}}],[\"script>\",{\"1\":{\"89\":1,\"152\":1,\"153\":1,\"158\":1,\"161\":2,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":3,\"176\":2,\"177\":1,\"178\":2,\"180\":1,\"195\":2,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"212\":1,\"223\":1,\"225\":1,\"234\":1,\"237\":1,\"238\":2,\"239\":2,\"241\":5,\"245\":2,\"246\":1}}],[\"src\",{\"1\":{\"195\":2,\"203\":1}}],[\"src=\",{\"1\":{\"152\":1,\"178\":1}}],[\"show=\",{\"1\":{\"178\":1,\"224\":1}}],[\"showlog\",{\"1\":{\"175\":2}}],[\"showtel\",{\"1\":{\"153\":2,\"158\":3,\"161\":2,\"162\":2}}],[\"shallowreadonlycopy\",{\"1\":{\"219\":1}}],[\"shallowreadonly\",{\"0\":{\"217\":1},\"1\":{\"219\":1}}],[\"shallowreactive\",{\"0\":{\"213\":1},\"1\":{\"215\":1,\"216\":1}}],[\"shallowref\",{\"0\":{\"213\":1},\"1\":{\"214\":1,\"216\":1}}],[\"shadow\",{\"1\":{\"152\":1}}],[\"shaking`\",{\"1\":{\"148\":1}}],[\"shape\",{\"1\":{\"115\":2}}],[\"shift\",{\"1\":{\"131\":2}}],[\"s\",{\"1\":{\"122\":1,\"262\":1}}],[\"small\",{\"1\":{\"121\":1,\"237\":1}}],[\"svg\",{\"1\":{\"56\":1}}],[\"split\",{\"1\":{\"167\":3}}],[\"splice\",{\"1\":{\"131\":4}}],[\"specific\",{\"1\":{\"55\":1}}],[\"span><br>\",{\"1\":{\"178\":1}}],[\"span>\",{\"1\":{\"167\":2,\"241\":1}}],[\"span\",{\"1\":{\"55\":2}}],[\"spinnaker\",{\"1\":{\"13\":2,\"14\":1,\"18\":2}}],[\"son>\",{\"1\":{\"238\":1}}],[\"son\",{\"1\":{\"238\":5}}],[\"solution\",{\"1\":{\"152\":1}}],[\"solid\",{\"1\":{\"43\":1}}],[\"souce\",{\"1\":{\"8\":1}}],[\"sources\",{\"1\":{\"8\":1}}],[\"source\",{\"1\":{\"8\":2,\"9\":1}}],[\"sendtoy\",{\"1\":{\"203\":1}}],[\"send\",{\"1\":{\"202\":2,\"203\":4}}],[\"serve\",{\"1\":{\"151\":1}}],[\"serverless\",{\"1\":{\"16\":2}}],[\"serverless执行环境\",{\"1\":{\"15\":1}}],[\"sex=\",{\"1\":{\"131\":1}}],[\"set何时调用\",{\"1\":{\"223\":1}}],[\"setinterval\",{\"1\":{\"203\":1}}],[\"setitem\",{\"1\":{\"199\":1}}],[\"set\",{\"1\":{\"141\":2,\"142\":1,\"167\":1,\"223\":1}}],[\"setname\",{\"1\":{\"131\":1}}],[\"setup>\",{\"1\":{\"245\":1}}],[\"setup函数\",{\"1\":{\"250\":1}}],[\"setup函数有一个语法糖\",{\"1\":{\"161\":1}}],[\"setup函数会在beforecreate之前调用\",{\"1\":{\"158\":1}}],[\"setup函数返回的对象中的内容\",{\"1\":{\"158\":1}}],[\"setup中访问this是undefined\",{\"1\":{\"158\":1}}],[\"setup是vue3中一个新的配置项\",{\"1\":{\"158\":1}}],[\"setup\",{\"0\":{\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1},\"1\":{\"100\":1,\"150\":1,\"158\":1,\"159\":1,\"161\":4,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":3,\"176\":2,\"177\":3,\"178\":1,\"180\":1,\"195\":2,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"212\":1,\"223\":1,\"225\":1,\"234\":1,\"237\":1,\"238\":2,\"239\":2,\"241\":5,\"247\":1,\"250\":1}}],[\"settimeout\",{\"1\":{\"89\":1,\"203\":1,\"223\":1}}],[\"secure\",{\"1\":{\"56\":1}}],[\"secret\",{\"1\":{\"13\":2}}],[\"secrets\",{\"1\":{\"13\":3}}],[\"selection\",{\"1\":{\"52\":1}}],[\"sym\",{\"1\":{\"108\":1}}],[\"symbol\",{\"1\":{\"8\":1,\"9\":2,\"72\":1,\"108\":4,\"132\":1}}],[\"sync优化到了v\",{\"1\":{\"200\":1}}],[\"sync\",{\"1\":{\"13\":1,\"227\":1}}],[\"s3\",{\"1\":{\"13\":2}}],[\"san\",{\"1\":{\"153\":1,\"158\":1,\"162\":1,\"167\":1}}],[\"safari\",{\"1\":{\"60\":1}}],[\"same\",{\"1\":{\"32\":1}}],[\"saas解决方案\",{\"1\":{\"13\":1}}],[\"satellite\",{\"1\":{\"9\":1}}],[\"success\",{\"1\":{\"237\":1}}],[\"such\",{\"1\":{\"9\":1}}],[\"suspense>\",{\"1\":{\"225\":1}}],[\"suspense\",{\"0\":{\"225\":1},\"1\":{\"150\":1,\"225\":1}}],[\"support\",{\"1\":{\"152\":1}}],[\"supports\",{\"1\":{\"9\":1}}],[\"super\",{\"1\":{\"131\":2}}],[\"sumstore\",{\"1\":{\"195\":2}}],[\"sum变化了\",{\"1\":{\"169\":1}}],[\"sum+=result\",{\"1\":{\"131\":1}}],[\"sum=0\",{\"1\":{\"131\":1}}],[\"sum\",{\"1\":{\"131\":3,\"169\":4,\"177\":3,\"178\":6,\"195\":3,\"196\":6,\"197\":2,\"198\":3,\"225\":2,\"279\":1}}],[\"si\",{\"1\":{\"167\":1}}],[\"si<\",{\"1\":{\"167\":1}}],[\"single\",{\"1\":{\"152\":1}}],[\"site\",{\"1\":{\"131\":3}}],[\"sizing\",{\"1\":{\"40\":1}}],[\"size=\",{\"1\":{\"237\":1}}],[\"size\",{\"1\":{\"8\":1,\"52\":1}}],[\"side\",{\"1\":{\"9\":1}}],[\"style>\",{\"1\":{\"152\":1,\"234\":1,\"241\":5}}],[\"style=\",{\"1\":{\"53\":1,\"241\":1}}],[\"start和end都可以为负数\",{\"1\":{\"131\":1}}],[\"start\",{\"1\":{\"131\":1,\"151\":1}}],[\"startindex\",{\"1\":{\"131\":1}}],[\"state\",{\"1\":{\"100\":3,\"152\":1,\"195\":3,\"198\":3,\"199\":3}}],[\"static\",{\"1\":{\"61\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":2,\"69\":3}}],[\"store组合式写法\",{\"0\":{\"200\":1}}],[\"storetorefs\",{\"0\":{\"197\":1},\"1\":{\"197\":2,\"198\":1}}],[\"store\",{\"1\":{\"195\":4,\"197\":1,\"199\":1}}],[\"store是一个保存\",{\"1\":{\"195\":1}}],[\"stores\",{\"1\":{\"100\":1}}],[\"store‌\",{\"1\":{\"100\":2}}],[\"stopwtach\",{\"1\":{\"174\":2}}],[\"stopwatch\",{\"1\":{\"169\":2}}],[\"stops\",{\"1\":{\"9\":2}}],[\"stop\",{\"1\":{\"8\":1}}],[\"steps\",{\"1\":{\"13\":1}}],[\"str2\",{\"1\":{\"167\":2}}],[\"str1\",{\"1\":{\"167\":2}}],[\"strat为必选\",{\"1\":{\"131\":1}}],[\"str\",{\"1\":{\"128\":1}}],[\"strict\",{\"1\":{\"89\":2}}],[\"string=\",{\"1\":{\"131\":3}}],[\"stringify\",{\"1\":{\"26\":3,\"89\":1,\"199\":1}}],[\"string\",{\"1\":{\"9\":1,\"72\":1,\"108\":2,\"111\":1,\"113\":1,\"115\":1,\"119\":2,\"120\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":2,\"128\":1,\"131\":29,\"176\":2,\"178\":1,\"198\":1,\"200\":1,\"201\":1,\"223\":1,\"231\":1}}],[\"street\",{\"1\":{\"9\":10}}],[\"stroked\",{\"1\":{\"9\":2}}],[\"fallback>\",{\"1\":{\"225\":1}}],[\"fallback\",{\"1\":{\"225\":1}}],[\"false\",{\"1\":{\"73\":1,\"108\":1,\"131\":1,\"224\":1,\"241\":1}}],[\"father\",{\"1\":{\"201\":2,\"205\":2,\"207\":2}}],[\"fullname\",{\"1\":{\"167\":5}}],[\"functin\",{\"1\":{\"131\":1}}],[\"function\",{\"1\":{\"73\":2,\"75\":1,\"89\":9,\"100\":1,\"119\":1,\"123\":1,\"124\":1,\"125\":1,\"131\":15,\"158\":3,\"161\":3,\"162\":3,\"163\":3,\"164\":3,\"166\":3,\"167\":1,\"169\":1,\"170\":3,\"171\":4,\"172\":5,\"173\":5,\"174\":2,\"175\":2,\"177\":1,\"178\":3,\"200\":1,\"201\":1,\"203\":1,\"205\":1,\"207\":1,\"223\":1}}],[\"fun\",{\"1\":{\"89\":4}}],[\"fun=a=>console\",{\"1\":{\"89\":1}}],[\"fun=\",{\"1\":{\"89\":2}}],[\"f\",{\"1\":{\"125\":1}}],[\"frontmatter\",{\"1\":{\"264\":1,\"267\":1,\"272\":4,\"287\":1,\"288\":1}}],[\"from\",{\"1\":{\"100\":2,\"161\":2,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":4,\"176\":5,\"177\":1,\"178\":6,\"180\":6,\"187\":1,\"188\":1,\"191\":1,\"194\":3,\"195\":5,\"196\":1,\"197\":2,\"198\":1,\"200\":4,\"201\":3,\"203\":4,\"205\":3,\"207\":3,\"212\":1,\"221\":1,\"223\":3,\"225\":3,\"227\":2,\"237\":1,\"238\":3,\"239\":2,\"241\":3,\"250\":1}}],[\"frac\",{\"1\":{\"279\":4}}],[\"fragement\",{\"1\":{\"132\":1}}],[\"fragement的实现原理\",{\"1\":{\"132\":1}}],[\"fragment节点在虚拟dom树中作为一个特殊的节点存在\",{\"1\":{\"136\":1}}],[\"fragment节点\",{\"1\":{\"136\":1}}],[\"fragment\",{\"1\":{\"132\":1,\"133\":1,\"150\":1}}],[\"framework\",{\"1\":{\"16\":1}}],[\"frusts\",{\"1\":{\"131\":1}}],[\"frusts=\",{\"1\":{\"131\":2}}],[\"fruits\",{\"1\":{\"131\":11}}],[\"fruits=\",{\"1\":{\"131\":2}}],[\"found\",{\"1\":{\"304\":1}}],[\"format=json\",{\"1\":{\"200\":1,\"225\":1}}],[\"formatting\",{\"1\":{\"152\":1}}],[\"for=\",{\"1\":{\"163\":1,\"164\":1,\"176\":1,\"178\":1,\"185\":1,\"195\":1,\"210\":1,\"211\":1,\"212\":1,\"241\":1}}],[\"for\",{\"1\":{\"131\":1,\"132\":1,\"152\":5,\"227\":1}}],[\"foreach\",{\"1\":{\"89\":1}}],[\"foo\",{\"1\":{\"89\":8}}],[\"focus\",{\"1\":{\"49\":1,\"60\":1}}],[\"font\",{\"1\":{\"8\":1,\"52\":1,\"66\":2}}],[\"flag\",{\"1\":{\"131\":1}}],[\"flyway\",{\"1\":{\"16\":1}}],[\"flux\",{\"1\":{\"16\":1,\"18\":2}}],[\"fn\",{\"1\":{\"9\":6}}],[\"f0f9ff\",{\"1\":{\"46\":1}}],[\"f0\",{\"1\":{\"9\":6}}],[\"ffff00\",{\"1\":{\"9\":1}}],[\"ff0\",{\"1\":{\"9\":1}}],[\"firefox\",{\"1\":{\"60\":1}}],[\"firstname\",{\"1\":{\"167\":6}}],[\"first\",{\"1\":{\"50\":1,\"52\":2,\"58\":1,\"287\":1}}],[\"filter\",{\"1\":{\"9\":1,\"89\":1,\"227\":1}}],[\"filled\",{\"1\":{\"9\":2}}],[\"fill\",{\"1\":{\"8\":3,\"9\":4}}],[\"field\",{\"1\":{\"8\":1}}],[\"features\",{\"1\":{\"9\":1}}],[\"feature\",{\"1\":{\"8\":2,\"9\":8}}],[\"featurecollection\",{\"1\":{\"8\":1,\"9\":1}}],[\"=值\",{\"1\":{\"131\":1}}],[\"=arr\",{\"1\":{\"89\":1}}],[\"=obj\",{\"1\":{\"89\":1}}],[\"=require\",{\"1\":{\"26\":1}}],[\"===\",{\"1\":{\"73\":2,\"119\":1,\"174\":2}}],[\"==\",{\"1\":{\"9\":4}}],[\"=>import\",{\"1\":{\"225\":1}}],[\"=>person\",{\"1\":{\"172\":2,\"173\":1}}],[\"=>console\",{\"1\":{\"89\":2}}],[\"=>\",{\"1\":{\"9\":6,\"89\":5,\"100\":4,\"114\":2,\"159\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":2,\"172\":5,\"173\":1,\"174\":2,\"176\":1,\"177\":6,\"178\":4,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":6,\"207\":1,\"223\":2,\"234\":1,\"238\":2,\"250\":1}}],[\"=\",{\"1\":{\"8\":2,\"9\":6,\"47\":1,\"53\":2,\"60\":2,\"73\":3,\"75\":2,\"89\":4,\"100\":3,\"108\":7,\"110\":2,\"111\":3,\"112\":2,\"113\":3,\"114\":2,\"115\":1,\"116\":2,\"117\":3,\"119\":1,\"120\":2,\"121\":3,\"122\":3,\"127\":1,\"128\":2,\"129\":2,\"131\":8,\"153\":1,\"158\":4,\"161\":4,\"162\":7,\"163\":5,\"164\":5,\"166\":4,\"167\":10,\"169\":2,\"170\":2,\"171\":5,\"172\":4,\"173\":4,\"174\":4,\"175\":7,\"176\":4,\"177\":1,\"178\":9,\"180\":1,\"182\":2,\"185\":1,\"187\":1,\"188\":1,\"191\":2,\"194\":2,\"195\":4,\"196\":4,\"197\":2,\"198\":3,\"200\":4,\"201\":4,\"202\":2,\"203\":1,\"204\":7,\"205\":5,\"207\":4,\"212\":1,\"214\":1,\"215\":1,\"218\":2,\"219\":2,\"221\":4,\"222\":2,\"223\":5,\"224\":1,\"225\":3,\"231\":2,\"234\":3,\"237\":1,\"238\":3,\"239\":1,\"241\":1,\"250\":2,\"279\":1}}],[\"omega^i\",{\"1\":{\"279\":1}}],[\"omega^r\",{\"1\":{\"279\":1}}],[\"omega\",{\"1\":{\"279\":4}}],[\"overview\",{\"1\":{\"262\":1}}],[\"oldvalue\",{\"1\":{\"169\":2,\"170\":4,\"171\":4,\"172\":8,\"173\":2}}],[\"oldobject\",{\"1\":{\"26\":5}}],[\"oldobject=\",{\"1\":{\"26\":4}}],[\"ok\",{\"1\":{\"111\":2}}],[\"obj变化了\",{\"1\":{\"171\":1}}],[\"obj\",{\"1\":{\"89\":10,\"131\":2,\"163\":3,\"164\":3,\"171\":4,\"200\":2}}],[\"obj=new\",{\"1\":{\"131\":1}}],[\"obj=\",{\"1\":{\"89\":3}}],[\"object\",{\"0\":{\"109\":1},\"1\":{\"26\":2,\"72\":1,\"74\":2,\"86\":1,\"125\":1,\"131\":1,\"142\":1,\"165\":1,\"171\":1}}],[\"odd\",{\"1\":{\"50\":1}}],[\"off\",{\"1\":{\"203\":2}}],[\"of\",{\"1\":{\"9\":1,\"151\":1}}],[\"org\",{\"1\":{\"262\":2}}],[\"orange\",{\"1\":{\"131\":16}}],[\"original\",{\"1\":{\"218\":2,\"219\":2}}],[\"origin\",{\"1\":{\"32\":1}}],[\"or\",{\"1\":{\"9\":2}}],[\"options类型的\",{\"1\":{\"155\":1}}],[\"options\",{\"0\":{\"155\":1,\"160\":1}}],[\"optionsapi\",{\"0\":{\"154\":1}}],[\"option\",{\"1\":{\"100\":1}}],[\"optional<t>\",{\"1\":{\"129\":1}}],[\"optional\",{\"1\":{\"9\":1}}],[\"opacity\",{\"1\":{\"8\":1,\"57\":1}}],[\"one\",{\"1\":{\"145\":2}}],[\"onerrorcaptured\",{\"1\":{\"83\":1}}],[\"onunmounted\",{\"1\":{\"83\":1,\"177\":3,\"203\":2}}],[\"onupdated\",{\"1\":{\"83\":1,\"177\":4}}],[\"onbeforeunmount\",{\"1\":{\"83\":1,\"177\":4}}],[\"onbeforeupdate\",{\"1\":{\"83\":1,\"177\":3}}],[\"onbeforemount\",{\"1\":{\"83\":1,\"177\":3}}],[\"onmounted\",{\"1\":{\"83\":1,\"177\":4,\"178\":4,\"238\":2}}],[\"once\",{\"1\":{\"9\":5}}],[\"only\",{\"1\":{\"9\":1,\"50\":1}}],[\"on\",{\"1\":{\"8\":2,\"9\":12,\"13\":2,\"150\":1,\"203\":4,\"227\":1}}],[\"target\",{\"1\":{\"202\":1,\"204\":7}}],[\"talkstore\",{\"1\":{\"195\":2,\"199\":1}}],[\"talklist就是state\",{\"1\":{\"200\":1}}],[\"talklist\",{\"1\":{\"195\":2,\"199\":1,\"200\":4}}],[\"talk\",{\"1\":{\"195\":6,\"199\":1,\"200\":1}}],[\"t1\",{\"1\":{\"175\":3}}],[\"ts代码如下\",{\"1\":{\"180\":1}}],[\"ts中内容如下\",{\"1\":{\"178\":2}}],[\"ts中操作数据需要\",{\"1\":{\"162\":1}}],[\"ts\",{\"1\":{\"131\":7,\"152\":1,\"153\":1,\"158\":1,\"161\":4,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":3,\"176\":2,\"177\":1,\"178\":2,\"180\":1,\"194\":1,\"195\":4,\"197\":1,\"201\":2,\"203\":1,\"204\":2,\"205\":3,\"207\":2,\"212\":1,\"223\":2,\"225\":1,\"234\":1,\"237\":1,\"238\":2,\"239\":2,\"241\":5,\"245\":2,\"262\":1}}],[\"tsc\",{\"1\":{\"131\":3}}],[\"ts数据类型\",{\"0\":{\"107\":1}}],[\"t\",{\"1\":{\"128\":2,\"129\":4}}],[\"tb\",{\"1\":{\"125\":1}}],[\"tuple\",{\"0\":{\"111\":1},\"1\":{\"111\":3}}],[\"that\",{\"1\":{\"151\":1}}],[\"throw\",{\"1\":{\"123\":1}}],[\"throwerror\",{\"1\":{\"123\":1}}],[\"this指向\",{\"1\":{\"89\":2}}],[\"this\",{\"1\":{\"89\":7,\"100\":1,\"116\":2,\"131\":11,\"153\":3,\"161\":1,\"196\":4,\"198\":1,\"202\":1}}],[\"then\",{\"1\":{\"89\":1}}],[\"the\",{\"1\":{\"9\":3,\"151\":1,\"287\":1}}],[\"td\",{\"1\":{\"46\":1}}],[\"trigger\",{\"1\":{\"223\":3}}],[\"try\",{\"1\":{\"178\":1}}],[\"track\",{\"1\":{\"223\":3}}],[\"trail\",{\"1\":{\"89\":2}}],[\"translate\",{\"1\":{\"8\":1}}],[\"tr\",{\"1\":{\"50\":1}}],[\"true\",{\"1\":{\"9\":1,\"73\":2,\"108\":2,\"131\":1,\"170\":2,\"172\":2,\"173\":1,\"189\":1,\"241\":2}}],[\"toc\",{\"1\":{\"267\":1}}],[\"todos=\",{\"1\":{\"241\":1}}],[\"todos\",{\"1\":{\"241\":4}}],[\"todo\",{\"1\":{\"241\":4}}],[\"todo>\",{\"1\":{\"241\":3}}],[\"todo即为子组件\",{\"1\":{\"241\":1}}],[\"token\",{\"1\":{\"239\":4}}],[\"tony\",{\"1\":{\"221\":1}}],[\"toraw\",{\"0\":{\"220\":1},\"1\":{\"221\":5}}],[\"toref\",{\"0\":{\"166\":1},\"1\":{\"166\":2}}],[\"torefs与toref功能一致\",{\"1\":{\"166\":1}}],[\"torefs\",{\"0\":{\"166\":1},\"1\":{\"166\":2}}],[\"toy事件被触发\",{\"1\":{\"203\":1}}],[\"toy=\",{\"1\":{\"202\":1}}],[\"toy\",{\"1\":{\"201\":6,\"202\":4,\"203\":4,\"206\":1}}],[\"to写法\",{\"1\":{\"184\":3}}],[\"to的对象写法配合name属性\",{\"1\":{\"184\":1}}],[\"to的对象写法\",{\"1\":{\"183\":1,\"187\":1,\"188\":1}}],[\"to的字符串写法\",{\"1\":{\"183\":1,\"184\":1,\"187\":1,\"188\":1}}],[\"to的两种写法\",{\"0\":{\"183\":1}}],[\"to=\",{\"1\":{\"180\":3,\"183\":2,\"184\":3,\"185\":3,\"187\":2,\"188\":2,\"224\":1}}],[\"tobias\",{\"1\":{\"131\":1}}],[\"tofixed\",{\"1\":{\"119\":1}}],[\"touppercase\",{\"1\":{\"119\":1,\"198\":1}}],[\"tostring运行时this指向的对象类型\",{\"1\":{\"74\":1}}],[\"tostring方法是object原型对象上的一个方法\",{\"1\":{\"74\":1}}],[\"tostring\",{\"1\":{\"74\":1,\"131\":1}}],[\"tooltip\",{\"1\":{\"52\":1}}],[\"top\",{\"1\":{\"44\":1,\"53\":1,\"240\":1}}],[\"to\",{\"1\":{\"9\":1,\"13\":1,\"151\":1,\"152\":1}}],[\"tex\",{\"0\":{\"279\":1}}],[\"textures\",{\"1\":{\"9\":1}}],[\"text\",{\"1\":{\"8\":7,\"9\":1,\"89\":1,\"167\":2,\"175\":1,\"204\":4,\"223\":1}}],[\"temp\",{\"1\":{\"174\":7}}],[\"template>\",{\"1\":{\"134\":1,\"152\":1,\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":2,\"176\":2,\"177\":1,\"178\":1,\"180\":1,\"185\":1,\"195\":2,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"210\":1,\"211\":3,\"212\":1,\"223\":1,\"225\":4,\"234\":1,\"238\":1,\"241\":8}}],[\"tel就是一个普通的字符串\",{\"1\":{\"162\":1}}],[\"tel都不是响应式数据\",{\"1\":{\"161\":1}}],[\"tel数据都不是响应式数据\",{\"1\":{\"158\":1}}],[\"tel\",{\"1\":{\"153\":2,\"158\":3,\"161\":2,\"162\":2}}],[\"teleport>\",{\"1\":{\"224\":1}}],[\"teleport\",{\"0\":{\"224\":1},\"1\":{\"150\":1,\"224\":1}}],[\"testing\",{\"1\":{\"152\":2}}],[\"test\",{\"1\":{\"75\":3,\"131\":1,\"151\":2,\"152\":1,\"163\":2,\"164\":2,\"171\":2,\"175\":2}}],[\"tekton\",{\"1\":{\"14\":1,\"18\":1}}],[\"terrarium\",{\"1\":{\"9\":2}}],[\"terrain\",{\"1\":{\"9\":2}}],[\"timer\",{\"1\":{\"223\":3}}],[\"tip\",{\"1\":{\"52\":1}}],[\"title3\",{\"1\":{\"175\":3}}],[\"title2\",{\"1\":{\"175\":3}}],[\"title1\",{\"1\":{\"175\":4}}],[\"title$=\",{\"1\":{\"47\":1}}],[\"title^=\",{\"1\":{\"47\":1}}],[\"title=\",{\"1\":{\"47\":2,\"210\":1,\"211\":1,\"237\":1}}],[\"title\",{\"1\":{\"47\":6,\"180\":1,\"187\":3,\"188\":5,\"189\":1,\"200\":2,\"210\":1,\"211\":1,\"241\":4,\"287\":3}}],[\"titles\",{\"1\":{\"8\":2}}],[\"tiles\",{\"1\":{\"9\":2}}],[\"tilesize\",{\"1\":{\"8\":1}}],[\"types\",{\"0\":{\"108\":1,\"109\":1,\"128\":1,\"129\":1},\"1\":{\"176\":2}}],[\"typescript\",{\"0\":{\"131\":1},\"1\":{\"107\":2,\"108\":1,\"131\":15,\"152\":2,\"250\":1,\"262\":2}}],[\"typeof\",{\"0\":{\"72\":1},\"1\":{\"119\":1}}],[\"type=\",{\"1\":{\"57\":1,\"89\":1,\"152\":1,\"167\":2,\"175\":1,\"204\":4,\"223\":1,\"237\":1}}],[\"type\",{\"0\":{\"9\":1,\"127\":1},\"1\":{\"8\":18,\"9\":5,\"113\":1,\"114\":1,\"119\":1,\"120\":1,\"121\":1,\"127\":1,\"128\":2,\"129\":2,\"132\":3,\"176\":3,\"231\":2}}],[\"version\",{\"1\":{\"151\":2}}],[\"vector\",{\"1\":{\"8\":2}}],[\"vol\",{\"1\":{\"131\":1}}],[\"void\",{\"0\":{\"124\":1},\"1\":{\"124\":1,\"131\":7}}],[\"v\",{\"0\":{\"204\":1},\"1\":{\"131\":1,\"134\":2,\"150\":1,\"163\":1,\"164\":1,\"167\":2,\"176\":1,\"178\":2,\"185\":1,\"195\":1,\"204\":7,\"205\":2,\"210\":1,\"211\":2,\"212\":3,\"223\":1,\"224\":1,\"225\":2,\"227\":9,\"236\":4,\"241\":4}}],[\"vuepress\",{\"0\":{\"274\":1},\"1\":{\"270\":2,\"272\":2,\"273\":1,\"274\":2,\"275\":1,\"289\":1}}],[\"vue组件通信方式\",{\"0\":{\"230\":1},\"2\":{\"243\":1}}],[\"vue组件实例在创建时要经历一系列的初始化步骤\",{\"1\":{\"177\":1}}],[\"vue代码如下\",{\"1\":{\"180\":1}}],[\"vue中代码\",{\"1\":{\"176\":2}}],[\"vue中要使用defineexpose暴露内容\",{\"1\":{\"175\":1}}],[\"vuesetupextend\",{\"1\":{\"161\":2}}],[\"vuejs\",{\"1\":{\"145\":1,\"262\":1}}],[\"vue2组件之间的通信方式\",{\"1\":{\"230\":1}}],[\"vue2的生命周期\",{\"1\":{\"177\":1}}],[\"vue2的api设计是options\",{\"1\":{\"154\":1}}],[\"vue2\",{\"1\":{\"142\":1,\"160\":1,\"182\":1}}],[\"vue3定于组件名字的几种方法\",{\"0\":{\"244\":1}}],[\"vue3提供两个方法provide与inject\",{\"1\":{\"239\":1}}],[\"vue3组件之间的通信方式\",{\"1\":{\"230\":1}}],[\"vue3组件通信和vue2的区别\",{\"1\":{\"200\":1}}],[\"vue3中要使用vue\",{\"1\":{\"180\":1}}],[\"vue3中的watch只能监视以下四种数据\",{\"1\":{\"168\":1}}],[\"vue3写法\",{\"1\":{\"177\":1}}],[\"vue3的生命周期\",{\"1\":{\"177\":1}}],[\"vue3的api设计是composition\",{\"1\":{\"154\":1}}],[\"vue3向下兼容vue2语法\",{\"1\":{\"153\":1}}],[\"vue3简介\",{\"0\":{\"145\":1}}],[\"vue3\",{\"0\":{\"144\":1},\"1\":{\"142\":1,\"152\":2,\"182\":1,\"262\":1},\"2\":{\"229\":1}}],[\"vue3为什么使用proxy\",{\"0\":{\"141\":1}}],[\"vue3新特性\",{\"0\":{\"139\":1}}],[\"vue3会生成如下的虚拟结构\",{\"1\":{\"132\":1}}],[\"vuex换成了pinia\",{\"1\":{\"200\":1}}],[\"vuex是一个不错的选择\",{\"1\":{\"101\":1}}],[\"vuex和pinia各有优缺点\",{\"1\":{\"101\":1}}],[\"vuex和pinia都是用于vue\",{\"1\":{\"101\":1}}],[\"vuex的模块化允许将状态管理拆分成多个模块\",{\"1\":{\"101\":1}}],[\"vuex\",{\"1\":{\"101\":3,\"230\":1}}],[\"vue还使用了发布者\",{\"1\":{\"79\":1}}],[\"vue能够拦截对象属性的读写操作\",{\"1\":{\"79\":1}}],[\"vue能够自动更新视图\",{\"1\":{\"78\":1}}],[\"vue可以劫持对象的属性\",{\"1\":{\"78\":1}}],[\"vue使用v\",{\"1\":{\"78\":1}}],[\"vue\",{\"0\":{\"83\":1,\"151\":1},\"1\":{\"78\":1,\"83\":1,\"131\":2,\"132\":2,\"133\":4,\"134\":1,\"135\":1,\"136\":4,\"137\":1,\"141\":1,\"145\":1,\"151\":9,\"152\":2,\"161\":2,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":5,\"176\":3,\"177\":1,\"178\":3,\"180\":5,\"185\":1,\"187\":1,\"188\":1,\"191\":1,\"194\":2,\"200\":1,\"201\":3,\"203\":1,\"205\":3,\"207\":3,\"212\":1,\"221\":2,\"223\":2,\"225\":3,\"237\":1,\"238\":3,\"239\":2,\"241\":3,\"247\":1,\"249\":1,\"250\":1,\"290\":2}}],[\"vue的双向绑定原理主要基于object\",{\"1\":{\"79\":1}}],[\"vue的双向绑定原理\",{\"0\":{\"79\":1}}],[\"vue的双向绑定的原理\",{\"0\":{\"78\":1}}],[\"vue的数据劫持基于object\",{\"1\":{\"78\":1,\"80\":1}}],[\"vue和angular都为开发者提供了灵活的双向绑定选项\",{\"1\":{\"78\":1}}],[\"vue与angular以及react的区别\",{\"0\":{\"77\":1}}],[\"v3\",{\"1\":{\"13\":1,\"145\":1}}],[\"v4\",{\"1\":{\"13\":1}}],[\"vnode=\",{\"1\":{\"132\":1}}],[\"vn\",{\"1\":{\"9\":4}}],[\"v0\",{\"1\":{\"9\":4}}],[\"val\",{\"1\":{\"167\":5}}],[\"value事件\",{\"1\":{\"204\":1}}],[\"value=\",{\"1\":{\"204\":6}}],[\"value作为props传给detail组件\",{\"1\":{\"189\":2}}],[\"value是响应式的\",{\"1\":{\"162\":2}}],[\"value为什么reactive\",{\"0\":{\"105\":1}}],[\"value++\",{\"1\":{\"100\":1,\"250\":1}}],[\"value\",{\"1\":{\"9\":8,\"89\":2,\"100\":1,\"162\":9,\"164\":3,\"165\":2,\"166\":3,\"167\":10,\"169\":1,\"170\":3,\"174\":8,\"175\":5,\"177\":1,\"178\":2,\"196\":5,\"199\":1,\"201\":3,\"203\":7,\"204\":6,\"205\":3,\"207\":3,\"223\":2,\"238\":1}}],[\"var\",{\"1\":{\"8\":1,\"9\":2,\"89\":10,\"131\":34}}],[\"view>\",{\"1\":{\"185\":1}}],[\"views文件夹\",{\"1\":{\"181\":1}}],[\"vitest\",{\"1\":{\"152\":1}}],[\"vite构建对比图如下\",{\"1\":{\"152\":1}}],[\"vite的优势如下\",{\"1\":{\"152\":1}}],[\"vitejs\",{\"1\":{\"152\":1}}],[\"vite\",{\"0\":{\"152\":1},\"1\":{\"151\":1,\"152\":3,\"161\":4,\"247\":1,\"256\":1}}],[\"virtual\",{\"1\":{\"133\":1}}],[\"visited\",{\"1\":{\"49\":1}}],[\"visible\",{\"1\":{\"8\":3,\"60\":1}}],[\"visibility\",{\"1\":{\"8\":3}}],[\"visualization\",{\"1\":{\"9\":1}}],[\"video\",{\"1\":{\"8\":2}}],[\"customref\",{\"0\":{\"223\":1},\"1\":{\"223\":2}}],[\"cursor\",{\"1\":{\"59\":1}}],[\"currently\",{\"1\":{\"9\":1}}],[\"c=\",{\"1\":{\"205\":1}}],[\"c=3\",{\"1\":{\"89\":1}}],[\"ceo\",{\"1\":{\"178\":1}}],[\"cecilie\",{\"1\":{\"131\":1}}],[\"c2\",{\"1\":{\"172\":4,\"173\":4}}],[\"c1\",{\"1\":{\"172\":4,\"173\":4}}],[\"c<\",{\"1\":{\"171\":1}}],[\"cn\",{\"1\":{\"152\":1,\"262\":2}}],[\"cnpm\",{\"1\":{\"131\":1}}],[\"csdn\",{\"1\":{\"81\":1,\"83\":1,\"94\":1,\"262\":1}}],[\"css预处理器等\",{\"1\":{\"258\":1}}],[\"css\",{\"0\":{\"34\":1,\"35\":1},\"1\":{\"61\":1,\"152\":1,\"258\":1}}],[\"category\",{\"1\":{\"212\":2}}],[\"category>\",{\"1\":{\"210\":1,\"211\":1}}],[\"catch\",{\"1\":{\"178\":1}}],[\"case式\",{\"1\":{\"202\":1}}],[\"car=\",{\"1\":{\"201\":1}}],[\"car变化了\",{\"1\":{\"172\":3,\"173\":1}}],[\"car\",{\"1\":{\"163\":4,\"164\":5,\"165\":1,\"172\":9,\"173\":7,\"201\":5,\"207\":8}}],[\"call\",{\"1\":{\"74\":1,\"89\":4,\"131\":1}}],[\"cap\",{\"1\":{\"8\":1}}],[\"changage\",{\"1\":{\"161\":2}}],[\"changname\",{\"1\":{\"161\":2}}],[\"change\",{\"1\":{\"232\":1,\"233\":1}}],[\"changeprice\",{\"1\":{\"174\":2}}],[\"changeperson\",{\"1\":{\"170\":2,\"171\":2}}],[\"changecar\",{\"1\":{\"172\":2,\"173\":2}}],[\"changecarprice\",{\"1\":{\"163\":2,\"164\":2}}],[\"changec2\",{\"1\":{\"172\":2,\"173\":2}}],[\"changec1\",{\"1\":{\"172\":2,\"173\":2}}],[\"changesum\",{\"1\":{\"169\":2,\"174\":2,\"177\":2}}],[\"changefullname\",{\"1\":{\"167\":2}}],[\"changefirstgame\",{\"1\":{\"163\":2,\"164\":2}}],[\"changegender\",{\"1\":{\"166\":2}}],[\"changeage\",{\"1\":{\"153\":2,\"158\":3,\"162\":2,\"166\":2,\"170\":2,\"171\":2,\"172\":2,\"173\":2}}],[\"changename\",{\"1\":{\"153\":2,\"158\":3,\"162\":2,\"166\":2,\"170\":2,\"171\":2,\"172\":2,\"173\":2}}],[\"choose\",{\"1\":{\"151\":1}}],[\"chrome\",{\"1\":{\"60\":1}}],[\"checktype<number>\",{\"1\":{\"128\":1}}],[\"checktype<t>\",{\"1\":{\"128\":1}}],[\"checkbox\",{\"1\":{\"57\":1}}],[\"checked\",{\"1\":{\"51\":1,\"57\":1}}],[\"checkout\",{\"1\":{\"13\":2}}],[\"child>\",{\"1\":{\"231\":1,\"236\":2}}],[\"children\",{\"1\":{\"132\":3,\"185\":1}}],[\"child\",{\"1\":{\"50\":5,\"58\":1,\"201\":4,\"205\":5,\"207\":3,\"225\":3}}],[\"c\",{\"1\":{\"32\":2,\"89\":2,\"125\":1,\"131\":5,\"163\":3,\"164\":3,\"171\":3,\"189\":1,\"205\":4}}],[\"cf\",{\"1\":{\"13\":1}}],[\"createwebhashhistory\",{\"1\":{\"182\":1}}],[\"createwebhistory\",{\"1\":{\"180\":2,\"182\":2,\"185\":1}}],[\"createrouter\",{\"1\":{\"180\":2,\"182\":2,\"185\":1}}],[\"created\",{\"1\":{\"177\":1}}],[\"createapp\",{\"1\":{\"152\":1,\"194\":2}}],[\"createpinia\",{\"1\":{\"100\":2,\"194\":2}}],[\"create\",{\"1\":{\"13\":1,\"151\":1,\"152\":1}}],[\"credentials\",{\"1\":{\"13\":1}}],[\"citys\",{\"1\":{\"221\":2,\"222\":2}}],[\"citys2\",{\"1\":{\"221\":2,\"222\":1}}],[\"citysd\",{\"1\":{\"221\":1}}],[\"ci​\",{\"1\":{\"13\":1}}],[\"ci\",{\"1\":{\"13\":5,\"14\":2,\"15\":1,\"18\":1}}],[\"circleci\",{\"1\":{\"13\":1,\"15\":2,\"18\":1}}],[\"circle\",{\"1\":{\"8\":1,\"9\":8,\"115\":3}}],[\"cdots\",{\"1\":{\"279\":1}}],[\"cd专用解决方案\",{\"1\":{\"16\":1}}],[\"cd工作流\",{\"1\":{\"14\":1}}],[\"cd工具自动检测镜像更新\",{\"1\":{\"19\":1}}],[\"cd工具\",{\"1\":{\"14\":1}}],[\"cd工具之一\",{\"1\":{\"13\":1}}],[\"cd框架\",{\"1\":{\"14\":1}}],[\"cd是当前最佳实践\",{\"1\":{\"13\":1}}],[\"cd类似\",{\"1\":{\"13\":1}}],[\"cd服务\",{\"1\":{\"13\":2}}],[\"cd模块\",{\"1\":{\"13\":1}}],[\"cd解决方案\",{\"1\":{\"13\":1}}],[\"cd​\",{\"1\":{\"13\":2}}],[\"cd\",{\"1\":{\"13\":4,\"14\":2,\"15\":1,\"16\":1,\"17\":1,\"18\":4,\"151\":1}}],[\"cd‌概念\",{\"0\":{\"12\":1}}],[\"cleartimeout\",{\"1\":{\"223\":1}}],[\"clear\",{\"1\":{\"203\":2}}],[\"clonedeep\",{\"1\":{\"26\":1}}],[\"cloud\",{\"1\":{\"15\":2}}],[\"cloudfront\",{\"1\":{\"13\":1}}],[\"cloudflare等\",{\"1\":{\"13\":1}}],[\"class2\",{\"1\":{\"68\":1}}],[\"class1\",{\"1\":{\"68\":1}}],[\"class~=\",{\"1\":{\"47\":1}}],[\"class=\",{\"1\":{\"38\":1,\"61\":1,\"152\":1,\"153\":1,\"158\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"177\":1,\"180\":7,\"183\":2,\"185\":3,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"210\":1,\"211\":1,\"212\":1,\"223\":1,\"224\":1,\"225\":2}}],[\"class==street\",{\"1\":{\"9\":6}}],[\"class\",{\"0\":{\"38\":1,\"61\":1,\"116\":1},\"1\":{\"9\":4,\"61\":1,\"68\":1,\"116\":1,\"131\":7}}],[\"cli版本在4\",{\"1\":{\"151\":1}}],[\"cli版本\",{\"1\":{\"151\":1}}],[\"cli已处于维护模式\",{\"1\":{\"151\":1}}],[\"cli\",{\"0\":{\"151\":1},\"1\":{\"151\":2}}],[\"client\",{\"1\":{\"9\":1}}],[\"click应该为原生dom事件\",{\"1\":{\"234\":1}}],[\"click=\",{\"1\":{\"153\":3,\"158\":3,\"161\":3,\"162\":3,\"163\":3,\"164\":3,\"166\":3,\"167\":1,\"169\":1,\"170\":3,\"171\":4,\"172\":5,\"173\":5,\"174\":2,\"175\":2,\"177\":1,\"178\":3,\"201\":1,\"202\":1,\"205\":1,\"207\":3,\"224\":1,\"233\":2,\"234\":2,\"237\":1,\"238\":1}}],[\"click\",{\"1\":{\"8\":1,\"9\":2,\"202\":1,\"234\":1}}],[\"core\",{\"1\":{\"145\":1}}],[\"cors\",{\"1\":{\"32\":1}}],[\"count和increment函数都不需要使用this\",{\"1\":{\"250\":1}}],[\"countstore\",{\"1\":{\"196\":4,\"197\":2,\"198\":2}}],[\"count读取state\",{\"1\":{\"100\":1}}],[\"count++\",{\"1\":{\"100\":1}}],[\"count\",{\"1\":{\"100\":6,\"108\":1,\"195\":4,\"196\":1,\"197\":3,\"198\":1,\"250\":3}}],[\"counter\",{\"1\":{\"100\":4}}],[\"col\",{\"1\":{\"46\":3}}],[\"color=color\",{\"1\":{\"131\":1}}],[\"color\",{\"1\":{\"8\":4,\"9\":10,\"37\":1,\"38\":1,\"45\":1,\"58\":1,\"63\":2,\"65\":2,\"69\":4,\"115\":2,\"131\":1,\"152\":1,\"241\":1}}],[\"component\",{\"1\":{\"180\":2,\"181\":1,\"184\":3,\"185\":4,\"189\":1,\"226\":1,\"262\":1}}],[\"components\",{\"1\":{\"175\":1,\"176\":1}}],[\"compositionapi\",{\"0\":{\"154\":1}}],[\"composition\",{\"0\":{\"156\":1},\"1\":{\"150\":1,\"158\":1,\"249\":1}}],[\"computed中的\",{\"1\":{\"155\":1}}],[\"computed与watch\",{\"1\":{\"150\":1}}],[\"computed\",{\"0\":{\"167\":1},\"1\":{\"100\":1,\"155\":1,\"167\":3,\"195\":1}}],[\"computed和watch区别\",{\"0\":{\"30\":1}}],[\"com\",{\"1\":{\"32\":13,\"200\":1,\"225\":1,\"235\":1,\"262\":3,\"263\":1}}],[\"cookie\",{\"1\":{\"32\":1}}],[\"coordinates\",{\"1\":{\"8\":3,\"9\":1,\"127\":1}}],[\"coding\",{\"1\":{\"26\":4}}],[\"codebuild集成\",{\"1\":{\"15\":1}}],[\"codepipeline\",{\"1\":{\"15\":1,\"18\":1}}],[\"code\",{\"1\":{\"13\":1,\"152\":2,\"263\":1}}],[\"codecommit\",{\"1\":{\"13\":1}}],[\"codedeploy​\",{\"1\":{\"13\":1}}],[\"config\",{\"1\":{\"161\":1,\"226\":1}}],[\"configure\",{\"1\":{\"13\":1}}],[\"concat\",{\"1\":{\"131\":2}}],[\"conditional\",{\"0\":{\"128\":1}}],[\"content=欢迎你\",{\"1\":{\"187\":1}}],[\"content\",{\"1\":{\"52\":2,\"56\":1,\"180\":1,\"187\":2,\"188\":1,\"189\":1,\"195\":4,\"200\":1,\"225\":2}}],[\"constactor\",{\"1\":{\"131\":1}}],[\"constractor\",{\"1\":{\"131\":2}}],[\"constructor\",{\"0\":{\"75\":1},\"1\":{\"75\":5,\"116\":1,\"131\":1}}],[\"const\",{\"1\":{\"26\":9,\"73\":2,\"89\":2,\"100\":3,\"108\":7,\"110\":2,\"113\":1,\"114\":1,\"115\":1,\"117\":1,\"120\":1,\"121\":1,\"122\":1,\"132\":1,\"167\":1,\"169\":1,\"174\":2,\"175\":1,\"176\":1,\"178\":3,\"180\":1,\"182\":2,\"185\":1,\"187\":1,\"188\":1,\"191\":2,\"194\":2,\"195\":4,\"196\":2,\"197\":2,\"198\":2,\"200\":2,\"201\":3,\"203\":1,\"204\":2,\"215\":1,\"218\":2,\"219\":2,\"225\":1,\"234\":1,\"238\":2,\"250\":2}}],[\"console\",{\"1\":{\"9\":3,\"89\":10,\"119\":2,\"124\":1,\"131\":5,\"158\":2,\"161\":2,\"162\":2,\"164\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":2,\"172\":4,\"173\":1,\"174\":4,\"175\":8,\"176\":1,\"177\":7,\"178\":1,\"187\":1,\"188\":1,\"191\":4,\"199\":1,\"203\":3,\"221\":4,\"225\":1,\"238\":1}}],[\"leave\",{\"1\":{\"227\":2}}],[\"lemon\",{\"1\":{\"131\":8}}],[\"length\",{\"1\":{\"131\":1}}],[\"let\",{\"1\":{\"89\":14,\"111\":1,\"112\":1,\"122\":1,\"158\":3,\"161\":3,\"162\":4,\"163\":4,\"164\":3,\"166\":3,\"167\":4,\"169\":1,\"170\":1,\"171\":2,\"172\":1,\"173\":1,\"174\":2,\"175\":6,\"176\":2,\"177\":1,\"178\":5,\"198\":1,\"200\":2,\"205\":4,\"207\":4,\"212\":1,\"214\":1,\"221\":4,\"222\":2,\"223\":4,\"225\":2,\"231\":2,\"234\":2,\"237\":1,\"238\":1,\"239\":1,\"241\":1}}],[\"letter\",{\"1\":{\"52\":1}}],[\"leftval\",{\"1\":{\"73\":5}}],[\"left\",{\"1\":{\"73\":2,\"279\":3}}],[\"level>=3\",{\"1\":{\"9\":6}}],[\"level\",{\"1\":{\"9\":3}}],[\"lnglat所对应\",{\"1\":{\"9\":1}}],[\"lnglat\",{\"1\":{\"9\":1}}],[\"list\",{\"1\":{\"176\":5,\"185\":1}}],[\"list=\",{\"1\":{\"176\":1}}],[\"li>\",{\"1\":{\"163\":1,\"164\":1,\"176\":1,\"195\":1,\"210\":1,\"211\":1,\"212\":1,\"241\":1}}],[\"literal\",{\"0\":{\"121\":1}}],[\"linus\",{\"1\":{\"131\":1}}],[\"link>\",{\"1\":{\"183\":2,\"184\":3,\"185\":2,\"187\":1}}],[\"link\",{\"1\":{\"49\":1,\"183\":2,\"184\":3,\"185\":2,\"187\":1}}],[\"linemetrics\",{\"1\":{\"9\":1}}],[\"line\",{\"1\":{\"8\":8,\"9\":14,\"42\":1,\"52\":1}}],[\"linestring\",{\"1\":{\"8\":3}}],[\"li\",{\"1\":{\"43\":1,\"50\":3,\"167\":2}}],[\"liquibase\",{\"1\":{\"16\":1}}],[\"limited\",{\"1\":{\"9\":12}}],[\"lovetalk\",{\"1\":{\"199\":1}}],[\"lone\",{\"1\":{\"131\":1}}],[\"location\",{\"1\":{\"32\":1}}],[\"localstorage\",{\"1\":{\"32\":1,\"199\":1,\"200\":1}}],[\"lodash\",{\"1\":{\"26\":1}}],[\"lodash的clonedeep\",{\"1\":{\"26\":2}}],[\"logclass\",{\"1\":{\"131\":2}}],[\"logmsg\",{\"1\":{\"124\":1}}],[\"log\",{\"1\":{\"9\":3,\"89\":13,\"119\":2,\"124\":1,\"131\":5,\"158\":2,\"161\":2,\"162\":2,\"164\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":2,\"172\":4,\"173\":1,\"174\":4,\"175\":8,\"176\":1,\"177\":7,\"178\":1,\"187\":1,\"188\":1,\"191\":4,\"199\":1,\"203\":3,\"221\":4,\"225\":1,\"238\":1,\"279\":2}}],[\"loader类型\",{\"0\":{\"254\":1}}],[\"load\",{\"1\":{\"8\":1,\"9\":2}}],[\"lang=\",{\"1\":{\"152\":1,\"153\":1,\"158\":1,\"161\":3,\"162\":1,\"163\":1,\"164\":1,\"166\":1,\"167\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":3,\"176\":2,\"177\":1,\"178\":2,\"180\":1,\"195\":2,\"197\":1,\"201\":2,\"204\":2,\"205\":3,\"207\":2,\"212\":1,\"223\":1,\"225\":1,\"234\":1,\"237\":1,\"238\":2,\"239\":2,\"241\":5,\"245\":2}}],[\"lang|=\",{\"1\":{\"47\":2}}],[\"large\",{\"1\":{\"121\":1}}],[\"lastname\",{\"1\":{\"167\":6}}],[\"lastindexof\",{\"1\":{\"89\":1}}],[\"last\",{\"1\":{\"50\":1}}],[\"lab\",{\"1\":{\"32\":1}}],[\"label\",{\"1\":{\"9\":1}}],[\"latest\",{\"1\":{\"13\":1,\"152\":1}}],[\"lambda\",{\"1\":{\"13\":1}}],[\"layout\",{\"1\":{\"8\":3}}],[\"添加新元素\",{\"1\":{\"131\":1}}],[\"添加了一些扩展\",{\"1\":{\"131\":1}}],[\"添加矢量点\",{\"1\":{\"9\":1}}],[\"添加监听事件\",{\"1\":{\"9\":2}}],[\"添加监听地图点击完事件\",{\"1\":{\"8\":1}}],[\"添加监听地图加载完事件\",{\"1\":{\"8\":1}}],[\"添加图标\",{\"1\":{\"9\":1}}],[\"添加的地图\",{\"0\":{\"9\":1}}],[\"添加点图层\",{\"1\":{\"8\":1}}],[\"添加点\",{\"1\":{\"8\":1}}],[\"添加面\",{\"1\":{\"8\":2}}],[\"添加相对应坐标\",{\"1\":{\"8\":1}}],[\"添加线的类型应该设置为\",{\"1\":{\"8\":1}}],[\"添加数据线\",{\"1\":{\"8\":1}}],[\"收集线数据\",{\"1\":{\"8\":1}}],[\"面向对象编程实例\",{\"1\":{\"131\":1}}],[\"面\",{\"0\":{\"8\":1},\"1\":{\"8\":1,\"9\":1}}],[\"线类型\",{\"1\":{\"8\":1}}],[\"线的渐变\",{\"1\":{\"9\":1}}],[\"线的的偏移量\",{\"1\":{\"8\":1}}],[\"线的透明度\",{\"1\":{\"8\":1}}],[\"线的宽度\",{\"1\":{\"8\":1}}],[\"线的颜色\",{\"1\":{\"8\":1}}],[\"线显示的类型\",{\"1\":{\"8\":1}}],[\"线\",{\"0\":{\"8\":1},\"1\":{\"8\":1,\"9\":1}}],[\"点击查看官方文档\",{\"1\":{\"151\":1,\"152\":1}}],[\"点类型\",{\"1\":{\"8\":1}}],[\"点数据\",{\"1\":{\"8\":2}}],[\"点\",{\"0\":{\"8\":1},\"1\":{\"8\":1,\"9\":1}}],[\"a替换\",{\"1\":{\"241\":1}}],[\"a>\",{\"1\":{\"211\":1,\"241\":1}}],[\"a=\",{\"1\":{\"205\":1,\"212\":1}}],[\"a=1\",{\"1\":{\"89\":1,\"187\":1}}],[\"abc=\",{\"1\":{\"204\":4}}],[\"abc事件被触发\",{\"1\":{\"203\":1}}],[\"abc\",{\"1\":{\"203\":2,\"204\":4}}],[\"about\",{\"1\":{\"180\":5,\"184\":3,\"185\":2,\"192\":1}}],[\"atguiguinput\",{\"1\":{\"204\":2}}],[\"atguiguinput组件中\",{\"1\":{\"204\":2}}],[\"atguigu\",{\"1\":{\"196\":1,\"198\":1}}],[\"att=`我的名字是\",{\"1\":{\"89\":1}}],[\"att=\",{\"1\":{\"89\":1}}],[\"attr\",{\"1\":{\"52\":1}}],[\"await\",{\"1\":{\"178\":1,\"200\":1,\"225\":1}}],[\"aws生态\",{\"1\":{\"18\":1}}],[\"aws原生的部署服务\",{\"1\":{\"13\":1}}],[\"aws\",{\"1\":{\"13\":11,\"15\":1}}],[\"axioserror\",{\"1\":{\"178\":1}}],[\"axios\",{\"1\":{\"178\":3,\"195\":2,\"200\":3,\"225\":3}}],[\"ahsgdyfa03\",{\"1\":{\"163\":1,\"164\":1}}],[\"ahsgdyfa02\",{\"1\":{\"163\":1,\"164\":1}}],[\"ahsgdyfa01\",{\"1\":{\"163\":1,\"164\":1}}],[\"a+b+c\",{\"1\":{\"131\":1}}],[\"alert\",{\"1\":{\"131\":3,\"153\":1,\"158\":1,\"161\":1,\"162\":1}}],[\"alice\",{\"1\":{\"108\":1,\"110\":1,\"113\":1}}],[\"all=\",{\"1\":{\"131\":1}}],[\"allowed\",{\"1\":{\"59\":1}}],[\"all\",{\"1\":{\"9\":4,\"203\":2}}],[\"application\",{\"1\":{\"152\":1}}],[\"apple\",{\"1\":{\"131\":15}}],[\"apply\",{\"1\":{\"89\":4}}],[\"app\",{\"1\":{\"100\":1,\"152\":3,\"153\":1,\"167\":1,\"175\":1,\"176\":2,\"178\":1,\"180\":6,\"194\":7,\"223\":2,\"225\":1,\"226\":6}}],[\"api进行了封装\",{\"1\":{\"178\":1}}],[\"apiurl=\",{\"1\":{\"131\":1}}],[\"api紧密集成\",{\"1\":{\"101\":1}}],[\"api的一部分\",{\"1\":{\"83\":1}}],[\"api\",{\"0\":{\"7\":1,\"155\":1,\"156\":1,\"160\":1},\"1\":{\"150\":1,\"155\":1,\"158\":1,\"178\":1,\"200\":2,\"216\":1,\"225\":2,\"249\":1}}],[\"avgs\",{\"1\":{\"89\":1}}],[\"avgs=\",{\"1\":{\"89\":1}}],[\"after\",{\"1\":{\"52\":1,\"53\":1,\"56\":1}}],[\"arrow\",{\"1\":{\"151\":1}}],[\"arry\",{\"1\":{\"131\":1}}],[\"arr2=\",{\"1\":{\"89\":1}}],[\"arr1=arr\",{\"1\":{\"89\":1}}],[\"arr\",{\"1\":{\"89\":5,\"131\":2}}],[\"arr=\",{\"1\":{\"89\":2}}],[\"array<personinter>\",{\"1\":{\"176\":1}}],[\"array<number>=\",{\"1\":{\"131\":1}}],[\"array<string>\",{\"1\":{\"110\":1}}],[\"array\",{\"1\":{\"73\":1,\"125\":1,\"131\":1}}],[\"article\",{\"1\":{\"42\":2,\"59\":1,\"81\":1,\"83\":1,\"94\":1,\"262\":1}}],[\"argo\",{\"1\":{\"13\":1,\"14\":1,\"18\":3}}],[\"ajax\",{\"1\":{\"32\":1}}],[\"age=90\",{\"1\":{\"131\":1}}],[\"age\",{\"1\":{\"26\":4,\"89\":4,\"113\":1,\"131\":9,\"153\":3,\"158\":6,\"161\":5,\"162\":4,\"166\":5,\"170\":4,\"171\":6,\"172\":3,\"173\":3,\"175\":3,\"176\":6,\"221\":1}}],[\"action中可以编写一些业务逻辑\",{\"1\":{\"196\":1}}],[\"action\",{\"1\":{\"195\":1}}],[\"actions在开源项目占比超60\",{\"1\":{\"18\":1}}],[\"actions\",{\"1\":{\"13\":6,\"15\":1,\"18\":2,\"100\":1,\"195\":2,\"196\":1,\"198\":1}}],[\"actions​\",{\"1\":{\"13\":1}}],[\"active\",{\"1\":{\"46\":2,\"47\":1,\"49\":1,\"53\":2,\"61\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":2,\"67\":2,\"68\":2,\"69\":3,\"180\":6,\"183\":4}}],[\"access\",{\"1\":{\"13\":3}}],[\"azure部署优化\",{\"1\":{\"15\":1}}],[\"azure\",{\"1\":{\"13\":2,\"15\":2}}],[\"ad\",{\"1\":{\"59\":1}}],[\"admin\",{\"1\":{\"9\":9,\"120\":3,\"125\":1,\"239\":1}}],[\"addfunc\",{\"1\":{\"114\":2}}],[\"add\",{\"1\":{\"89\":2,\"114\":1,\"152\":8}}],[\"addto\",{\"1\":{\"9\":1}}],[\"addsouce\",{\"1\":{\"8\":1}}],[\"addsource\",{\"1\":{\"8\":8,\"9\":1}}],[\"addlayer\",{\"1\":{\"8\":4,\"9\":1}}],[\"asdda04\",{\"1\":{\"221\":1,\"222\":1}}],[\"asdda03\",{\"1\":{\"221\":1,\"222\":1}}],[\"asdda02\",{\"1\":{\"221\":1,\"222\":1}}],[\"asdda01\",{\"1\":{\"221\":1,\"222\":1}}],[\"asdasg01\",{\"1\":{\"176\":1}}],[\"asgdytsa04\",{\"1\":{\"212\":1}}],[\"asgdytsa03\",{\"1\":{\"212\":1}}],[\"asgdytsa02\",{\"1\":{\"212\":1}}],[\"asgdytsa01\",{\"1\":{\"212\":1}}],[\"async\",{\"1\":{\"178\":1,\"200\":1}}],[\"assign去整体替换\",{\"1\":{\"165\":1}}],[\"assign\",{\"1\":{\"26\":4,\"165\":1,\"171\":1}}],[\"as\",{\"1\":{\"9\":1,\"175\":1,\"178\":1,\"200\":1,\"287\":1}}],[\"any\",{\"0\":{\"112\":1},\"1\":{\"9\":3,\"112\":1,\"122\":2,\"125\":1,\"131\":7}}],[\"and\",{\"1\":{\"9\":2}}],[\"an\",{\"1\":{\"9\":3,\"152\":1}}],[\"angular常用的生命周期\",{\"0\":{\"82\":1}}],[\"angular会检查整个数据模型\",{\"1\":{\"80\":1}}],[\"angular会遍历整个数据模型来查找变化\",{\"1\":{\"78\":1}}],[\"angular会遍历整个数据模型\",{\"1\":{\"78\":1}}],[\"angular的双向绑定原理基于其核心特性\",{\"1\":{\"80\":1}}],[\"angular的双向绑定原理\",{\"0\":{\"80\":1}}],[\"angular使用\",{\"1\":{\"78\":1}}],[\"angular\",{\"0\":{\"81\":1},\"1\":{\"78\":1,\"82\":2}}],[\"angular里面的服务\",{\"0\":{\"5\":1}}],[\"angular里面的管道\",{\"0\":{\"3\":1}}],[\"angular依赖注入\",{\"0\":{\"1\":1}}],[\"a\",{\"1\":{\"9\":6,\"32\":6,\"49\":4,\"53\":1,\"56\":1,\"89\":4,\"114\":3,\"125\":1,\"131\":3,\"151\":1,\"163\":3,\"164\":3,\"171\":4,\"189\":1,\"205\":5,\"241\":1}}],[\"跑步和健⾝\",{\"1\":{\"0\":1}}],[\"喜欢听歌看电影\",{\"1\":{\"0\":1}}],[\"喜欢球类运动\",{\"1\":{\"0\":1}}],[\"喜欢尝试新鲜事物\",{\"1\":{\"0\":1}}],[\"喜欢⼴交朋友\",{\"1\":{\"0\":1}}]],\"version\":2}"